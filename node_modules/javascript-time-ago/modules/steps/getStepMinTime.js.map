{"version":3,"sources":["../../source/steps/getStepMinTime.js"],"names":["getSecondsInUnit","getDiffRatioToNextRoundedNumber","getStepMinTime","step","prevStep","timestamp","now","future","round","minTime","id","unit","undefined","threshold","default","getMinTimeForUnit","toUnit","fromUnit","formatAs","test","console","warn","JSON","stringify","toUnitAmount","fromUnitAmount"],"mappings":"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","sourcesContent":["import { getSecondsInUnit } from './units'\r\nimport { getDiffRatioToNextRoundedNumber } from '../round'\r\n\r\nexport default function getStepMinTime(step, {\r\n\tprevStep,\r\n\ttimestamp,\r\n\t// `now` argument is used in a deprecated `step.test()` function.\r\n\tnow,\r\n\tfuture,\r\n\tround\r\n}) {\r\n\tlet minTime\r\n\t// \"threshold_for_xxx\" is a legacy property.\r\n\tif (prevStep) {\r\n\t\tif (prevStep.id || prevStep.unit) {\r\n\t\t\tminTime = step[`threshold_for_${prevStep.id || prevStep.unit}`]\r\n\t\t}\r\n\t}\r\n\tif (minTime === undefined) {\r\n\t\t// \"threshold\" is a legacy property.\r\n\t\tif (step.threshold !== undefined) {\r\n\t\t\t// \"threshold\" is a legacy name for \"minTime\".\r\n\t\t\tminTime = step.threshold\r\n\t\t\t// \"threshold\" function is deprecated.\r\n\t\t\tif (typeof minTime === 'function') {\r\n\t\t\t\tminTime = minTime(now, future)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (minTime === undefined) {\r\n\t\tminTime = step.minTime\r\n\t}\r\n\t// A deprecated way of specifying a different threshold\r\n\t// depending on the previous step's unit.\r\n\tif (typeof minTime === 'object') {\r\n\t\tif (prevStep && prevStep.id && minTime[prevStep.id] !== undefined) {\r\n\t\t\tminTime = minTime[prevStep.id]\r\n\t\t} else {\r\n\t\t\tminTime = minTime.default\r\n\t\t}\r\n\t}\r\n\tif (typeof minTime === 'function') {\r\n\t\tminTime = minTime(timestamp, {\r\n\t\t\tfuture,\r\n\t\t\tgetMinTimeForUnit(toUnit, fromUnit) {\r\n\t\t\t\treturn getMinTimeForUnit(\r\n\t\t\t\t\ttoUnit,\r\n\t\t\t\t\tfromUnit || prevStep && prevStep.formatAs,\r\n\t\t\t\t\t{ round }\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\t// Evaluate the `test()` function.\r\n\t// `test()` function is deprecated.\r\n\tif (minTime === undefined) {\r\n\t\tif (step.test) {\r\n\t\t\tif (step.test(timestamp, {\r\n\t\t\t\tnow,\r\n\t\t\t\tfuture\r\n\t\t\t})) {\r\n\t\t\t\t// `0` threshold always passes.\r\n\t\t\t\tminTime = 0\r\n\t\t\t} else {\r\n\t\t\t\t// `MAX_SAFE_INTEGER` threshold won't ever pass in real life.\r\n\t\t\t\tminTime = 9007199254740991 // Number.MAX_SAFE_INTEGER\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (minTime === undefined) {\r\n\t\tif (prevStep) {\r\n\t\t\tif (step.formatAs && prevStep.formatAs) {\r\n\t\t\t\tminTime = getMinTimeForUnit(step.formatAs, prevStep.formatAs, { round })\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// The first step's `minTime` is `0` by default.\r\n\t\t\tminTime = 0\r\n\t\t}\r\n\t}\r\n\t// Warn if no `minTime` was defined or could be deduced.\r\n\tif (minTime === undefined) {\r\n\t\tconsole.warn('[javascript-time-ago] A step should specify `minTime`:\\n' + JSON.stringify(step, null, 2))\r\n\t}\r\n\treturn minTime\r\n}\r\n\r\nfunction getMinTimeForUnit(toUnit, fromUnit, { round }) {\r\n\tconst toUnitAmount = getSecondsInUnit(toUnit)\r\n\t// if (!fromUnit) {\r\n\t// \treturn toUnitAmount;\r\n\t// }\r\n\t// if (!fromUnit) {\r\n\t// \tfromUnit = getPreviousUnitFor(toUnit)\r\n\t// }\r\n\tlet fromUnitAmount\r\n\tif (fromUnit === 'now') {\r\n\t\tfromUnitAmount = getSecondsInUnit(toUnit)\r\n\t} else {\r\n\t\tfromUnitAmount = getSecondsInUnit(fromUnit)\r\n\t}\r\n\tif (toUnitAmount !== undefined && fromUnitAmount !== undefined) {\r\n\t\treturn toUnitAmount - fromUnitAmount * (1 - getDiffRatioToNextRoundedNumber(round))\r\n\t}\r\n}"],"file":"getStepMinTime.js"}