{"version":3,"sources":["../../source/style/twitter.test.js"],"names":["twitter","TimeAgo","hour","minute","day","month","year","describe","it","timeAgo","format","Date","now","should","equal","formatDatePastBy","secondsPassed","round","getTime","test","time","result","date","getTimeToNextUpdate","deep"],"mappings":"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","sourcesContent":["import twitter from './twitter'\r\nimport TimeAgo from '../TimeAgo'\r\nimport { hour, minute, day, month, year } from '../steps'\r\n\r\ndescribe('style/twitter', () => {\r\n\tit('should fallback from \"mini\" to \"narrow\"', () => {\r\n\t\tconst timeAgo = new TimeAgo('it')\r\n\t\ttimeAgo.format(Date.now() - 3 * hour * 1000, 'twitter').should.equal('3 h fa')\r\n\t})\r\n\r\n\tit('should format Twitter style relative time (English) (round: \"round\")', () => {\r\n\t\tconst timeAgo = new TimeAgo('en')\r\n\r\n\t\tconst formatDatePastBy = (secondsPassed) => timeAgo.format(-secondsPassed * 1000, { now: 0, ...twitter })\r\n\r\n\t\tformatDatePastBy(0.49).should.equal('0s')\r\n\t\tformatDatePastBy(0.5).should.equal('1s')\r\n\t\tformatDatePastBy(59.49).should.equal('59s')\r\n\t\tformatDatePastBy(59.5).should.equal('1m')\r\n\t\tformatDatePastBy(1.49 * minute).should.equal('1m')\r\n\t\tformatDatePastBy(1.5 * minute).should.equal('2m')\r\n\t\t// …\r\n\t\tformatDatePastBy(59.49 * minute).should.equal('59m')\r\n\t\tformatDatePastBy(59.5 * minute).should.equal('1h')\r\n\t\tformatDatePastBy(1.49 * hour).should.equal('1h')\r\n\t\tformatDatePastBy(1.5 * hour).should.equal('2h')\r\n\t\t// …\r\n\t\tformatDatePastBy(23.49 * hour).should.equal('23h')\r\n\t})\r\n\r\n\tit('should format Twitter style relative time (English) (round: \"floor\")', () => {\r\n\t\tconst timeAgo = new TimeAgo('en')\r\n\r\n\t\tconst formatDatePastBy = (secondsPassed) => timeAgo.format(-secondsPassed * 1000, { now: 0, ...twitter, round: 'floor' })\r\n\r\n\t\tformatDatePastBy(0).should.equal('0s')\r\n\t\tformatDatePastBy(0.9).should.equal('0s')\r\n\t\tformatDatePastBy(1).should.equal('1s')\r\n\t\tformatDatePastBy(59.9).should.equal('59s')\r\n\t\tformatDatePastBy(60).should.equal('1m')\r\n\t\tformatDatePastBy(1.9 * minute).should.equal('1m')\r\n\t\tformatDatePastBy(2 * minute).should.equal('2m')\r\n\t\tformatDatePastBy(2.9 * minute).should.equal('2m')\r\n\t\tformatDatePastBy(3 * minute).should.equal('3m')\r\n\t\t// …\r\n\t\tformatDatePastBy(59.9 * minute).should.equal('59m')\r\n\t\tformatDatePastBy(60 * minute).should.equal('1h')\r\n\t\tformatDatePastBy(1.9 * hour).should.equal('1h')\r\n\t\tformatDatePastBy(2 * hour).should.equal('2h')\r\n\t\tformatDatePastBy(2.9 * hour).should.equal('2h')\r\n\t\tformatDatePastBy(3 * hour).should.equal('3h')\r\n\t\t// …\r\n\t\tformatDatePastBy(23.9 * hour).should.equal('23h')\r\n\t})\r\n\r\n\tit('should format Twitter style relative time (English) (absolute dates)', () => {\r\n\t\tconst timeAgo = new TimeAgo('en')\r\n\r\n\t\t// April 10th, 2016, 12:00.\r\n\t\tconst now = new Date(2016, 3, 10, 12, 0).getTime()\r\n\t\tconst formatDatePastBy = (secondsPassed) => timeAgo.format(now - secondsPassed * 1000, { now, ...twitter })\r\n\r\n\t\tformatDatePastBy(day + 2 * minute + hour).should.equal('Apr 9')\r\n\t\t// …\r\n\t\t// `month` is about 30.5 days.\r\n\t\tformatDatePastBy(month * 3).should.equal('Jan 10')\r\n\t\tformatDatePastBy(month * 4).should.equal('Dec 10, 2015')\r\n\t\tformatDatePastBy(year).should.equal('Apr 11, 2015')\r\n\r\n\t\t// Test future dates.\r\n\t\t// `month` is about 30.5 days.\r\n\t\tformatDatePastBy(-1 * month * 8).should.equal('Dec 10')\r\n\t\tformatDatePastBy(-1 * month * 9).should.equal('Jan 9, 2017')\r\n\t})\r\n\r\n\tit('should format Twitter style relative time (Russian)', () => {\r\n\t\tconst timeAgo = new TimeAgo('ru')\r\n\r\n\t\tconst now = new Date(2016, 3, 10, 22, 59).getTime()\r\n\t\tconst formatDatePastBy = (secondsPassed) => timeAgo.format(now - secondsPassed * 1000, { now, ...twitter })\r\n\r\n\t\tformatDatePastBy(0).should.equal('0 с')\r\n\t\tformatDatePastBy(1).should.equal('1 с')\r\n\t\tformatDatePastBy(minute).should.equal('1 мин')\r\n\t\tformatDatePastBy(hour).should.equal('1 ч')\r\n\t\tformatDatePastBy(day + 62 * minute).should.equal('9 апр.')\r\n\t\tformatDatePastBy(year).should.equal('11 апр. 2015 г.')\r\n\t})\r\n\r\n\tit('should format Twitter style relative time (Korean)', () => {\r\n\t\tconst timeAgo = new TimeAgo('ko')\r\n\r\n\t\tconst now = new Date(2016, 3, 10, 22, 59).getTime()\r\n\t\tconst formatDatePastBy = (secondsPassed) => timeAgo.format(now - secondsPassed * 1000, { now, ...twitter })\r\n\r\n\t\tformatDatePastBy(minute).should.equal('1분')\r\n\t\tformatDatePastBy(hour).should.equal('1시간')\r\n\t\tformatDatePastBy(day + 62 * minute).should.equal('4월 9일')\r\n\t\tformatDatePastBy(year).should.equal('2015년 4월 11일')\r\n\t})\r\n\r\n\tit('should format Twitter style relative time (German)', () => {\r\n\t\tconst timeAgo = new TimeAgo('de')\r\n\r\n\t\tconst now = new Date(2016, 3, 10, 22, 59).getTime()\r\n\t\tconst formatDatePastBy = (secondsPassed) => timeAgo.format(now - secondsPassed * 1000, { now, ...twitter })\r\n\r\n\t\tformatDatePastBy(minute).should.equal('1 Min.')\r\n\t\tformatDatePastBy(hour).should.equal('1 Std.')\r\n\t\tformatDatePastBy(day + 62 * minute).should.equal('9. Apr.')\r\n\t\tformatDatePastBy(year).should.equal('11. Apr. 2015')\r\n\t})\r\n\r\n\tit('should format Twitter style relative time (French)', () => {\r\n\t\tconst timeAgo = new TimeAgo('fr')\r\n\r\n\t\tconst now = new Date(2016, 3, 10, 22, 59).getTime()\r\n\t\tconst formatDatePastBy = (secondsPassed) => timeAgo.format(now - secondsPassed * 1000, { now, ...twitter })\r\n\r\n\t\tformatDatePastBy(minute).should.equal('1 min')\r\n\t\tformatDatePastBy(hour).should.equal('1 h')\r\n\t\tformatDatePastBy(day + 62 * minute).should.equal('9 avr.')\r\n\t\tformatDatePastBy(year).should.equal('11 avr. 2015')\r\n\t})\r\n\r\n\tit('should format Twitter style relative time (Chinese)', () => {\r\n\t\tconst timeAgo = new TimeAgo('zh')\r\n\r\n\t\tconst now = new Date(2016, 3, 10, 22, 59).getTime()\r\n\t\tconst formatDatePastBy = (secondsPassed) => timeAgo.format(now - secondsPassed * 1000, { now, ...twitter })\r\n\r\n\t\tformatDatePastBy(minute).should.equal('1分钟')\r\n\t\tformatDatePastBy(hour).should.equal('1小时')\r\n\t\tformatDatePastBy(day + 62 * minute).should.equal('4月9日')\r\n\t\tformatDatePastBy(year).should.equal('2015年4月11日')\r\n\t})\r\n\r\n\t// This test won't pass because `Intl.DateTimeFormat` is read at\r\n\t// initialization time, not at run time.\r\n\t// it('should fall back to generic style when Intl.DateTimeFormat is not available', () => {\r\n\t// \tconst DateTimeFormat = Intl.DateTimeFormat\r\n\t// \tIntl.DateTimeFormat = undefined\r\n\t//\r\n\t// \tconst timeAgo = new TimeAgo('en')\r\n\t// \ttimeAgo.format(Date.now() - 365 * 24 * hour * 1000, 'twitter').should.equal('1yr')\r\n\t//\r\n\t// \tIntl.DateTimeFormat = DateTimeFormat\r\n\t// })\r\n\r\n\tit('should support timestamp argument on `yearMonthAndDay.test()`', () => {\r\n\t\tconst timeAgo = new TimeAgo('en')\r\n\t\ttimeAgo.format(0, 'twitter').should.equal('Jan 1, 1970')\r\n\t})\r\n\r\n\tit('should round as \"floor\"', () => {\r\n\t\tconst timeAgo = new TimeAgo('en')\r\n\t\tconst test = (time, result) => timeAgo.format(time, 'twitter', {\r\n\t\t\tround: 'floor',\r\n\t\t\tnow: 0\r\n\t\t}).should.equal(result)\r\n\t\ttest(2001, '2s')\r\n\t\ttest(2000, '2s')\r\n\t\ttest(1999, '1s')\r\n\t\ttest(1001, '1s')\r\n\t\ttest(1000, '1s')\r\n\t\ttest(999, '0s')\r\n\t\ttest(0, '0s')\r\n\t\ttest(-999, '0s')\r\n\t\ttest(-1000, '1s')\r\n\t\ttest(-1001, '1s')\r\n\t\ttest(-1999, '1s')\r\n\t\ttest(-2000, '2s')\r\n\t\ttest(-2001, '2s')\r\n\t})\r\n\r\n\tit('should get time to next update (round: \"floor\")', () => {\r\n\t\tconst timeAgo = new TimeAgo('en')\r\n\r\n\t\t// April 10th, 2018, 12:00.\r\n\t\tconst date = new Date(2018, 3, 10, 12, 0)\r\n\r\n\t\t// April 10th, 2016, 12:00 (two years earlier).\r\n\t\tlet now = new Date(2016, 3, 10, 12, 0).getTime()\r\n\r\n\t\ttimeAgo.format(\r\n\t\t\tdate,\r\n\t\t\t'twitter',\r\n\t\t\t{\r\n\t\t\t\tnow,\r\n\t\t\t\tgetTimeToNextUpdate: true\r\n\t\t\t}\r\n\t\t).should.deep.equal([\r\n\t\t\t'Apr 10, 2018',\r\n\t\t\t// Updates on Jan 1st, 2018, 00:00.\r\n\t\t\tnew Date(2018, 0, 1).getTime() - now\r\n\t\t])\r\n\r\n\t\t// 1st, 2018, 00:00.\r\n\t\tnow = new Date(2018, 0, 1).getTime()\r\n\r\n\t\ttimeAgo.format(\r\n\t\t\tdate,\r\n\t\t\t'twitter',\r\n\t\t\t{\r\n\t\t\t\tnow,\r\n\t\t\t\tgetTimeToNextUpdate: true,\r\n\t\t\t\tround: 'floor'\r\n\t\t\t}\r\n\t\t).should.deep.equal([\r\n\t\t\t'Apr 10',\r\n\t\t\t// Updates after April 9th, 2018, 12:00.\r\n\t\t\t(new Date(2018, 3, 9, 12, 0).getTime() + 1) - now\r\n\t\t])\r\n\r\n\t\t// After April 9th, 2018, 12:00.\r\n\t\tnow = new Date(2018, 3, 9, 12, 0).getTime() + 1\r\n\r\n\t\ttimeAgo.format(\r\n\t\t\tdate,\r\n\t\t\t'twitter',\r\n\t\t\t{\r\n\t\t\t\tnow,\r\n\t\t\t\tgetTimeToNextUpdate: true,\r\n\t\t\t\tround: 'floor'\r\n\t\t\t}\r\n\t\t).should.deep.equal([\r\n\t\t\t'23h',\r\n\t\t\t// Updates in an hour.\r\n\t\t\t60 * 60 * 1000\r\n\t\t])\r\n\t})\r\n\r\n\tit('should get time to next update (round: \"round\")', () => {\r\n\t\tconst timeAgo = new TimeAgo('en')\r\n\r\n\t\t// April 10th, 2018, 12:00.\r\n\t\tconst date = new Date(2018, 3, 10, 12, 0)\r\n\r\n\t\tlet now\r\n\r\n\t\t// 1st, 2018, 00:00.\r\n\t\tnow = new Date(2018, 0, 1).getTime()\r\n\r\n\t\ttimeAgo.format(\r\n\t\t\tdate,\r\n\t\t\t'twitter',\r\n\t\t\t{\r\n\t\t\t\tnow,\r\n\t\t\t\tgetTimeToNextUpdate: true\r\n\t\t\t}\r\n\t\t).should.deep.equal([\r\n\t\t\t'Apr 10',\r\n\t\t\t// Updates after April 9th, 2018, 11:30.\r\n\t\t\t(new Date(2018, 3, 9, 12, 0).getTime() + 30 * 60 * 1000 + 1) - now\r\n\t\t])\r\n\r\n\t\t// After April 9th, 2018, 12:00.\r\n\t\tnow = new Date(2018, 3, 9, 12, 0).getTime() + 30 * 60 * 1000 + 1\r\n\r\n\t\ttimeAgo.format(\r\n\t\t\tdate,\r\n\t\t\t'twitter',\r\n\t\t\t{\r\n\t\t\t\tnow,\r\n\t\t\t\tgetTimeToNextUpdate: true\r\n\t\t\t}\r\n\t\t).should.deep.equal([\r\n\t\t\t'23h',\r\n\t\t\t// Updates in an hour.\r\n\t\t\t60 * 60 * 1000\r\n\t\t])\r\n\t})\r\n})"],"file":"twitter.test.js"}