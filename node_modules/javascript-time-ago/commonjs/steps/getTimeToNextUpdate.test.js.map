{"version":3,"sources":["../../source/steps/getTimeToNextUpdate.test.js"],"names":["describe","it","expect","minTime","format","now","future","isFirstStep","to","equal","INFINITY","Date","nextStep","formatAs","be","undefined","should","test","getTimeToNextUpdate","unit","prevStep"],"mappings":"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","sourcesContent":["import getTimeToNextUpdate, { INFINITY, getStepChangesAt, getTimeToStepChange } from './getTimeToNextUpdate'\r\n\r\ndescribe('getTimeToNextUpdate', () => {\r\n\tit('should return infinity when there are no more steps, and it does not format as a unit (past)', () => {\r\n\t\texpect(getTimeToNextUpdate(-4 * 60 * 1000, {\r\n\t\t\tminTime: 59.5,\r\n\t\t\tformat: () => ''\r\n\t\t}, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: false,\r\n\t\t\tisFirstStep: true\r\n\t\t})).to.equal(INFINITY)\r\n\t})\r\n\r\n\tit('should support date argument', () => {\r\n\t\texpect(getTimeToNextUpdate(new Date(4 * 60 * 1000), {\r\n\t\t\tminTime: 60\r\n\t\t}, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: true,\r\n\t\t\tisFirstStep: true,\r\n\t\t\tnextStep: {}\r\n\t\t})).to.equal(3 * 60 * 1000 + 1)\r\n\t})\r\n\r\n\tit('should return this step\\'s \"minTime\" timestamp (future)', () => {\r\n\t\texpect(getTimeToNextUpdate(4 * 60 * 1000, {\r\n\t\t\tminTime: 60,\r\n\t\t\tformat: () => ''\r\n\t\t}, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: true,\r\n\t\t\tisFirstStep: true,\r\n\t\t\tnextStep: {\r\n\t\t\t\tformat: () => ''\r\n\t\t\t}\r\n\t\t})).to.equal(3 * 60 * 1000 + 1)\r\n\t})\r\n\r\n\tit('should return undefined when there is a next step and time to next update can not be reliably determined (formatAs) (past)', () => {\r\n\t\texpect(getTimeToNextUpdate(-4 * 60 * 1000, {\r\n\t\t\tminTime: 60,\r\n\t\t\tformatAs: 'minute'\r\n\t\t}, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: false,\r\n\t\t\tisFirstStep: true,\r\n\t\t\tnextStep: {\r\n\t\t\t\tformatAs: 'unknown-time-unit'\r\n\t\t\t}\r\n\t\t})).to.be.undefined\r\n\t})\r\n\r\n\tit('should get time to next update (no next step) (past)', () => {\r\n\t\tgetTimeToNextUpdate(-4 * 60 * 1000, {\r\n\t\t\tformatAs: 'minute',\r\n\t\t\tminTime: 59.5\r\n\t\t}, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: false,\r\n\t\t\tisFirstStep: true\r\n\t\t}).should.equal(0.5 * 60 * 1000)\r\n\t})\r\n\r\n\tit('should get time to next update (no next step) (future)', () => {\r\n\t\tgetTimeToNextUpdate(4 * 60 * 1000, {\r\n\t\t\tformatAs: 'minute',\r\n\t\t\tminTime: 59.5\r\n\t\t}, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: true,\r\n\t\t\tisFirstStep: true\r\n\t\t}).should.equal(0.5 * 60 * 1000 + 1)\r\n\t})\r\n\r\n\tit('should get time to next update (has prev/next step without `minTime`) (future)', () => {\r\n\t\tgetTimeToNextUpdate(4 * 60 * 1000, {\r\n\t\t\tformatAs: 'minute',\r\n\t\t\tminTime: 59.5\r\n\t\t}, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: true,\r\n\t\t\tisFirstStep: true,\r\n\t\t\tnextStep: {\r\n\t\t\t\tformatAs: 'hour',\r\n\t\t\t\ttest: () => false\r\n\t\t\t}\r\n\t\t}).should.equal(0.5 * 60 * 1000 + 1)\r\n\t})\r\n\r\n\tit('should get time to next update (has `getTimeToNextUpdate`) (past)', () => {\r\n\t\tgetTimeToNextUpdate(-4 * 60 * 1000, {\r\n\t\t\tformatAs: 'minute',\r\n\t\t\tminTime: 59.5,\r\n\t\t\tgetTimeToNextUpdate: () => 0.25 * 60 * 1000\r\n\t\t}, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: false,\r\n\t\t\tisFirstStep: true\r\n\t\t}).should.equal(0.25 * 60 * 1000)\r\n\t})\r\n\r\n\tit('should get time to next update (has `getTimeToNextUpdate`) (future)', () => {\r\n\t\tgetTimeToNextUpdate(4 * 60 * 1000, {\r\n\t\t\tformatAs: 'minute',\r\n\t\t\tminTime: 59.5,\r\n\t\t\tgetTimeToNextUpdate: () => 0.25 * 60 * 1000\r\n\t\t}, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: true,\r\n\t\t\tisFirstStep: true\r\n\t\t}).should.equal(0.25 * 60 * 1000)\r\n\t})\r\n\r\n\tit('should get time to next update (has both unit and prev/next steps with `minTime`) (returns time to \"minTime\" of next step) (past)', () => {\r\n\t\tgetTimeToNextUpdate(-59 * 60 * 1000, {\r\n\t\t\tformatAs: 'minute',\r\n\t\t\tminTime: 59.5\r\n\t\t}, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: false,\r\n\t\t\tisFirstStep: true,\r\n\t\t\tnextStep: {\r\n\t\t\t\tformatAs: 'hour',\r\n\t\t\t\tminTime: 59.5 * 60\r\n\t\t\t}\r\n\t\t}).should.equal(0.5 * 60 * 1000)\r\n\t})\r\n\r\n\tit('should get time to next update (has no unit but has prev/next step with `minTime`) (returns time to \"minTime\" of next step) (past)', () => {\r\n\t\tgetTimeToNextUpdate(-59 * 60 * 1000, {\r\n\t\t\tformat: () => {},\r\n\t\t\tminTime: 59.5\r\n\t\t}, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: false,\r\n\t\t\tisFirstStep: true,\r\n\t\t\tnextStep: {\r\n\t\t\t\tformatAs: 'hour',\r\n\t\t\t\tminTime: 59.5 * 60\r\n\t\t\t}\r\n\t\t}).should.equal(0.5 * 60 * 1000)\r\n\t})\r\n\r\n\tit('should get time to next update (will be outside of the first step) (future)', () => {\r\n\t\tgetTimeToNextUpdate(60 * 60 * 1000, {\r\n\t\t\tformatAs: 'hour',\r\n\t\t\tminTime: 60 * 60\r\n\t\t}, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: true,\r\n\t\t\tisFirstStep: true\r\n\t\t}).should.equal(1)\r\n\t})\r\n})\r\n\r\ndescribe('getStepChangesAt', () => {\r\n\tit('should work for \"round\" steps', () => {\r\n\t\t// Future.\r\n\t\t// Is at zero point.\r\n\t\t// No next step.\r\n\t\t// No tickable unit.\r\n\t\t// Doesn't update.\r\n\t\tgetStepChangesAt({\r\n\t\t\tunit: 'now'\r\n\t\t}, 0, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: false,\r\n\t\t\tprevStep: undefined\r\n\t\t}).should.equal(INFINITY)\r\n\r\n\t\t// Past.\r\n\t\t// Is at zero point.\r\n\t\t// The next step is seconds.\r\n\t\t// Updates at the next step.\r\n\t\tgetStepChangesAt({\r\n\t\t\tunit: 'second',\r\n\t\t\tminTime: 1\r\n\t\t}, 0, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: false,\r\n\t\t\tprevStep: {}\r\n\t\t}).should.equal(1 * 1000)\r\n\r\n\t\t// Future.\r\n\t\t// Inside the first step.\r\n\t\t// Updates after zero point.\r\n\t\tgetStepChangesAt({\r\n\t\t\tunit: 'now'\r\n\t\t}, 0.9 * 1000, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: true,\r\n\t\t\tprevStep: undefined\r\n\t\t}).should.equal(0.9 * 1000 + 1)\r\n\r\n\t\t// Future.\r\n\t\t// The first step doesn't start at 0.\r\n\t\t// Outside of the first step.\r\n\t\t// Updates right after zero point.\r\n\t\tgetTimeToStepChange(undefined, 0.9 * 1000, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: true,\r\n\t\t\tprevStep: undefined\r\n\t\t}).should.equal(0.9 * 1000 + 1)\r\n\r\n\t\t// Past.\r\n\t\t// The current step is `undefined`.\r\n\t\t// The next step is the first step.\r\n\t\t// The first step doesn't start at 0.\r\n\t\t// Outside of the first step.\r\n\t\t// Updates at entering the first step.\r\n\t\tgetStepChangesAt({\r\n\t\t\tminTime: 1,\r\n\t\t\tunit: 'second'\r\n\t\t}, -0.9 * 1000, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: false,\r\n\t\t\tprevStep: {}\r\n\t\t}).should.equal(0.1 * 1000)\r\n\r\n\t\t// Future.\r\n\t\t// The first step doesn't start at 0.\r\n\t\t// Will output empty string after it exits the current step.\r\n\t\tgetStepChangesAt({\r\n\t\t\tminTime: 1,\r\n\t\t\tunit: 'second'\r\n\t\t}, 1.1 * 1000, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: true,\r\n\t\t\tprevStep: undefined\r\n\t\t}).should.equal(0.1 * 1000 + 1)\r\n\r\n\t\t// Past.\r\n\t\t// Next step is seconds.\r\n\t\t// The \"next\" step doesn't have `minTime`,\r\n\t\t// so \"time to next update\" couldn't be determined.\r\n\t\texpect(getStepChangesAt({\r\n\t\t\tunit: 'unknown-time-unit'\r\n\t\t}, 0, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: false,\r\n\t\t\tprevStep: {}\r\n\t\t})).to.be.undefined\r\n\r\n\t\t// Past.\r\n\t\t// No next step.\r\n\t\t// The last step never changes.\r\n\t\tgetTimeToStepChange(undefined, 0, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: false,\r\n\t\t\tisFirstStep: undefined\r\n\t\t}).should.equal(INFINITY)\r\n\r\n\t\t// Future.\r\n\t\t// Current step is seconds.\r\n\t\t// Updates after zero point.\r\n\t\tgetStepChangesAt({\r\n\t\t\tunit: 'second'\r\n\t\t}, 0, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: true,\r\n\t\t\tprevStep: undefined\r\n\t\t}).should.equal(1)\r\n\r\n\t\t// Past.\r\n\t\t// Next step is minutes.\r\n\t\t// Already at zero point, so no need to update at zero point.\r\n\t\tgetStepChangesAt({\r\n\t\t\tminTime: 60,\r\n\t\t\tformatAs: 'minute'\r\n\t\t}, 0, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: false,\r\n\t\t\tprevStep: {}\r\n\t\t}).should.equal(60 * 1000)\r\n\t})\r\n})"],"file":"getTimeToNextUpdate.test.js"}