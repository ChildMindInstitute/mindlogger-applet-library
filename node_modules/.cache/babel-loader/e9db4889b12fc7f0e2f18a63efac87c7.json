{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/dayspan-vuetify-2/src/components/EventDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/dayspan-vuetify-2/src/components/EventDialog.vue","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Calendar, Schedule, Identifier, Functions as fn } from 'dayspan';\nexport default {\n  name: 'dsEventDialog',\n  props: {\n    calendar: {\n      type: Calendar\n    },\n    dialogProps: {\n      validate: function validate(x) {\n        return this.$dsValidate(x, 'dialogProps');\n      },\n      default: function _default() {\n        return this.$dsDefaults().dialogProps;\n      }\n    },\n    readOnly: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data(vm) {\n    return {\n      open: false,\n      calendarEvent: null,\n      details: null,\n      schedule: null,\n      day: null\n    };\n  },\n  computed: {},\n  methods: {\n    addToday: function addToday() {\n      this.add(this.$dayspan.today);\n    },\n    add: function add(day, days) {\n      this.addSchedule(day, Schedule.forDay(day, days));\n    },\n    addAt: function addAt(day, hour) {\n      this.addSchedule(day, Schedule.forTime(day, hour));\n    },\n    addSpan: function addSpan(span) {\n      this.addSchedule(span.start, Schedule.forSpan(span));\n    },\n    addPlaceholder: function addPlaceholder(placeholder, details) {\n      this.addSchedule(placeholder.start, placeholder.schedule, details || placeholder.event.data);\n    },\n    addSchedule: function addSchedule(day, schedule, details) {\n      this.day = day;\n      this.calendarEvent = null;\n      this.details = details || this.$dayspan.getDefaultEventDetails();\n      this.schedule = schedule;\n      this.finishOpen();\n    },\n    edit: function edit(calendarEvent) {\n      this.day = calendarEvent.start;\n      this.calendarEvent = calendarEvent;\n      this.details = calendarEvent.event.data || this.$dayspan.getDefaultEventDetails();\n      this.schedule = calendarEvent.schedule;\n      this.finishOpen();\n    },\n    finishOpen: function finishOpen() {\n      var ev = this.getEvent('open');\n      this.$emit('open', ev);\n\n      if (ev.open) {\n        this.open = true;\n      }\n    },\n    eventCreate: function eventCreate(ev) {\n      this.$emit('event-create', ev);\n    },\n    eventUpdate: function eventUpdate(ev) {\n      this.$emit('event-update', ev);\n    },\n    eventRemove: function eventRemove(ev) {\n      this.$emit('event-remove', ev);\n    },\n    actioned: function actioned(ev) {\n      ev.hide = true;\n      this.$emit('actioned', ev);\n      this.finishClose(ev);\n    },\n    cancel: function cancel(ev) {\n      ev.hide = true;\n      this.$emit('cancel', ev);\n      this.finishClose(ev);\n    },\n    saved: function saved(ev) {\n      ev.hide = true;\n      this.$emit('saved', ev);\n      this.finishClose(ev);\n    },\n    finishClose: function finishClose(ev) {\n      if (ev.hide) {\n        this.open = false;\n        this.$emit('close', ev);\n      }\n\n      this.schedule = null;\n      this.details = null;\n    },\n    getEvent: function getEvent(type) {\n      var extra = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return fn.extend({\n        type: type,\n        day: this.day,\n        schedule: this.schedule,\n        calendar: this.calendar,\n        calendarEvent: this.calendarEvent,\n        handled: false,\n        open: true,\n        $vm: this,\n        $element: this.$el\n      }, extra);\n    }\n  }\n};",{"version":3,"sources":["EventDialog.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n\r\n    <v-dialog\r\n            v-bind=\"dialogProps\"\r\n            v-model=\"open\"\r\n            :fullscreen=\"$dayspan.fullscreenDialogs\">\r\n\r\n        <v-card v-if=\"schedule && details\">\r\n\r\n            <v-card-text>\r\n\r\n                <ds-event\r\n                        v-bind=\"{$scopedSlots}\"\r\n                        :target-details=\"details\"\r\n                        :target-schedule=\"schedule\"\r\n                        :calendar=\"calendar\"\r\n                        :calendar-event=\"calendarEvent\"\r\n                        :day=\"day\"\r\n                        :read-only=\"readOnly\"\r\n                        @saved=\"saved\"\r\n                        @cancel=\"cancel\"\r\n                        @actioned=\"actioned\"\r\n                        @event-create=\"eventCreate\"\r\n                        @event-update=\"eventUpdate\"\r\n                        @event-remove=\"eventRemove\"\r\n                ></ds-event>\r\n\r\n            </v-card-text>\r\n\r\n        </v-card>\r\n\r\n    </v-dialog>\r\n\r\n</template>\r\n\r\n<script>\r\nimport { Calendar, Schedule, Identifier, Functions as fn } from 'dayspan'\r\n\r\nexport default {\r\n\r\n    name: 'dsEventDialog',\r\n\r\n    props:\r\n        {\r\n            calendar:\r\n                {\r\n                    type: Calendar\r\n                },\r\n\r\n            dialogProps:\r\n                {\r\n                    validate (x) {\r\n                        return this.$dsValidate(x, 'dialogProps')\r\n                    },\r\n                    default () {\r\n                        return this.$dsDefaults().dialogProps\r\n                    }\r\n                },\r\n\r\n            readOnly:\r\n                {\r\n                    type: Boolean,\r\n                    default: false\r\n                }\r\n        },\r\n\r\n    data: vm => ({\r\n        open: false,\r\n        calendarEvent: null,\r\n        details: null,\r\n        schedule: null,\r\n        day: null\r\n    }),\r\n\r\n    computed:\r\n        {},\r\n\r\n    methods:\r\n        {\r\n            addToday () {\r\n                this.add(this.$dayspan.today)\r\n            },\r\n\r\n            add (day, days) {\r\n                this.addSchedule(day, Schedule.forDay(day, days))\r\n            },\r\n\r\n            addAt (day, hour) {\r\n                this.addSchedule(day, Schedule.forTime(day, hour))\r\n            },\r\n\r\n            addSpan (span) {\r\n                this.addSchedule(span.start, Schedule.forSpan(span))\r\n            },\r\n\r\n            addPlaceholder (placeholder, details) {\r\n                this.addSchedule(placeholder.start, placeholder.schedule, details || placeholder.event.data)\r\n            },\r\n\r\n            addSchedule (day, schedule, details) {\r\n                this.day = day\r\n                this.calendarEvent = null\r\n                this.details = details || this.$dayspan.getDefaultEventDetails()\r\n                this.schedule = schedule\r\n\r\n                this.finishOpen()\r\n            },\r\n\r\n            edit (calendarEvent) {\r\n                this.day = calendarEvent.start\r\n                this.calendarEvent = calendarEvent\r\n                this.details = calendarEvent.event.data || this.$dayspan.getDefaultEventDetails()\r\n                this.schedule = calendarEvent.schedule\r\n\r\n                this.finishOpen()\r\n            },\r\n\r\n            finishOpen () {\r\n                var ev = this.getEvent('open')\r\n\r\n                this.$emit('open', ev)\r\n\r\n                if (ev.open) {\r\n                    this.open = true\r\n                }\r\n            },\r\n\r\n            eventCreate (ev) {\r\n                this.$emit('event-create', ev)\r\n            },\r\n\r\n            eventUpdate (ev) {\r\n                this.$emit('event-update', ev)\r\n            },\r\n\r\n            eventRemove (ev) {\r\n                this.$emit('event-remove', ev)\r\n            },\r\n\r\n            actioned (ev) {\r\n                ev.hide = true\r\n                this.$emit('actioned', ev)\r\n                this.finishClose(ev)\r\n            },\r\n\r\n            cancel (ev) {\r\n                ev.hide = true\r\n                this.$emit('cancel', ev)\r\n                this.finishClose(ev)\r\n            },\r\n\r\n            saved (ev) {\r\n                ev.hide = true\r\n                this.$emit('saved', ev)\r\n                this.finishClose(ev)\r\n            },\r\n\r\n            finishClose (ev) {\r\n                if (ev.hide) {\r\n                    this.open = false\r\n                    this.$emit('close', ev)\r\n                }\r\n\r\n                this.schedule = null\r\n                this.details = null\r\n            },\r\n\r\n            getEvent (type, extra = {}) {\r\n                return fn.extend({\r\n\r\n                    type: type,\r\n                    day: this.day,\r\n                    schedule: this.schedule,\r\n                    calendar: this.calendar,\r\n                    calendarEvent: this.calendarEvent,\r\n                    handled: false,\r\n                    open: true,\r\n                    $vm: this,\r\n                    $element: this.$el\r\n\r\n                }, extra)\r\n            }\r\n        }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n\r\n</style>\r\n"],"sourceRoot":"node_modules/dayspan-vuetify-2/src/components"}]}