{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VChipGroup/VChipGroup.js","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VChipGroup/VChipGroup.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Styles\nimport \"../../../src/components/VChipGroup/VChipGroup.sass\"; // Extensions\n\nimport { BaseSlideGroup } from \"../VSlideGroup/VSlideGroup\"; // Mixins\n\nimport Colorable from \"../../mixins/colorable\"; // Utilities\n\nimport mixins from \"../../util/mixins\";\n/* @vue/component */\n\nexport default mixins(BaseSlideGroup, Colorable).extend({\n  name: 'v-chip-group',\n  provide: function provide() {\n    return {\n      chipGroup: this\n    };\n  },\n  props: {\n    column: Boolean\n  },\n  computed: {\n    classes: function classes() {\n      return _objectSpread({}, BaseSlideGroup.options.computed.classes.call(this), {\n        'v-chip-group': true,\n        'v-chip-group--column': this.column\n      });\n    }\n  },\n  watch: {\n    column: function column(val) {\n      if (val) this.scrollOffset = 0;\n      this.$nextTick(this.onResize);\n    }\n  },\n  methods: {\n    genData: function genData() {\n      return this.setTextColor(this.color, _objectSpread({}, BaseSlideGroup.options.methods.genData.call(this)));\n    }\n  }\n});",{"version":3,"sources":["/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VChipGroup/VChipGroup.js"],"names":["BaseSlideGroup","Colorable","mixins","extend","name","provide","chipGroup","props","column","Boolean","computed","classes","options","call","watch","val","scrollOffset","$nextTick","onResize","methods","genData","setTextColor","color"],"mappings":";;;;;;;;;AAAA;AACA,4D,CAA6D;;AAE7D,SAASA,cAAT,qC,CAA6D;;AAE7D,OAAOC,SAAP,+B,CAAgD;;AAEhD,OAAOC,MAAP;AACA;;AAEA,eAAeA,MAAM,CAACF,cAAD,EAAiBC,SAAjB,CAAN,CAAkCE,MAAlC,CAAyC;AACtDC,EAAAA,IAAI,EAAE,cADgD;AAGtDC,EAAAA,OAHsD,qBAG5C;AACR,WAAO;AACLC,MAAAA,SAAS,EAAE;AADN,KAAP;AAGD,GAPqD;AAStDC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAEC;AADH,GAT+C;AAYtDC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OADQ,qBACE;AACR,+BAAYX,cAAc,CAACY,OAAf,CAAuBF,QAAvB,CAAgCC,OAAhC,CAAwCE,IAAxC,CAA6C,IAA7C,CAAZ;AACE,wBAAgB,IADlB;AAEE,gCAAwB,KAAKL;AAF/B;AAID;AANO,GAZ4C;AAqBtDM,EAAAA,KAAK,EAAE;AACLN,IAAAA,MADK,kBACEO,GADF,EACO;AACV,UAAIA,GAAJ,EAAS,KAAKC,YAAL,GAAoB,CAApB;AACT,WAAKC,SAAL,CAAe,KAAKC,QAApB;AACD;AAJI,GArB+C;AA4BtDC,EAAAA,OAAO,EAAE;AACPC,IAAAA,OADO,qBACG;AACR,aAAO,KAAKC,YAAL,CAAkB,KAAKC,KAAvB,oBAAmCtB,cAAc,CAACY,OAAf,CAAuBO,OAAvB,CAA+BC,OAA/B,CAAuCP,IAAvC,CAA4C,IAA5C,CAAnC,EAAP;AAED;AAJM;AA5B6C,CAAzC,CAAf","sourcesContent":["// Styles\nimport \"../../../src/components/VChipGroup/VChipGroup.sass\"; // Extensions\n\nimport { BaseSlideGroup } from '../VSlideGroup/VSlideGroup'; // Mixins\n\nimport Colorable from '../../mixins/colorable'; // Utilities\n\nimport mixins from '../../util/mixins';\n/* @vue/component */\n\nexport default mixins(BaseSlideGroup, Colorable).extend({\n  name: 'v-chip-group',\n\n  provide() {\n    return {\n      chipGroup: this\n    };\n  },\n\n  props: {\n    column: Boolean\n  },\n  computed: {\n    classes() {\n      return { ...BaseSlideGroup.options.computed.classes.call(this),\n        'v-chip-group': true,\n        'v-chip-group--column': this.column\n      };\n    }\n\n  },\n  watch: {\n    column(val) {\n      if (val) this.scrollOffset = 0;\n      this.$nextTick(this.onResize);\n    }\n\n  },\n  methods: {\n    genData() {\n      return this.setTextColor(this.color, { ...BaseSlideGroup.options.methods.genData.call(this)\n      });\n    }\n\n  }\n});\n//# sourceMappingURL=VChipGroup.js.map"]}]}