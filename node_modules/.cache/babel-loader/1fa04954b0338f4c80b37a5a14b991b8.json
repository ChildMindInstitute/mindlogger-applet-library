{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/dayspan-vuetify-2/src/components/ScheduleSpan.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/dayspan-vuetify-2/src/components/ScheduleSpan.vue","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Day, DaySpan, Schedule, Functions as fn } from 'dayspan';\nexport default {\n  name: 'dsScheduleSpan',\n  props: {\n    schedule: {\n      required: true,\n      type: Schedule\n    },\n    day: {\n      type: Day\n    },\n    readOnly: {\n      type: Boolean,\n      default: false\n    },\n    labels: {\n      validate: function validate(x) {\n        return this.$dsValidate(x, 'labels');\n      },\n      default: function _default() {\n        return this.$dsDefaults().labels;\n      }\n    },\n    formats: {\n      validate: function validate(x) {\n        return this.$dsValidate(x, 'formats');\n      },\n      default: function _default() {\n        return this.$dsDefaults().formats;\n      }\n    }\n  },\n  data: function data(vm) {\n    return {\n      startMenu: false,\n      endMenu: false\n    };\n  },\n  computed: {\n    hasStart: function hasStart() {\n      return !!this.schedule.start;\n    },\n    hasEnd: function hasEnd() {\n      return !!this.schedule.end;\n    },\n    startSpan: function startSpan() {\n      var point = this.schedule.start || this.day;\n      return point ? DaySpan.point(point) : null;\n    },\n    startText: function startText() {\n      return this.schedule.start ? this.schedule.start.format(this.formats.start) : this.labels.startless;\n    },\n    endSpan: function endSpan() {\n      var point = this.schedule.end || this.day;\n      return point ? DaySpan.point(point) : null;\n    },\n    endText: function endText() {\n      return this.schedule.end ? this.schedule.end.format(this.formats.end) : this.labels.endless;\n    },\n    isReadOnly: function isReadOnly() {\n      return this.readOnly || this.$dayspan.readOnly;\n    }\n  },\n  methods: {\n    setStart: function setStart(start) {\n      var ev = this.getEvent('start', {\n        start: start\n      });\n      this.$emit('start', ev);\n\n      if (!ev.handled && ev.schedule) {\n        ev.schedule.start = ev.start;\n        ev.handled = true;\n      }\n\n      this.startMenu = false;\n      this.$emit('change', ev);\n    },\n    setEnd: function setEnd(end) {\n      var ev = this.getEvent('end', {\n        end: end\n      });\n      this.$emit('end', ev);\n\n      if (!ev.handled && ev.schedule) {\n        ev.schedule.end = ev.end;\n        ev.handled = true;\n      }\n\n      this.endMenu = false;\n      this.$emit('change', ev);\n    },\n    getEvent: function getEvent(type) {\n      var extra = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return fn.extend({\n        type: type,\n        schedule: this.schedule,\n        day: this.day,\n        handled: false,\n        $vm: this,\n        $element: this.$el\n      }, extra);\n    }\n  }\n};",{"version":3,"sources":["ScheduleSpan.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n\r\n  <span>\r\n\r\n    <v-menu offset-y\r\n            :close-on-content-click=\"false\"\r\n            :nudge-width=\"60\"\r\n            :disabled=\"isReadOnly\"\r\n            v-model=\"startMenu\">\r\n      <template v-slot:activator=\"{ on }\">\r\n        <v-btn depressed\r\n               class=\"ds-button-tall ma-0 mb-2\"\r\n               v-on=\"on\">\r\n          {{ startText }}\r\n        </v-btn>\r\n      </template>\r\n\r\n      <div class=\"ds-span-menu\">\r\n\r\n        <ds-day-picker\r\n                :highlight-span=\"hasStart\"\r\n                :span=\"startSpan\"\r\n                @picked=\"setStart\"></ds-day-picker>\r\n\r\n        <v-btn block text\r\n               class=\"mb-0\"\r\n               v-if=\"hasStart\"\r\n               @click=\"setStart( null )\">\r\n          <span v-html=\"labels.startless\"></span>\r\n        </v-btn>\r\n\r\n      </div>\r\n\r\n    </v-menu>\r\n\r\n    &nbsp;&nbsp;to&nbsp;&nbsp;\r\n\r\n    <v-menu offset-y\r\n            :close-on-content-click=\"false\"\r\n            :nudge-width=\"60\"\r\n            :disabled=\"isReadOnly\"\r\n            v-model=\"endMenu\">\r\n\r\n      <template v-slot:activator=\"{ on }\">\r\n        <v-btn depressed\r\n               class=\"ds-button-tall ma-0 mb-2\"\r\n               v-on=\"on\">\r\n          {{ endText }}\r\n        </v-btn>\r\n      </template>\r\n\r\n      <div class=\"ds-span-menu\">\r\n\r\n        <ds-day-picker\r\n                :highlight-span=\"hasEnd\"\r\n                :span=\"endSpan\"\r\n                @picked=\"setEnd\"></ds-day-picker>\r\n\r\n        <v-btn block text\r\n               class=\"mb-0\"\r\n               v-if=\"hasEnd\"\r\n               @click=\"setEnd( null )\">\r\n          <span v-html=\"labels.endless\"></span>\r\n        </v-btn>\r\n\r\n      </div>\r\n\r\n    </v-menu>\r\n\r\n  </span>\r\n\r\n</template>\r\n\r\n<script>\r\nimport { Day, DaySpan, Schedule, Functions as fn } from 'dayspan'\r\n\r\nexport default {\r\n\r\n    name: 'dsScheduleSpan',\r\n\r\n    props:\r\n        {\r\n            schedule:\r\n                {\r\n                    required: true,\r\n                    type: Schedule\r\n                },\r\n\r\n            day:\r\n                {\r\n                    type: Day\r\n                },\r\n\r\n            readOnly:\r\n                {\r\n                    type: Boolean,\r\n                    default: false\r\n                },\r\n\r\n            labels:\r\n                {\r\n                    validate (x) {\r\n                        return this.$dsValidate(x, 'labels')\r\n                    },\r\n                    default () {\r\n                        return this.$dsDefaults().labels\r\n                    }\r\n                },\r\n\r\n            formats:\r\n                {\r\n                    validate (x) {\r\n                        return this.$dsValidate(x, 'formats')\r\n                    },\r\n                    default () {\r\n                        return this.$dsDefaults().formats\r\n                    }\r\n                }\r\n        },\r\n\r\n    data: vm => ({\r\n        startMenu: false,\r\n        endMenu: false\r\n    }),\r\n\r\n    computed:\r\n        {\r\n            hasStart () {\r\n                return !!this.schedule.start\r\n            },\r\n\r\n            hasEnd () {\r\n                return !!this.schedule.end\r\n            },\r\n\r\n            startSpan: function () {\r\n                var point = this.schedule.start || this.day\r\n\r\n                return point ? DaySpan.point(point) : null\r\n            },\r\n\r\n            startText () {\r\n                return this.schedule.start ? this.schedule.start.format(this.formats.start) : this.labels.startless\r\n            },\r\n\r\n            endSpan () {\r\n                var point = this.schedule.end || this.day\r\n\r\n                return point ? DaySpan.point(point) : null\r\n            },\r\n\r\n            endText () {\r\n                return this.schedule.end ? this.schedule.end.format(this.formats.end) : this.labels.endless\r\n            },\r\n\r\n            isReadOnly () {\r\n                return this.readOnly || this.$dayspan.readOnly\r\n            }\r\n        },\r\n\r\n    methods:\r\n        {\r\n            setStart (start) {\r\n                var ev = this.getEvent('start', {start})\r\n\r\n                this.$emit('start', ev)\r\n\r\n                if (!ev.handled && ev.schedule) {\r\n                    ev.schedule.start = ev.start\r\n                    ev.handled = true\r\n                }\r\n\r\n                this.startMenu = false\r\n\r\n                this.$emit('change', ev)\r\n            },\r\n\r\n            setEnd (end) {\r\n                var ev = this.getEvent('end', {end})\r\n\r\n                this.$emit('end', ev)\r\n\r\n                if (!ev.handled && ev.schedule) {\r\n                    ev.schedule.end = ev.end\r\n                    ev.handled = true\r\n                }\r\n\r\n                this.endMenu = false\r\n\r\n                this.$emit('change', ev)\r\n            },\r\n\r\n            getEvent (type, extra = {}) {\r\n                return fn.extend({\r\n\r\n                    type: type,\r\n                    schedule: this.schedule,\r\n                    day: this.day,\r\n                    handled: false,\r\n                    $vm: this,\r\n                    $element: this.$el\r\n\r\n                }, extra)\r\n            }\r\n        }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n\r\n    .ds-span-menu {\r\n        width: 260px;\r\n        padding: 10px;\r\n        background-color: white;\r\n    }\r\n\r\n</style>\r\n"],"sourceRoot":"node_modules/dayspan-vuetify-2/src/components"}]}