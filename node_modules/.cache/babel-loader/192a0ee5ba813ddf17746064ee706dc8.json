{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VExpansionPanel/VExpansionPanelContent.js","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VExpansionPanel/VExpansionPanelContent.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { VExpandTransition } from \"../transitions\"; // Mixins\n\nimport Bootable from \"../../mixins/bootable\";\nimport Colorable from \"../../mixins/colorable\";\nimport { inject as RegistrableInject } from \"../../mixins/registrable\"; // Utilities\n\nimport { getSlot } from \"../../util/helpers\";\nimport mixins from \"../../util/mixins\";\nvar baseMixins = mixins(Bootable, Colorable, RegistrableInject('expansionPanel', 'v-expansion-panel-content', 'v-expansion-panel'));\n/* @vue/component */\n\nexport default baseMixins.extend().extend({\n  name: 'v-expansion-panel-content',\n  computed: {\n    isActive: function isActive() {\n      return this.expansionPanel.isActive;\n    }\n  },\n  created: function created() {\n    this.expansionPanel.registerContent(this);\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.expansionPanel.unregisterContent();\n  },\n  render: function render(h) {\n    var _this = this;\n\n    return h(VExpandTransition, this.showLazyContent(function () {\n      return [h('div', _this.setBackgroundColor(_this.color, {\n        staticClass: 'v-expansion-panel-content',\n        directives: [{\n          name: 'show',\n          value: _this.isActive\n        }]\n      }), [h('div', {\n        class: 'v-expansion-panel-content__wrap'\n      }, getSlot(_this))])];\n    }));\n  }\n});",{"version":3,"sources":["/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VExpansionPanel/VExpansionPanelContent.js"],"names":["VExpandTransition","Bootable","Colorable","inject","RegistrableInject","getSlot","mixins","baseMixins","extend","name","computed","isActive","expansionPanel","created","registerContent","beforeDestroy","unregisterContent","render","h","showLazyContent","setBackgroundColor","color","staticClass","directives","value","class"],"mappings":"AAAA,SAASA,iBAAT,yB,CAAoD;;AAEpD,OAAOC,QAAP;AACA,OAAOC,SAAP;AACA,SAASC,MAAM,IAAIC,iBAAnB,mC,CAAwE;;AAExE,SAASC,OAAT;AACA,OAAOC,MAAP;AACA,IAAMC,UAAU,GAAGD,MAAM,CAACL,QAAD,EAAWC,SAAX,EAAsBE,iBAAiB,CAAC,gBAAD,EAAmB,2BAAnB,EAAgD,mBAAhD,CAAvC,CAAzB;AACA;;AAEA,eAAeG,UAAU,CAACC,MAAX,GAAoBA,MAApB,CAA2B;AACxCC,EAAAA,IAAI,EAAE,2BADkC;AAExCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QADQ,sBACG;AACT,aAAO,KAAKC,cAAL,CAAoBD,QAA3B;AACD;AAHO,GAF8B;AASxCE,EAAAA,OATwC,qBAS9B;AACR,SAAKD,cAAL,CAAoBE,eAApB,CAAoC,IAApC;AACD,GAXuC;AAaxCC,EAAAA,aAbwC,2BAaxB;AACd,SAAKH,cAAL,CAAoBI,iBAApB;AACD,GAfuC;AAiBxCC,EAAAA,MAjBwC,kBAiBjCC,CAjBiC,EAiB9B;AAAA;;AACR,WAAOA,CAAC,CAAClB,iBAAD,EAAoB,KAAKmB,eAAL,CAAqB;AAAA,aAAM,CAACD,CAAC,CAAC,KAAD,EAAQ,KAAI,CAACE,kBAAL,CAAwB,KAAI,CAACC,KAA7B,EAAoC;AACnGC,QAAAA,WAAW,EAAE,2BADsF;AAEnGC,QAAAA,UAAU,EAAE,CAAC;AACXd,UAAAA,IAAI,EAAE,MADK;AAEXe,UAAAA,KAAK,EAAE,KAAI,CAACb;AAFD,SAAD;AAFuF,OAApC,CAAR,EAMrD,CAACO,CAAC,CAAC,KAAD,EAAQ;AACZO,QAAAA,KAAK,EAAE;AADK,OAAR,EAEHpB,OAAO,CAAC,KAAD,CAFJ,CAAF,CANqD,CAAF,CAAN;AAAA,KAArB,CAApB,CAAR;AASD;AA3BuC,CAA3B,CAAf","sourcesContent":["import { VExpandTransition } from '../transitions'; // Mixins\n\nimport Bootable from '../../mixins/bootable';\nimport Colorable from '../../mixins/colorable';\nimport { inject as RegistrableInject } from '../../mixins/registrable'; // Utilities\n\nimport { getSlot } from '../../util/helpers';\nimport mixins from '../../util/mixins';\nconst baseMixins = mixins(Bootable, Colorable, RegistrableInject('expansionPanel', 'v-expansion-panel-content', 'v-expansion-panel'));\n/* @vue/component */\n\nexport default baseMixins.extend().extend({\n  name: 'v-expansion-panel-content',\n  computed: {\n    isActive() {\n      return this.expansionPanel.isActive;\n    }\n\n  },\n\n  created() {\n    this.expansionPanel.registerContent(this);\n  },\n\n  beforeDestroy() {\n    this.expansionPanel.unregisterContent();\n  },\n\n  render(h) {\n    return h(VExpandTransition, this.showLazyContent(() => [h('div', this.setBackgroundColor(this.color, {\n      staticClass: 'v-expansion-panel-content',\n      directives: [{\n        name: 'show',\n        value: this.isActive\n      }]\n    }), [h('div', {\n      class: 'v-expansion-panel-content__wrap'\n    }, getSlot(this))])]));\n  }\n\n});\n//# sourceMappingURL=VExpansionPanelContent.js.map"]}]}