{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VColorPicker/VColorPicker.js","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VColorPicker/VColorPicker.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport _defineProperty from \"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Styles\nimport \"../../../src/components/VColorPicker/VColorPicker.sass\"; // Components\n\nimport VSheet from \"../VSheet/VSheet\";\nimport VColorPickerPreview from \"./VColorPickerPreview\";\nimport VColorPickerCanvas from \"./VColorPickerCanvas\";\nimport VColorPickerEdit, { modes } from \"./VColorPickerEdit\";\nimport VColorPickerSwatches from \"./VColorPickerSwatches\"; // Helpers\n\nimport { parseColor, fromRGBA, extractColor, hasAlpha } from \"./util\";\nimport mixins from \"../../util/mixins\";\nimport { deepEqual } from \"../../util/helpers\";\nimport Themeable from \"../../mixins/themeable\";\nexport default mixins(Themeable).extend({\n  name: 'v-color-picker',\n  props: {\n    canvasHeight: {\n      type: [String, Number],\n      default: 150\n    },\n    disabled: Boolean,\n    dotSize: {\n      type: [Number, String],\n      default: 10\n    },\n    flat: Boolean,\n    hideCanvas: Boolean,\n    hideInputs: Boolean,\n    hideModeSwitch: Boolean,\n    mode: {\n      type: String,\n      default: 'rgba',\n      validator: function validator(v) {\n        return Object.keys(modes).includes(v);\n      }\n    },\n    showSwatches: Boolean,\n    swatches: Array,\n    swatchesMaxHeight: {\n      type: [Number, String],\n      default: 150\n    },\n    value: {\n      type: [Object, String]\n    },\n    width: {\n      type: [Number, String],\n      default: 300\n    }\n  },\n  data: function data() {\n    return {\n      internalValue: fromRGBA({\n        r: 255,\n        g: 0,\n        b: 0,\n        a: 1\n      })\n    };\n  },\n  computed: {\n    hideAlpha: function hideAlpha() {\n      if (!this.value) return false;\n      return !hasAlpha(this.value);\n    }\n  },\n  watch: {\n    value: {\n      handler: function handler(color) {\n        this.updateColor(parseColor(color, this.internalValue));\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    updateColor: function updateColor(color) {\n      this.internalValue = color;\n      var value = extractColor(this.internalValue, this.value);\n\n      if (!deepEqual(value, this.value)) {\n        this.$emit('input', value);\n        this.$emit('update:color', this.internalValue);\n      }\n    },\n    genCanvas: function genCanvas() {\n      return this.$createElement(VColorPickerCanvas, {\n        props: {\n          color: this.internalValue,\n          disabled: this.disabled,\n          dotSize: this.dotSize,\n          width: this.width,\n          height: this.canvasHeight\n        },\n        on: {\n          'update:color': this.updateColor\n        }\n      });\n    },\n    genControls: function genControls() {\n      return this.$createElement('div', {\n        staticClass: 'v-color-picker__controls'\n      }, [this.genPreview(), !this.hideInputs && this.genEdit()]);\n    },\n    genEdit: function genEdit() {\n      var _this = this;\n\n      return this.$createElement(VColorPickerEdit, {\n        props: {\n          color: this.internalValue,\n          disabled: this.disabled,\n          hideAlpha: this.hideAlpha,\n          hideModeSwitch: this.hideModeSwitch,\n          mode: this.mode\n        },\n        on: {\n          'update:color': this.updateColor,\n          'update:mode': function updateMode(v) {\n            return _this.$emit('update:mode', v);\n          }\n        }\n      });\n    },\n    genPreview: function genPreview() {\n      return this.$createElement(VColorPickerPreview, {\n        props: {\n          color: this.internalValue,\n          disabled: this.disabled,\n          hideAlpha: this.hideAlpha\n        },\n        on: {\n          'update:color': this.updateColor\n        }\n      });\n    },\n    genSwatches: function genSwatches() {\n      return this.$createElement(VColorPickerSwatches, {\n        props: {\n          dark: this.dark,\n          light: this.light,\n          swatches: this.swatches,\n          color: this.internalValue,\n          maxHeight: this.swatchesMaxHeight\n        },\n        on: {\n          'update:color': this.updateColor\n        }\n      });\n    }\n  },\n  render: function render(h) {\n    return h(VSheet, {\n      staticClass: 'v-color-picker',\n      class: _objectSpread({\n        'v-color-picker--flat': this.flat\n      }, this.themeClasses),\n      props: {\n        maxWidth: this.width\n      }\n    }, [!this.hideCanvas && this.genCanvas(), this.genControls(), this.showSwatches && this.genSwatches()]);\n  }\n});",{"version":3,"sources":["/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VColorPicker/VColorPicker.js"],"names":["VSheet","VColorPickerPreview","VColorPickerCanvas","VColorPickerEdit","modes","VColorPickerSwatches","parseColor","fromRGBA","extractColor","hasAlpha","mixins","deepEqual","Themeable","extend","name","props","canvasHeight","type","String","Number","default","disabled","Boolean","dotSize","flat","hideCanvas","hideInputs","hideModeSwitch","mode","validator","v","Object","keys","includes","showSwatches","swatches","Array","swatchesMaxHeight","value","width","data","internalValue","r","g","b","a","computed","hideAlpha","watch","handler","color","updateColor","immediate","methods","$emit","genCanvas","$createElement","height","on","genControls","staticClass","genPreview","genEdit","genSwatches","dark","light","maxHeight","render","h","class","themeClasses","maxWidth"],"mappings":"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","sourcesContent":["// Styles\nimport \"../../../src/components/VColorPicker/VColorPicker.sass\"; // Components\n\nimport VSheet from '../VSheet/VSheet';\nimport VColorPickerPreview from './VColorPickerPreview';\nimport VColorPickerCanvas from './VColorPickerCanvas';\nimport VColorPickerEdit, { modes } from './VColorPickerEdit';\nimport VColorPickerSwatches from './VColorPickerSwatches'; // Helpers\n\nimport { parseColor, fromRGBA, extractColor, hasAlpha } from './util';\nimport mixins from '../../util/mixins';\nimport { deepEqual } from '../../util/helpers';\nimport Themeable from '../../mixins/themeable';\nexport default mixins(Themeable).extend({\n  name: 'v-color-picker',\n  props: {\n    canvasHeight: {\n      type: [String, Number],\n      default: 150\n    },\n    disabled: Boolean,\n    dotSize: {\n      type: [Number, String],\n      default: 10\n    },\n    flat: Boolean,\n    hideCanvas: Boolean,\n    hideInputs: Boolean,\n    hideModeSwitch: Boolean,\n    mode: {\n      type: String,\n      default: 'rgba',\n      validator: v => Object.keys(modes).includes(v)\n    },\n    showSwatches: Boolean,\n    swatches: Array,\n    swatchesMaxHeight: {\n      type: [Number, String],\n      default: 150\n    },\n    value: {\n      type: [Object, String]\n    },\n    width: {\n      type: [Number, String],\n      default: 300\n    }\n  },\n  data: () => ({\n    internalValue: fromRGBA({\n      r: 255,\n      g: 0,\n      b: 0,\n      a: 1\n    })\n  }),\n  computed: {\n    hideAlpha() {\n      if (!this.value) return false;\n      return !hasAlpha(this.value);\n    }\n\n  },\n  watch: {\n    value: {\n      handler(color) {\n        this.updateColor(parseColor(color, this.internalValue));\n      },\n\n      immediate: true\n    }\n  },\n  methods: {\n    updateColor(color) {\n      this.internalValue = color;\n      const value = extractColor(this.internalValue, this.value);\n\n      if (!deepEqual(value, this.value)) {\n        this.$emit('input', value);\n        this.$emit('update:color', this.internalValue);\n      }\n    },\n\n    genCanvas() {\n      return this.$createElement(VColorPickerCanvas, {\n        props: {\n          color: this.internalValue,\n          disabled: this.disabled,\n          dotSize: this.dotSize,\n          width: this.width,\n          height: this.canvasHeight\n        },\n        on: {\n          'update:color': this.updateColor\n        }\n      });\n    },\n\n    genControls() {\n      return this.$createElement('div', {\n        staticClass: 'v-color-picker__controls'\n      }, [this.genPreview(), !this.hideInputs && this.genEdit()]);\n    },\n\n    genEdit() {\n      return this.$createElement(VColorPickerEdit, {\n        props: {\n          color: this.internalValue,\n          disabled: this.disabled,\n          hideAlpha: this.hideAlpha,\n          hideModeSwitch: this.hideModeSwitch,\n          mode: this.mode\n        },\n        on: {\n          'update:color': this.updateColor,\n          'update:mode': v => this.$emit('update:mode', v)\n        }\n      });\n    },\n\n    genPreview() {\n      return this.$createElement(VColorPickerPreview, {\n        props: {\n          color: this.internalValue,\n          disabled: this.disabled,\n          hideAlpha: this.hideAlpha\n        },\n        on: {\n          'update:color': this.updateColor\n        }\n      });\n    },\n\n    genSwatches() {\n      return this.$createElement(VColorPickerSwatches, {\n        props: {\n          dark: this.dark,\n          light: this.light,\n          swatches: this.swatches,\n          color: this.internalValue,\n          maxHeight: this.swatchesMaxHeight\n        },\n        on: {\n          'update:color': this.updateColor\n        }\n      });\n    }\n\n  },\n\n  render(h) {\n    return h(VSheet, {\n      staticClass: 'v-color-picker',\n      class: {\n        'v-color-picker--flat': this.flat,\n        ...this.themeClasses\n      },\n      props: {\n        maxWidth: this.width\n      }\n    }, [!this.hideCanvas && this.genCanvas(), this.genControls(), this.showSwatches && this.genSwatches()]);\n  }\n\n});\n//# sourceMappingURL=VColorPicker.js.map"]}]}