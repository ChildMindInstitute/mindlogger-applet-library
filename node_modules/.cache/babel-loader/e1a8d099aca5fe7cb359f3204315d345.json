{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/transitions/createTransition.js","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/transitions/createTransition.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import mergeData from \"../../util/mergeData\";\n\nfunction mergeTransitions() {\n  var _Array;\n\n  var dest = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  for (var _len = arguments.length, transitions = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    transitions[_key - 1] = arguments[_key];\n  }\n\n  /* eslint-disable-next-line no-array-constructor */\n  return (_Array = Array()).concat.apply(_Array, [dest].concat(transitions));\n}\n\nexport function createSimpleTransition(name) {\n  var origin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top center 0';\n  var mode = arguments.length > 2 ? arguments[2] : undefined;\n  return {\n    name: name,\n    functional: true,\n    props: {\n      group: {\n        type: Boolean,\n        default: false\n      },\n      hideOnLeave: {\n        type: Boolean,\n        default: false\n      },\n      leaveAbsolute: {\n        type: Boolean,\n        default: false\n      },\n      mode: {\n        type: String,\n        default: mode\n      },\n      origin: {\n        type: String,\n        default: origin\n      }\n    },\n    render: function render(h, context) {\n      var tag = \"transition\".concat(context.props.group ? '-group' : '');\n      var data = {\n        props: {\n          name: name,\n          mode: context.props.mode\n        },\n        on: {\n          beforeEnter: function beforeEnter(el) {\n            el.style.transformOrigin = context.props.origin;\n            el.style.webkitTransformOrigin = context.props.origin;\n          }\n        }\n      };\n\n      if (context.props.leaveAbsolute) {\n        data.on.leave = mergeTransitions(data.on.leave, function (el) {\n          return el.style.position = 'absolute';\n        });\n      }\n\n      if (context.props.hideOnLeave) {\n        data.on.leave = mergeTransitions(data.on.leave, function (el) {\n          return el.style.display = 'none';\n        });\n      }\n\n      return h(tag, mergeData(context.data, data), context.children);\n    }\n  };\n}\nexport function createJavascriptTransition(name, functions) {\n  var mode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'in-out';\n  return {\n    name: name,\n    functional: true,\n    props: {\n      mode: {\n        type: String,\n        default: mode\n      }\n    },\n    render: function render(h, context) {\n      return h('transition', mergeData(context.data, {\n        props: {\n          name: name\n        },\n        on: functions\n      }), context.children);\n    }\n  };\n}",{"version":3,"sources":["/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/transitions/createTransition.js"],"names":["mergeData","mergeTransitions","dest","transitions","Array","concat","createSimpleTransition","name","origin","mode","functional","props","group","type","Boolean","default","hideOnLeave","leaveAbsolute","String","render","h","context","tag","data","on","beforeEnter","el","style","transformOrigin","webkitTransformOrigin","leave","position","display","children","createJavascriptTransition","functions"],"mappings":"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","sourcesContent":["import mergeData from '../../util/mergeData';\n\nfunction mergeTransitions(dest = [], ...transitions) {\n  /* eslint-disable-next-line no-array-constructor */\n  return Array().concat(dest, ...transitions);\n}\n\nexport function createSimpleTransition(name, origin = 'top center 0', mode) {\n  return {\n    name,\n    functional: true,\n    props: {\n      group: {\n        type: Boolean,\n        default: false\n      },\n      hideOnLeave: {\n        type: Boolean,\n        default: false\n      },\n      leaveAbsolute: {\n        type: Boolean,\n        default: false\n      },\n      mode: {\n        type: String,\n        default: mode\n      },\n      origin: {\n        type: String,\n        default: origin\n      }\n    },\n\n    render(h, context) {\n      const tag = `transition${context.props.group ? '-group' : ''}`;\n      const data = {\n        props: {\n          name,\n          mode: context.props.mode\n        },\n        on: {\n          beforeEnter(el) {\n            el.style.transformOrigin = context.props.origin;\n            el.style.webkitTransformOrigin = context.props.origin;\n          }\n\n        }\n      };\n\n      if (context.props.leaveAbsolute) {\n        data.on.leave = mergeTransitions(data.on.leave, el => el.style.position = 'absolute');\n      }\n\n      if (context.props.hideOnLeave) {\n        data.on.leave = mergeTransitions(data.on.leave, el => el.style.display = 'none');\n      }\n\n      return h(tag, mergeData(context.data, data), context.children);\n    }\n\n  };\n}\nexport function createJavascriptTransition(name, functions, mode = 'in-out') {\n  return {\n    name,\n    functional: true,\n    props: {\n      mode: {\n        type: String,\n        default: mode\n      }\n    },\n\n    render(h, context) {\n      return h('transition', mergeData(context.data, {\n        props: {\n          name\n        },\n        on: functions\n      }), context.children);\n    }\n\n  };\n}\n//# sourceMappingURL=createTransition.js.map"]}]}