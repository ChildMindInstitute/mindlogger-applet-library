{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VTimePicker/VTimePicker.js","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VTimePicker/VTimePicker.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.regexp.match\";\nimport _slicedToArray from \"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\n// Components\nimport VTimePickerTitle from \"./VTimePickerTitle\";\nimport VTimePickerClock from \"./VTimePickerClock\"; // Mixins\n\nimport Picker from \"../../mixins/picker\";\nimport PickerButton from \"../../mixins/picker-button\"; // Utils\n\nimport { createRange } from \"../../util/helpers\";\nimport pad from \"../VDatePicker/util/pad\";\nimport mixins from \"../../util/mixins\";\nimport { SelectingTimes } from \"./SelectingTimes\";\nvar rangeHours24 = createRange(24);\nvar rangeHours12am = createRange(12);\nvar rangeHours12pm = rangeHours12am.map(function (v) {\n  return v + 12;\n});\nvar range60 = createRange(60);\nvar selectingNames = {\n  1: 'hour',\n  2: 'minute',\n  3: 'second'\n};\nexport { SelectingTimes };\nexport default mixins(Picker, PickerButton\n/* @vue/component */\n).extend({\n  name: 'v-time-picker',\n  props: {\n    allowedHours: [Function, Array],\n    allowedMinutes: [Function, Array],\n    allowedSeconds: [Function, Array],\n    disabled: Boolean,\n    format: {\n      type: String,\n      default: 'ampm',\n      validator: function validator(val) {\n        return ['ampm', '24hr'].includes(val);\n      }\n    },\n    min: String,\n    max: String,\n    readonly: Boolean,\n    scrollable: Boolean,\n    useSeconds: Boolean,\n    value: null,\n    ampmInTitle: Boolean\n  },\n  data: function data() {\n    return {\n      inputHour: null,\n      inputMinute: null,\n      inputSecond: null,\n      lazyInputHour: null,\n      lazyInputMinute: null,\n      lazyInputSecond: null,\n      period: 'am',\n      selecting: SelectingTimes.Hour\n    };\n  },\n  computed: {\n    selectingHour: {\n      get: function get() {\n        return this.selecting === SelectingTimes.Hour;\n      },\n      set: function set(v) {\n        this.selecting = SelectingTimes.Hour;\n      }\n    },\n    selectingMinute: {\n      get: function get() {\n        return this.selecting === SelectingTimes.Minute;\n      },\n      set: function set(v) {\n        this.selecting = SelectingTimes.Minute;\n      }\n    },\n    selectingSecond: {\n      get: function get() {\n        return this.selecting === SelectingTimes.Second;\n      },\n      set: function set(v) {\n        this.selecting = SelectingTimes.Second;\n      }\n    },\n    isAllowedHourCb: function isAllowedHourCb() {\n      var _this = this;\n\n      var cb;\n\n      if (this.allowedHours instanceof Array) {\n        cb = function cb(val) {\n          return _this.allowedHours.includes(val);\n        };\n      } else {\n        cb = this.allowedHours;\n      }\n\n      if (!this.min && !this.max) return cb;\n      var minHour = this.min ? Number(this.min.split(':')[0]) : 0;\n      var maxHour = this.max ? Number(this.max.split(':')[0]) : 23;\n      return function (val) {\n        return val >= minHour * 1 && val <= maxHour * 1 && (!cb || cb(val));\n      };\n    },\n    isAllowedMinuteCb: function isAllowedMinuteCb() {\n      var _this2 = this;\n\n      var cb;\n      var isHourAllowed = !this.isAllowedHourCb || this.inputHour === null || this.isAllowedHourCb(this.inputHour);\n\n      if (this.allowedMinutes instanceof Array) {\n        cb = function cb(val) {\n          return _this2.allowedMinutes.includes(val);\n        };\n      } else {\n        cb = this.allowedMinutes;\n      }\n\n      if (!this.min && !this.max) {\n        return isHourAllowed ? cb : function () {\n          return false;\n        };\n      }\n\n      var _ref = this.min ? this.min.split(':').map(Number) : [0, 0],\n          _ref2 = _slicedToArray(_ref, 2),\n          minHour = _ref2[0],\n          minMinute = _ref2[1];\n\n      var _ref3 = this.max ? this.max.split(':').map(Number) : [23, 59],\n          _ref4 = _slicedToArray(_ref3, 2),\n          maxHour = _ref4[0],\n          maxMinute = _ref4[1];\n\n      var minTime = minHour * 60 + minMinute * 1;\n      var maxTime = maxHour * 60 + maxMinute * 1;\n      return function (val) {\n        var time = 60 * _this2.inputHour + val;\n        return time >= minTime && time <= maxTime && isHourAllowed && (!cb || cb(val));\n      };\n    },\n    isAllowedSecondCb: function isAllowedSecondCb() {\n      var _this3 = this;\n\n      var cb;\n      var isHourAllowed = !this.isAllowedHourCb || this.inputHour === null || this.isAllowedHourCb(this.inputHour);\n      var isMinuteAllowed = isHourAllowed && (!this.isAllowedMinuteCb || this.inputMinute === null || this.isAllowedMinuteCb(this.inputMinute));\n\n      if (this.allowedSeconds instanceof Array) {\n        cb = function cb(val) {\n          return _this3.allowedSeconds.includes(val);\n        };\n      } else {\n        cb = this.allowedSeconds;\n      }\n\n      if (!this.min && !this.max) {\n        return isMinuteAllowed ? cb : function () {\n          return false;\n        };\n      }\n\n      var _ref5 = this.min ? this.min.split(':').map(Number) : [0, 0, 0],\n          _ref6 = _slicedToArray(_ref5, 3),\n          minHour = _ref6[0],\n          minMinute = _ref6[1],\n          minSecond = _ref6[2];\n\n      var _ref7 = this.max ? this.max.split(':').map(Number) : [23, 59, 59],\n          _ref8 = _slicedToArray(_ref7, 3),\n          maxHour = _ref8[0],\n          maxMinute = _ref8[1],\n          maxSecond = _ref8[2];\n\n      var minTime = minHour * 3600 + minMinute * 60 + (minSecond || 0) * 1;\n      var maxTime = maxHour * 3600 + maxMinute * 60 + (maxSecond || 0) * 1;\n      return function (val) {\n        var time = 3600 * _this3.inputHour + 60 * _this3.inputMinute + val;\n        return time >= minTime && time <= maxTime && isMinuteAllowed && (!cb || cb(val));\n      };\n    },\n    isAmPm: function isAmPm() {\n      return this.format === 'ampm';\n    }\n  },\n  watch: {\n    value: 'setInputData'\n  },\n  mounted: function mounted() {\n    this.setInputData(this.value);\n    this.$on('update:period', this.setPeriod);\n  },\n  methods: {\n    genValue: function genValue() {\n      if (this.inputHour != null && this.inputMinute != null && (!this.useSeconds || this.inputSecond != null)) {\n        return \"\".concat(pad(this.inputHour), \":\").concat(pad(this.inputMinute)) + (this.useSeconds ? \":\".concat(pad(this.inputSecond)) : '');\n      }\n\n      return null;\n    },\n    emitValue: function emitValue() {\n      var value = this.genValue();\n      if (value !== null) this.$emit('input', value);\n    },\n    setPeriod: function setPeriod(period) {\n      this.period = period;\n\n      if (this.inputHour != null) {\n        var newHour = this.inputHour + (period === 'am' ? -12 : 12);\n        this.inputHour = this.firstAllowed('hour', newHour);\n        this.emitValue();\n      }\n    },\n    setInputData: function setInputData(value) {\n      if (value == null || value === '') {\n        this.inputHour = null;\n        this.inputMinute = null;\n        this.inputSecond = null;\n      } else if (value instanceof Date) {\n        this.inputHour = value.getHours();\n        this.inputMinute = value.getMinutes();\n        this.inputSecond = value.getSeconds();\n      } else {\n        var _ref9 = value.trim().toLowerCase().match(/^(\\d+):(\\d+)(:(\\d+))?([ap]m)?$/) || new Array(6),\n            _ref10 = _slicedToArray(_ref9, 6),\n            hour = _ref10[1],\n            minute = _ref10[2],\n            second = _ref10[4],\n            period = _ref10[5];\n\n        this.inputHour = period ? this.convert12to24(parseInt(hour, 10), period) : parseInt(hour, 10);\n        this.inputMinute = parseInt(minute, 10);\n        this.inputSecond = parseInt(second || 0, 10);\n      }\n\n      this.period = this.inputHour == null || this.inputHour < 12 ? 'am' : 'pm';\n    },\n    convert24to12: function convert24to12(hour) {\n      return hour ? (hour - 1) % 12 + 1 : 12;\n    },\n    convert12to24: function convert12to24(hour, period) {\n      return hour % 12 + (period === 'pm' ? 12 : 0);\n    },\n    onInput: function onInput(value) {\n      if (this.selecting === SelectingTimes.Hour) {\n        this.inputHour = this.isAmPm ? this.convert12to24(value, this.period) : value;\n      } else if (this.selecting === SelectingTimes.Minute) {\n        this.inputMinute = value;\n      } else {\n        this.inputSecond = value;\n      }\n\n      this.emitValue();\n    },\n    onChange: function onChange(value) {\n      this.$emit(\"click:\".concat(selectingNames[this.selecting]), value);\n      var emitChange = this.selecting === (this.useSeconds ? SelectingTimes.Second : SelectingTimes.Minute);\n\n      if (this.selecting === SelectingTimes.Hour) {\n        this.selecting = SelectingTimes.Minute;\n      } else if (this.useSeconds && this.selecting === SelectingTimes.Minute) {\n        this.selecting = SelectingTimes.Second;\n      }\n\n      if (this.inputHour === this.lazyInputHour && this.inputMinute === this.lazyInputMinute && (!this.useSeconds || this.inputSecond === this.lazyInputSecond)) return;\n      var time = this.genValue();\n      if (time === null) return;\n      this.lazyInputHour = this.inputHour;\n      this.lazyInputMinute = this.inputMinute;\n      this.useSeconds && (this.lazyInputSecond = this.inputSecond);\n      emitChange && this.$emit('change', time);\n    },\n    firstAllowed: function firstAllowed(type, value) {\n      var allowedFn = type === 'hour' ? this.isAllowedHourCb : type === 'minute' ? this.isAllowedMinuteCb : this.isAllowedSecondCb;\n      if (!allowedFn) return value; // TODO: clean up\n\n      var range = type === 'minute' ? range60 : type === 'second' ? range60 : this.isAmPm ? value < 12 ? rangeHours12am : rangeHours12pm : rangeHours24;\n      var first = range.find(function (v) {\n        return allowedFn((v + value) % range.length + range[0]);\n      });\n      return ((first || 0) + value) % range.length + range[0];\n    },\n    genClock: function genClock() {\n      return this.$createElement(VTimePickerClock, {\n        props: {\n          allowedValues: this.selecting === SelectingTimes.Hour ? this.isAllowedHourCb : this.selecting === SelectingTimes.Minute ? this.isAllowedMinuteCb : this.isAllowedSecondCb,\n          color: this.color,\n          dark: this.dark,\n          disabled: this.disabled,\n          double: this.selecting === SelectingTimes.Hour && !this.isAmPm,\n          format: this.selecting === SelectingTimes.Hour ? this.isAmPm ? this.convert24to12 : function (val) {\n            return val;\n          } : function (val) {\n            return pad(val, 2);\n          },\n          light: this.light,\n          max: this.selecting === SelectingTimes.Hour ? this.isAmPm && this.period === 'am' ? 11 : 23 : 59,\n          min: this.selecting === SelectingTimes.Hour && this.isAmPm && this.period === 'pm' ? 12 : 0,\n          readonly: this.readonly,\n          scrollable: this.scrollable,\n          size: Number(this.width) - (!this.fullWidth && this.landscape ? 80 : 20),\n          step: this.selecting === SelectingTimes.Hour ? 1 : 5,\n          value: this.selecting === SelectingTimes.Hour ? this.inputHour : this.selecting === SelectingTimes.Minute ? this.inputMinute : this.inputSecond\n        },\n        on: {\n          input: this.onInput,\n          change: this.onChange\n        },\n        ref: 'clock'\n      });\n    },\n    genClockAmPm: function genClockAmPm() {\n      return this.$createElement('div', this.setTextColor(this.color || 'primary', {\n        staticClass: 'v-time-picker-clock__ampm'\n      }), [this.genPickerButton('period', 'am', this.$vuetify.lang.t('$vuetify.timePicker.am'), this.disabled || this.readonly), this.genPickerButton('period', 'pm', this.$vuetify.lang.t('$vuetify.timePicker.pm'), this.disabled || this.readonly)]);\n    },\n    genPickerBody: function genPickerBody() {\n      return this.$createElement('div', {\n        staticClass: 'v-time-picker-clock__container',\n        key: this.selecting\n      }, [!this.ampmInTitle && this.isAmPm && this.genClockAmPm(), this.genClock()]);\n    },\n    genPickerTitle: function genPickerTitle() {\n      var _this4 = this;\n\n      return this.$createElement(VTimePickerTitle, {\n        props: {\n          ampm: this.isAmPm,\n          ampmReadonly: this.isAmPm && !this.ampmInTitle,\n          disabled: this.disabled,\n          hour: this.inputHour,\n          minute: this.inputMinute,\n          second: this.inputSecond,\n          period: this.period,\n          readonly: this.readonly,\n          useSeconds: this.useSeconds,\n          selecting: this.selecting\n        },\n        on: {\n          'update:selecting': function updateSelecting(value) {\n            return _this4.selecting = value;\n          },\n          'update:period': function updatePeriod(period) {\n            return _this4.$emit('update:period', period);\n          }\n        },\n        ref: 'title',\n        slot: 'title'\n      });\n    }\n  },\n  render: function render() {\n    return this.genPicker('v-picker--time');\n  }\n});",{"version":3,"sources":["/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VTimePicker/VTimePicker.js"],"names":["VTimePickerTitle","VTimePickerClock","Picker","PickerButton","createRange","pad","mixins","SelectingTimes","rangeHours24","rangeHours12am","rangeHours12pm","map","v","range60","selectingNames","extend","name","props","allowedHours","Function","Array","allowedMinutes","allowedSeconds","disabled","Boolean","format","type","String","default","validator","val","includes","min","max","readonly","scrollable","useSeconds","value","ampmInTitle","data","inputHour","inputMinute","inputSecond","lazyInputHour","lazyInputMinute","lazyInputSecond","period","selecting","Hour","computed","selectingHour","get","set","selectingMinute","Minute","selectingSecond","Second","isAllowedHourCb","cb","minHour","Number","split","maxHour","isAllowedMinuteCb","isHourAllowed","minMinute","maxMinute","minTime","maxTime","time","isAllowedSecondCb","isMinuteAllowed","minSecond","maxSecond","isAmPm","watch","mounted","setInputData","$on","setPeriod","methods","genValue","emitValue","$emit","newHour","firstAllowed","Date","getHours","getMinutes","getSeconds","trim","toLowerCase","match","hour","minute","second","convert12to24","parseInt","convert24to12","onInput","onChange","emitChange","allowedFn","range","first","find","length","genClock","$createElement","allowedValues","color","dark","double","light","size","width","fullWidth","landscape","step","on","input","change","ref","genClockAmPm","setTextColor","staticClass","genPickerButton","$vuetify","lang","t","genPickerBody","key","genPickerTitle","ampm","ampmReadonly","slot","render","genPicker"],"mappings":"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","sourcesContent":["// Components\nimport VTimePickerTitle from './VTimePickerTitle';\nimport VTimePickerClock from './VTimePickerClock'; // Mixins\n\nimport Picker from '../../mixins/picker';\nimport PickerButton from '../../mixins/picker-button'; // Utils\n\nimport { createRange } from '../../util/helpers';\nimport pad from '../VDatePicker/util/pad';\nimport mixins from '../../util/mixins';\nimport { SelectingTimes } from './SelectingTimes';\nconst rangeHours24 = createRange(24);\nconst rangeHours12am = createRange(12);\nconst rangeHours12pm = rangeHours12am.map(v => v + 12);\nconst range60 = createRange(60);\nconst selectingNames = {\n  1: 'hour',\n  2: 'minute',\n  3: 'second'\n};\nexport { SelectingTimes };\nexport default mixins(Picker, PickerButton\n/* @vue/component */\n).extend({\n  name: 'v-time-picker',\n  props: {\n    allowedHours: [Function, Array],\n    allowedMinutes: [Function, Array],\n    allowedSeconds: [Function, Array],\n    disabled: Boolean,\n    format: {\n      type: String,\n      default: 'ampm',\n\n      validator(val) {\n        return ['ampm', '24hr'].includes(val);\n      }\n\n    },\n    min: String,\n    max: String,\n    readonly: Boolean,\n    scrollable: Boolean,\n    useSeconds: Boolean,\n    value: null,\n    ampmInTitle: Boolean\n  },\n\n  data() {\n    return {\n      inputHour: null,\n      inputMinute: null,\n      inputSecond: null,\n      lazyInputHour: null,\n      lazyInputMinute: null,\n      lazyInputSecond: null,\n      period: 'am',\n      selecting: SelectingTimes.Hour\n    };\n  },\n\n  computed: {\n    selectingHour: {\n      get() {\n        return this.selecting === SelectingTimes.Hour;\n      },\n\n      set(v) {\n        this.selecting = SelectingTimes.Hour;\n      }\n\n    },\n    selectingMinute: {\n      get() {\n        return this.selecting === SelectingTimes.Minute;\n      },\n\n      set(v) {\n        this.selecting = SelectingTimes.Minute;\n      }\n\n    },\n    selectingSecond: {\n      get() {\n        return this.selecting === SelectingTimes.Second;\n      },\n\n      set(v) {\n        this.selecting = SelectingTimes.Second;\n      }\n\n    },\n\n    isAllowedHourCb() {\n      let cb;\n\n      if (this.allowedHours instanceof Array) {\n        cb = val => this.allowedHours.includes(val);\n      } else {\n        cb = this.allowedHours;\n      }\n\n      if (!this.min && !this.max) return cb;\n      const minHour = this.min ? Number(this.min.split(':')[0]) : 0;\n      const maxHour = this.max ? Number(this.max.split(':')[0]) : 23;\n      return val => {\n        return val >= minHour * 1 && val <= maxHour * 1 && (!cb || cb(val));\n      };\n    },\n\n    isAllowedMinuteCb() {\n      let cb;\n      const isHourAllowed = !this.isAllowedHourCb || this.inputHour === null || this.isAllowedHourCb(this.inputHour);\n\n      if (this.allowedMinutes instanceof Array) {\n        cb = val => this.allowedMinutes.includes(val);\n      } else {\n        cb = this.allowedMinutes;\n      }\n\n      if (!this.min && !this.max) {\n        return isHourAllowed ? cb : () => false;\n      }\n\n      const [minHour, minMinute] = this.min ? this.min.split(':').map(Number) : [0, 0];\n      const [maxHour, maxMinute] = this.max ? this.max.split(':').map(Number) : [23, 59];\n      const minTime = minHour * 60 + minMinute * 1;\n      const maxTime = maxHour * 60 + maxMinute * 1;\n      return val => {\n        const time = 60 * this.inputHour + val;\n        return time >= minTime && time <= maxTime && isHourAllowed && (!cb || cb(val));\n      };\n    },\n\n    isAllowedSecondCb() {\n      let cb;\n      const isHourAllowed = !this.isAllowedHourCb || this.inputHour === null || this.isAllowedHourCb(this.inputHour);\n      const isMinuteAllowed = isHourAllowed && (!this.isAllowedMinuteCb || this.inputMinute === null || this.isAllowedMinuteCb(this.inputMinute));\n\n      if (this.allowedSeconds instanceof Array) {\n        cb = val => this.allowedSeconds.includes(val);\n      } else {\n        cb = this.allowedSeconds;\n      }\n\n      if (!this.min && !this.max) {\n        return isMinuteAllowed ? cb : () => false;\n      }\n\n      const [minHour, minMinute, minSecond] = this.min ? this.min.split(':').map(Number) : [0, 0, 0];\n      const [maxHour, maxMinute, maxSecond] = this.max ? this.max.split(':').map(Number) : [23, 59, 59];\n      const minTime = minHour * 3600 + minMinute * 60 + (minSecond || 0) * 1;\n      const maxTime = maxHour * 3600 + maxMinute * 60 + (maxSecond || 0) * 1;\n      return val => {\n        const time = 3600 * this.inputHour + 60 * this.inputMinute + val;\n        return time >= minTime && time <= maxTime && isMinuteAllowed && (!cb || cb(val));\n      };\n    },\n\n    isAmPm() {\n      return this.format === 'ampm';\n    }\n\n  },\n  watch: {\n    value: 'setInputData'\n  },\n\n  mounted() {\n    this.setInputData(this.value);\n    this.$on('update:period', this.setPeriod);\n  },\n\n  methods: {\n    genValue() {\n      if (this.inputHour != null && this.inputMinute != null && (!this.useSeconds || this.inputSecond != null)) {\n        return `${pad(this.inputHour)}:${pad(this.inputMinute)}` + (this.useSeconds ? `:${pad(this.inputSecond)}` : '');\n      }\n\n      return null;\n    },\n\n    emitValue() {\n      const value = this.genValue();\n      if (value !== null) this.$emit('input', value);\n    },\n\n    setPeriod(period) {\n      this.period = period;\n\n      if (this.inputHour != null) {\n        const newHour = this.inputHour + (period === 'am' ? -12 : 12);\n        this.inputHour = this.firstAllowed('hour', newHour);\n        this.emitValue();\n      }\n    },\n\n    setInputData(value) {\n      if (value == null || value === '') {\n        this.inputHour = null;\n        this.inputMinute = null;\n        this.inputSecond = null;\n      } else if (value instanceof Date) {\n        this.inputHour = value.getHours();\n        this.inputMinute = value.getMinutes();\n        this.inputSecond = value.getSeconds();\n      } else {\n        const [, hour, minute,, second, period] = value.trim().toLowerCase().match(/^(\\d+):(\\d+)(:(\\d+))?([ap]m)?$/) || new Array(6);\n        this.inputHour = period ? this.convert12to24(parseInt(hour, 10), period) : parseInt(hour, 10);\n        this.inputMinute = parseInt(minute, 10);\n        this.inputSecond = parseInt(second || 0, 10);\n      }\n\n      this.period = this.inputHour == null || this.inputHour < 12 ? 'am' : 'pm';\n    },\n\n    convert24to12(hour) {\n      return hour ? (hour - 1) % 12 + 1 : 12;\n    },\n\n    convert12to24(hour, period) {\n      return hour % 12 + (period === 'pm' ? 12 : 0);\n    },\n\n    onInput(value) {\n      if (this.selecting === SelectingTimes.Hour) {\n        this.inputHour = this.isAmPm ? this.convert12to24(value, this.period) : value;\n      } else if (this.selecting === SelectingTimes.Minute) {\n        this.inputMinute = value;\n      } else {\n        this.inputSecond = value;\n      }\n\n      this.emitValue();\n    },\n\n    onChange(value) {\n      this.$emit(`click:${selectingNames[this.selecting]}`, value);\n      const emitChange = this.selecting === (this.useSeconds ? SelectingTimes.Second : SelectingTimes.Minute);\n\n      if (this.selecting === SelectingTimes.Hour) {\n        this.selecting = SelectingTimes.Minute;\n      } else if (this.useSeconds && this.selecting === SelectingTimes.Minute) {\n        this.selecting = SelectingTimes.Second;\n      }\n\n      if (this.inputHour === this.lazyInputHour && this.inputMinute === this.lazyInputMinute && (!this.useSeconds || this.inputSecond === this.lazyInputSecond)) return;\n      const time = this.genValue();\n      if (time === null) return;\n      this.lazyInputHour = this.inputHour;\n      this.lazyInputMinute = this.inputMinute;\n      this.useSeconds && (this.lazyInputSecond = this.inputSecond);\n      emitChange && this.$emit('change', time);\n    },\n\n    firstAllowed(type, value) {\n      const allowedFn = type === 'hour' ? this.isAllowedHourCb : type === 'minute' ? this.isAllowedMinuteCb : this.isAllowedSecondCb;\n      if (!allowedFn) return value; // TODO: clean up\n\n      const range = type === 'minute' ? range60 : type === 'second' ? range60 : this.isAmPm ? value < 12 ? rangeHours12am : rangeHours12pm : rangeHours24;\n      const first = range.find(v => allowedFn((v + value) % range.length + range[0]));\n      return ((first || 0) + value) % range.length + range[0];\n    },\n\n    genClock() {\n      return this.$createElement(VTimePickerClock, {\n        props: {\n          allowedValues: this.selecting === SelectingTimes.Hour ? this.isAllowedHourCb : this.selecting === SelectingTimes.Minute ? this.isAllowedMinuteCb : this.isAllowedSecondCb,\n          color: this.color,\n          dark: this.dark,\n          disabled: this.disabled,\n          double: this.selecting === SelectingTimes.Hour && !this.isAmPm,\n          format: this.selecting === SelectingTimes.Hour ? this.isAmPm ? this.convert24to12 : val => val : val => pad(val, 2),\n          light: this.light,\n          max: this.selecting === SelectingTimes.Hour ? this.isAmPm && this.period === 'am' ? 11 : 23 : 59,\n          min: this.selecting === SelectingTimes.Hour && this.isAmPm && this.period === 'pm' ? 12 : 0,\n          readonly: this.readonly,\n          scrollable: this.scrollable,\n          size: Number(this.width) - (!this.fullWidth && this.landscape ? 80 : 20),\n          step: this.selecting === SelectingTimes.Hour ? 1 : 5,\n          value: this.selecting === SelectingTimes.Hour ? this.inputHour : this.selecting === SelectingTimes.Minute ? this.inputMinute : this.inputSecond\n        },\n        on: {\n          input: this.onInput,\n          change: this.onChange\n        },\n        ref: 'clock'\n      });\n    },\n\n    genClockAmPm() {\n      return this.$createElement('div', this.setTextColor(this.color || 'primary', {\n        staticClass: 'v-time-picker-clock__ampm'\n      }), [this.genPickerButton('period', 'am', this.$vuetify.lang.t('$vuetify.timePicker.am'), this.disabled || this.readonly), this.genPickerButton('period', 'pm', this.$vuetify.lang.t('$vuetify.timePicker.pm'), this.disabled || this.readonly)]);\n    },\n\n    genPickerBody() {\n      return this.$createElement('div', {\n        staticClass: 'v-time-picker-clock__container',\n        key: this.selecting\n      }, [!this.ampmInTitle && this.isAmPm && this.genClockAmPm(), this.genClock()]);\n    },\n\n    genPickerTitle() {\n      return this.$createElement(VTimePickerTitle, {\n        props: {\n          ampm: this.isAmPm,\n          ampmReadonly: this.isAmPm && !this.ampmInTitle,\n          disabled: this.disabled,\n          hour: this.inputHour,\n          minute: this.inputMinute,\n          second: this.inputSecond,\n          period: this.period,\n          readonly: this.readonly,\n          useSeconds: this.useSeconds,\n          selecting: this.selecting\n        },\n        on: {\n          'update:selecting': value => this.selecting = value,\n          'update:period': period => this.$emit('update:period', period)\n        },\n        ref: 'title',\n        slot: 'title'\n      });\n    }\n\n  },\n\n  render() {\n    return this.genPicker('v-picker--time');\n  }\n\n});\n//# sourceMappingURL=VTimePicker.js.map"]}]}