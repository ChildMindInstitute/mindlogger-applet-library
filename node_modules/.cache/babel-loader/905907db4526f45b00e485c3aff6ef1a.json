{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/mixins/selectable/index.js","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/mixins/selectable/index.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\n// Components\nimport VInput from \"../../components/VInput\"; // Mixins\n\nimport Rippleable from \"../rippleable\";\nimport Comparable from \"../comparable\"; // Utilities\n\nimport mixins from \"../../util/mixins\";\n/* @vue/component */\n\nexport default mixins(VInput, Rippleable, Comparable).extend({\n  name: 'selectable',\n  model: {\n    prop: 'inputValue',\n    event: 'change'\n  },\n  props: {\n    id: String,\n    inputValue: null,\n    falseValue: null,\n    trueValue: null,\n    multiple: {\n      type: Boolean,\n      default: null\n    },\n    label: String\n  },\n  data: function data() {\n    return {\n      hasColor: this.inputValue,\n      lazyValue: this.inputValue\n    };\n  },\n  computed: {\n    computedColor: function computedColor() {\n      if (!this.isActive) return undefined;\n      if (this.color) return this.color;\n      if (this.isDark && !this.appIsDark) return 'white';\n      return 'primary';\n    },\n    isMultiple: function isMultiple() {\n      return this.multiple === true || this.multiple === null && Array.isArray(this.internalValue);\n    },\n    isActive: function isActive() {\n      var _this = this;\n\n      var value = this.value;\n      var input = this.internalValue;\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) return false;\n        return input.some(function (item) {\n          return _this.valueComparator(item, value);\n        });\n      }\n\n      if (this.trueValue === undefined || this.falseValue === undefined) {\n        return value ? this.valueComparator(value, input) : Boolean(input);\n      }\n\n      return this.valueComparator(input, this.trueValue);\n    },\n    isDirty: function isDirty() {\n      return this.isActive;\n    },\n    rippleState: function rippleState() {\n      return !this.disabled && !this.validationState ? undefined : this.validationState;\n    }\n  },\n  watch: {\n    inputValue: function inputValue(val) {\n      this.lazyValue = val;\n      this.hasColor = val;\n    }\n  },\n  methods: {\n    genLabel: function genLabel() {\n      var _this2 = this;\n\n      var label = VInput.options.methods.genLabel.call(this);\n      if (!label) return label;\n      label.data.on = {\n        click: function click(e) {\n          // Prevent label from\n          // causing the input\n          // to focus\n          e.preventDefault();\n\n          _this2.onChange();\n        }\n      };\n      return label;\n    },\n    genInput: function genInput(type, attrs) {\n      return this.$createElement('input', {\n        attrs: Object.assign({\n          'aria-checked': this.isActive.toString(),\n          disabled: this.isDisabled,\n          id: this.computedId,\n          role: type,\n          type: type\n        }, attrs),\n        domProps: {\n          value: this.value,\n          checked: this.isActive\n        },\n        on: {\n          blur: this.onBlur,\n          change: this.onChange,\n          focus: this.onFocus,\n          keydown: this.onKeydown\n        },\n        ref: 'input'\n      });\n    },\n    onBlur: function onBlur() {\n      this.isFocused = false;\n    },\n    onChange: function onChange() {\n      var _this3 = this;\n\n      if (this.isDisabled) return;\n      var value = this.value;\n      var input = this.internalValue;\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) {\n          input = [];\n        }\n\n        var length = input.length;\n        input = input.filter(function (item) {\n          return !_this3.valueComparator(item, value);\n        });\n\n        if (input.length === length) {\n          input.push(value);\n        }\n      } else if (this.trueValue !== undefined && this.falseValue !== undefined) {\n        input = this.valueComparator(input, this.trueValue) ? this.falseValue : this.trueValue;\n      } else if (value) {\n        input = this.valueComparator(input, value) ? null : value;\n      } else {\n        input = !input;\n      }\n\n      this.validate(true, input);\n      this.internalValue = input;\n      this.hasColor = input;\n    },\n    onFocus: function onFocus() {\n      this.isFocused = true;\n    },\n\n    /** @abstract */\n    onKeydown: function onKeydown(e) {}\n  }\n});",{"version":3,"sources":["/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/mixins/selectable/index.js"],"names":["VInput","Rippleable","Comparable","mixins","extend","name","model","prop","event","props","id","String","inputValue","falseValue","trueValue","multiple","type","Boolean","default","label","data","hasColor","lazyValue","computed","computedColor","isActive","undefined","color","isDark","appIsDark","isMultiple","Array","isArray","internalValue","value","input","some","item","valueComparator","isDirty","rippleState","disabled","validationState","watch","val","methods","genLabel","options","call","on","click","e","preventDefault","onChange","genInput","attrs","$createElement","Object","assign","toString","isDisabled","computedId","role","domProps","checked","blur","onBlur","change","focus","onFocus","keydown","onKeydown","ref","isFocused","length","filter","push","validate"],"mappings":";AAAA;AACA,OAAOA,MAAP,gC,CAA8C;;AAE9C,OAAOC,UAAP;AACA,OAAOC,UAAP,sB,CAAwC;;AAExC,OAAOC,MAAP;AACA;;AAEA,eAAeA,MAAM,CAACH,MAAD,EAASC,UAAT,EAAqBC,UAArB,CAAN,CAAuCE,MAAvC,CAA8C;AAC3DC,EAAAA,IAAI,EAAE,YADqD;AAE3DC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE,YADD;AAELC,IAAAA,KAAK,EAAE;AAFF,GAFoD;AAM3DC,EAAAA,KAAK,EAAE;AACLC,IAAAA,EAAE,EAAEC,MADC;AAELC,IAAAA,UAAU,EAAE,IAFP;AAGLC,IAAAA,UAAU,EAAE,IAHP;AAILC,IAAAA,SAAS,EAAE,IAJN;AAKLC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,IAAI,EAAEC,OADE;AAERC,MAAAA,OAAO,EAAE;AAFD,KALL;AASLC,IAAAA,KAAK,EAAER;AATF,GANoD;AAkB3DS,EAAAA,IAlB2D,kBAkBpD;AACL,WAAO;AACLC,MAAAA,QAAQ,EAAE,KAAKT,UADV;AAELU,MAAAA,SAAS,EAAE,KAAKV;AAFX,KAAP;AAID,GAvB0D;AAyB3DW,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aADQ,2BACQ;AACd,UAAI,CAAC,KAAKC,QAAV,EAAoB,OAAOC,SAAP;AACpB,UAAI,KAAKC,KAAT,EAAgB,OAAO,KAAKA,KAAZ;AAChB,UAAI,KAAKC,MAAL,IAAe,CAAC,KAAKC,SAAzB,EAAoC,OAAO,OAAP;AACpC,aAAO,SAAP;AACD,KANO;AAQRC,IAAAA,UARQ,wBAQK;AACX,aAAO,KAAKf,QAAL,KAAkB,IAAlB,IAA0B,KAAKA,QAAL,KAAkB,IAAlB,IAA0BgB,KAAK,CAACC,OAAN,CAAc,KAAKC,aAAnB,CAA3D;AACD,KAVO;AAYRR,IAAAA,QAZQ,sBAYG;AAAA;;AACT,UAAMS,KAAK,GAAG,KAAKA,KAAnB;AACA,UAAMC,KAAK,GAAG,KAAKF,aAAnB;;AAEA,UAAI,KAAKH,UAAT,EAAqB;AACnB,YAAI,CAACC,KAAK,CAACC,OAAN,CAAcG,KAAd,CAAL,EAA2B,OAAO,KAAP;AAC3B,eAAOA,KAAK,CAACC,IAAN,CAAW,UAAAC,IAAI;AAAA,iBAAI,KAAI,CAACC,eAAL,CAAqBD,IAArB,EAA2BH,KAA3B,CAAJ;AAAA,SAAf,CAAP;AACD;;AAED,UAAI,KAAKpB,SAAL,KAAmBY,SAAnB,IAAgC,KAAKb,UAAL,KAAoBa,SAAxD,EAAmE;AACjE,eAAOQ,KAAK,GAAG,KAAKI,eAAL,CAAqBJ,KAArB,EAA4BC,KAA5B,CAAH,GAAwClB,OAAO,CAACkB,KAAD,CAA3D;AACD;;AAED,aAAO,KAAKG,eAAL,CAAqBH,KAArB,EAA4B,KAAKrB,SAAjC,CAAP;AACD,KA1BO;AA4BRyB,IAAAA,OA5BQ,qBA4BE;AACR,aAAO,KAAKd,QAAZ;AACD,KA9BO;AAgCRe,IAAAA,WAhCQ,yBAgCM;AACZ,aAAO,CAAC,KAAKC,QAAN,IAAkB,CAAC,KAAKC,eAAxB,GAA0ChB,SAA1C,GAAsD,KAAKgB,eAAlE;AACD;AAlCO,GAzBiD;AA8D3DC,EAAAA,KAAK,EAAE;AACL/B,IAAAA,UADK,sBACMgC,GADN,EACW;AACd,WAAKtB,SAAL,GAAiBsB,GAAjB;AACA,WAAKvB,QAAL,GAAgBuB,GAAhB;AACD;AAJI,GA9DoD;AAqE3DC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QADO,sBACI;AAAA;;AACT,UAAM3B,KAAK,GAAGnB,MAAM,CAAC+C,OAAP,CAAeF,OAAf,CAAuBC,QAAvB,CAAgCE,IAAhC,CAAqC,IAArC,CAAd;AACA,UAAI,CAAC7B,KAAL,EAAY,OAAOA,KAAP;AACZA,MAAAA,KAAK,CAACC,IAAN,CAAW6B,EAAX,GAAgB;AACdC,QAAAA,KAAK,EAAE,eAAAC,CAAC,EAAI;AACV;AACA;AACA;AACAA,UAAAA,CAAC,CAACC,cAAF;;AACA,UAAA,MAAI,CAACC,QAAL;AACD;AAPa,OAAhB;AASA,aAAOlC,KAAP;AACD,KAdM;AAgBPmC,IAAAA,QAhBO,oBAgBEtC,IAhBF,EAgBQuC,KAhBR,EAgBe;AACpB,aAAO,KAAKC,cAAL,CAAoB,OAApB,EAA6B;AAClCD,QAAAA,KAAK,EAAEE,MAAM,CAACC,MAAP,CAAc;AACnB,0BAAgB,KAAKjC,QAAL,CAAckC,QAAd,EADG;AAEnBlB,UAAAA,QAAQ,EAAE,KAAKmB,UAFI;AAGnBlD,UAAAA,EAAE,EAAE,KAAKmD,UAHU;AAInBC,UAAAA,IAAI,EAAE9C,IAJa;AAKnBA,UAAAA,IAAI,EAAJA;AALmB,SAAd,EAMJuC,KANI,CAD2B;AAQlCQ,QAAAA,QAAQ,EAAE;AACR7B,UAAAA,KAAK,EAAE,KAAKA,KADJ;AAER8B,UAAAA,OAAO,EAAE,KAAKvC;AAFN,SARwB;AAYlCwB,QAAAA,EAAE,EAAE;AACFgB,UAAAA,IAAI,EAAE,KAAKC,MADT;AAEFC,UAAAA,MAAM,EAAE,KAAKd,QAFX;AAGFe,UAAAA,KAAK,EAAE,KAAKC,OAHV;AAIFC,UAAAA,OAAO,EAAE,KAAKC;AAJZ,SAZ8B;AAkBlCC,QAAAA,GAAG,EAAE;AAlB6B,OAA7B,CAAP;AAoBD,KArCM;AAuCPN,IAAAA,MAvCO,oBAuCE;AACP,WAAKO,SAAL,GAAiB,KAAjB;AACD,KAzCM;AA2CPpB,IAAAA,QA3CO,sBA2CI;AAAA;;AACT,UAAI,KAAKO,UAAT,EAAqB;AACrB,UAAM1B,KAAK,GAAG,KAAKA,KAAnB;AACA,UAAIC,KAAK,GAAG,KAAKF,aAAjB;;AAEA,UAAI,KAAKH,UAAT,EAAqB;AACnB,YAAI,CAACC,KAAK,CAACC,OAAN,CAAcG,KAAd,CAAL,EAA2B;AACzBA,UAAAA,KAAK,GAAG,EAAR;AACD;;AAED,YAAMuC,MAAM,GAAGvC,KAAK,CAACuC,MAArB;AACAvC,QAAAA,KAAK,GAAGA,KAAK,CAACwC,MAAN,CAAa,UAAAtC,IAAI;AAAA,iBAAI,CAAC,MAAI,CAACC,eAAL,CAAqBD,IAArB,EAA2BH,KAA3B,CAAL;AAAA,SAAjB,CAAR;;AAEA,YAAIC,KAAK,CAACuC,MAAN,KAAiBA,MAArB,EAA6B;AAC3BvC,UAAAA,KAAK,CAACyC,IAAN,CAAW1C,KAAX;AACD;AACF,OAXD,MAWO,IAAI,KAAKpB,SAAL,KAAmBY,SAAnB,IAAgC,KAAKb,UAAL,KAAoBa,SAAxD,EAAmE;AACxES,QAAAA,KAAK,GAAG,KAAKG,eAAL,CAAqBH,KAArB,EAA4B,KAAKrB,SAAjC,IAA8C,KAAKD,UAAnD,GAAgE,KAAKC,SAA7E;AACD,OAFM,MAEA,IAAIoB,KAAJ,EAAW;AAChBC,QAAAA,KAAK,GAAG,KAAKG,eAAL,CAAqBH,KAArB,EAA4BD,KAA5B,IAAqC,IAArC,GAA4CA,KAApD;AACD,OAFM,MAEA;AACLC,QAAAA,KAAK,GAAG,CAACA,KAAT;AACD;;AAED,WAAK0C,QAAL,CAAc,IAAd,EAAoB1C,KAApB;AACA,WAAKF,aAAL,GAAqBE,KAArB;AACA,WAAKd,QAAL,GAAgBc,KAAhB;AACD,KAtEM;AAwEPkC,IAAAA,OAxEO,qBAwEG;AACR,WAAKI,SAAL,GAAiB,IAAjB;AACD,KA1EM;;AA4EP;AACAF,IAAAA,SA7EO,qBA6EGpB,CA7EH,EA6EM,CAAE;AA7ER;AArEkD,CAA9C,CAAf","sourcesContent":["// Components\nimport VInput from '../../components/VInput'; // Mixins\n\nimport Rippleable from '../rippleable';\nimport Comparable from '../comparable'; // Utilities\n\nimport mixins from '../../util/mixins';\n/* @vue/component */\n\nexport default mixins(VInput, Rippleable, Comparable).extend({\n  name: 'selectable',\n  model: {\n    prop: 'inputValue',\n    event: 'change'\n  },\n  props: {\n    id: String,\n    inputValue: null,\n    falseValue: null,\n    trueValue: null,\n    multiple: {\n      type: Boolean,\n      default: null\n    },\n    label: String\n  },\n\n  data() {\n    return {\n      hasColor: this.inputValue,\n      lazyValue: this.inputValue\n    };\n  },\n\n  computed: {\n    computedColor() {\n      if (!this.isActive) return undefined;\n      if (this.color) return this.color;\n      if (this.isDark && !this.appIsDark) return 'white';\n      return 'primary';\n    },\n\n    isMultiple() {\n      return this.multiple === true || this.multiple === null && Array.isArray(this.internalValue);\n    },\n\n    isActive() {\n      const value = this.value;\n      const input = this.internalValue;\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) return false;\n        return input.some(item => this.valueComparator(item, value));\n      }\n\n      if (this.trueValue === undefined || this.falseValue === undefined) {\n        return value ? this.valueComparator(value, input) : Boolean(input);\n      }\n\n      return this.valueComparator(input, this.trueValue);\n    },\n\n    isDirty() {\n      return this.isActive;\n    },\n\n    rippleState() {\n      return !this.disabled && !this.validationState ? undefined : this.validationState;\n    }\n\n  },\n  watch: {\n    inputValue(val) {\n      this.lazyValue = val;\n      this.hasColor = val;\n    }\n\n  },\n  methods: {\n    genLabel() {\n      const label = VInput.options.methods.genLabel.call(this);\n      if (!label) return label;\n      label.data.on = {\n        click: e => {\n          // Prevent label from\n          // causing the input\n          // to focus\n          e.preventDefault();\n          this.onChange();\n        }\n      };\n      return label;\n    },\n\n    genInput(type, attrs) {\n      return this.$createElement('input', {\n        attrs: Object.assign({\n          'aria-checked': this.isActive.toString(),\n          disabled: this.isDisabled,\n          id: this.computedId,\n          role: type,\n          type\n        }, attrs),\n        domProps: {\n          value: this.value,\n          checked: this.isActive\n        },\n        on: {\n          blur: this.onBlur,\n          change: this.onChange,\n          focus: this.onFocus,\n          keydown: this.onKeydown\n        },\n        ref: 'input'\n      });\n    },\n\n    onBlur() {\n      this.isFocused = false;\n    },\n\n    onChange() {\n      if (this.isDisabled) return;\n      const value = this.value;\n      let input = this.internalValue;\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) {\n          input = [];\n        }\n\n        const length = input.length;\n        input = input.filter(item => !this.valueComparator(item, value));\n\n        if (input.length === length) {\n          input.push(value);\n        }\n      } else if (this.trueValue !== undefined && this.falseValue !== undefined) {\n        input = this.valueComparator(input, this.trueValue) ? this.falseValue : this.trueValue;\n      } else if (value) {\n        input = this.valueComparator(input, value) ? null : value;\n      } else {\n        input = !input;\n      }\n\n      this.validate(true, input);\n      this.internalValue = input;\n      this.hasColor = input;\n    },\n\n    onFocus() {\n      this.isFocused = true;\n    },\n\n    /** @abstract */\n    onKeydown(e) {}\n\n  }\n});\n//# sourceMappingURL=index.js.map"]}]}