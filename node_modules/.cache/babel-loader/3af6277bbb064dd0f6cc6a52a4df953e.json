{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VCalendar/mixins/mouse.js","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VCalendar/mixins/mouse.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport Vue from 'vue';\nexport default Vue.extend({\n  name: 'mouse',\n  methods: {\n    getDefaultMouseEventHandlers: function getDefaultMouseEventHandlers(suffix, getEvent) {\n      var _this$getMouseEventHa;\n\n      return this.getMouseEventHandlers((_this$getMouseEventHa = {}, _defineProperty(_this$getMouseEventHa, 'click' + suffix, {\n        event: 'click'\n      }), _defineProperty(_this$getMouseEventHa, 'contextmenu' + suffix, {\n        event: 'contextmenu',\n        prevent: true,\n        result: false\n      }), _defineProperty(_this$getMouseEventHa, 'mousedown' + suffix, {\n        event: 'mousedown'\n      }), _defineProperty(_this$getMouseEventHa, 'mousemove' + suffix, {\n        event: 'mousemove'\n      }), _defineProperty(_this$getMouseEventHa, 'mouseup' + suffix, {\n        event: 'mouseup'\n      }), _defineProperty(_this$getMouseEventHa, 'mouseenter' + suffix, {\n        event: 'mouseenter'\n      }), _defineProperty(_this$getMouseEventHa, 'mouseleave' + suffix, {\n        event: 'mouseleave'\n      }), _defineProperty(_this$getMouseEventHa, 'touchstart' + suffix, {\n        event: 'touchstart'\n      }), _defineProperty(_this$getMouseEventHa, 'touchmove' + suffix, {\n        event: 'touchmove'\n      }), _defineProperty(_this$getMouseEventHa, 'touchend' + suffix, {\n        event: 'touchend'\n      }), _this$getMouseEventHa), getEvent);\n    },\n    getMouseEventHandlers: function getMouseEventHandlers(events, getEvent) {\n      var _this = this;\n\n      var on = {};\n\n      var _loop = function _loop(event) {\n        var eventOptions = events[event];\n        if (!_this.$listeners[event]) return \"continue\"; // TODO somehow pull in modifiers\n\n        var prefix = eventOptions.passive ? '&' : (eventOptions.once ? '~' : '') + (eventOptions.capture ? '!' : '');\n        var key = prefix + eventOptions.event;\n\n        var handler = function handler(e) {\n          var mouseEvent = e;\n\n          if (eventOptions.button === undefined || mouseEvent.buttons > 0 && mouseEvent.button === eventOptions.button) {\n            if (eventOptions.prevent) {\n              e.preventDefault();\n            }\n\n            if (eventOptions.stop) {\n              e.stopPropagation();\n            }\n\n            _this.$emit(event, getEvent(e));\n          }\n\n          return eventOptions.result;\n        };\n\n        if (key in on) {\n          /* istanbul ignore next */\n          if (Array.isArray(on[key])) {\n            on[key].push(handler);\n          } else {\n            on[key] = [on[key], handler];\n          }\n        } else {\n          on[key] = handler;\n        }\n      };\n\n      for (var event in events) {\n        var _ret = _loop(event);\n\n        if (_ret === \"continue\") continue;\n      }\n\n      return on;\n    }\n  }\n});",{"version":3,"sources":["/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VCalendar/mixins/mouse.js"],"names":["Vue","extend","name","methods","getDefaultMouseEventHandlers","suffix","getEvent","getMouseEventHandlers","event","prevent","result","events","on","eventOptions","$listeners","prefix","passive","once","capture","key","handler","e","mouseEvent","button","undefined","buttons","preventDefault","stop","stopPropagation","$emit","Array","isArray","push"],"mappings":"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","sourcesContent":["import Vue from 'vue';\nexport default Vue.extend({\n  name: 'mouse',\n  methods: {\n    getDefaultMouseEventHandlers(suffix, getEvent) {\n      return this.getMouseEventHandlers({\n        ['click' + suffix]: {\n          event: 'click'\n        },\n        ['contextmenu' + suffix]: {\n          event: 'contextmenu',\n          prevent: true,\n          result: false\n        },\n        ['mousedown' + suffix]: {\n          event: 'mousedown'\n        },\n        ['mousemove' + suffix]: {\n          event: 'mousemove'\n        },\n        ['mouseup' + suffix]: {\n          event: 'mouseup'\n        },\n        ['mouseenter' + suffix]: {\n          event: 'mouseenter'\n        },\n        ['mouseleave' + suffix]: {\n          event: 'mouseleave'\n        },\n        ['touchstart' + suffix]: {\n          event: 'touchstart'\n        },\n        ['touchmove' + suffix]: {\n          event: 'touchmove'\n        },\n        ['touchend' + suffix]: {\n          event: 'touchend'\n        }\n      }, getEvent);\n    },\n\n    getMouseEventHandlers(events, getEvent) {\n      const on = {};\n\n      for (const event in events) {\n        const eventOptions = events[event];\n        if (!this.$listeners[event]) continue; // TODO somehow pull in modifiers\n\n        const prefix = eventOptions.passive ? '&' : (eventOptions.once ? '~' : '') + (eventOptions.capture ? '!' : '');\n        const key = prefix + eventOptions.event;\n\n        const handler = e => {\n          const mouseEvent = e;\n\n          if (eventOptions.button === undefined || mouseEvent.buttons > 0 && mouseEvent.button === eventOptions.button) {\n            if (eventOptions.prevent) {\n              e.preventDefault();\n            }\n\n            if (eventOptions.stop) {\n              e.stopPropagation();\n            }\n\n            this.$emit(event, getEvent(e));\n          }\n\n          return eventOptions.result;\n        };\n\n        if (key in on) {\n          /* istanbul ignore next */\n          if (Array.isArray(on[key])) {\n            on[key].push(handler);\n          } else {\n            on[key] = [on[key], handler];\n          }\n        } else {\n          on[key] = handler;\n        }\n      }\n\n      return on;\n    }\n\n  }\n});\n//# sourceMappingURL=mouse.js.map"]}]}