{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VCalendar/util/events.js","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VCalendar/util/events.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { parseTimestamp, getDayIdentifier, getTimestampIdentifier, OFFSET_TIME } from \"./timestamp\";\nexport function parseEvent(input, index, startProperty, endProperty) {\n  var start = parseTimestamp(input[startProperty], true);\n  var end = input[endProperty] ? parseTimestamp(input[endProperty], true) : start;\n  var startIdentifier = getDayIdentifier(start);\n  var startTimestampIdentifier = getTimestampIdentifier(start);\n  var endIdentifier = getDayIdentifier(end);\n  var endOffset = start.hasTime ? 0 : 2359;\n  var endTimestampIdentifier = getTimestampIdentifier(end) + endOffset;\n  var allDay = !start.hasTime;\n  return {\n    input: input,\n    start: start,\n    startIdentifier: startIdentifier,\n    startTimestampIdentifier: startTimestampIdentifier,\n    end: end,\n    endIdentifier: endIdentifier,\n    endTimestampIdentifier: endTimestampIdentifier,\n    allDay: allDay,\n    index: index\n  };\n}\nexport function isEventOn(event, dayIdentifier) {\n  return dayIdentifier >= event.startIdentifier && dayIdentifier <= event.endIdentifier && dayIdentifier * OFFSET_TIME !== event.endTimestampIdentifier;\n}\nexport function isEventStart(event, day, dayIdentifier, firstWeekday) {\n  return dayIdentifier === event.startIdentifier || firstWeekday === day.weekday && isEventOn(event, dayIdentifier);\n}\nexport function isEventOverlapping(event, startIdentifier, endIdentifier) {\n  return startIdentifier <= event.endIdentifier && endIdentifier >= event.startIdentifier;\n}",{"version":3,"sources":["/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VCalendar/util/events.js"],"names":["parseTimestamp","getDayIdentifier","getTimestampIdentifier","OFFSET_TIME","parseEvent","input","index","startProperty","endProperty","start","end","startIdentifier","startTimestampIdentifier","endIdentifier","endOffset","hasTime","endTimestampIdentifier","allDay","isEventOn","event","dayIdentifier","isEventStart","day","firstWeekday","weekday","isEventOverlapping"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,gBAAzB,EAA2CC,sBAA3C,EAAmEC,WAAnE;AACA,OAAO,SAASC,UAAT,CAAoBC,KAApB,EAA2BC,KAA3B,EAAkCC,aAAlC,EAAiDC,WAAjD,EAA8D;AACnE,MAAMC,KAAK,GAAGT,cAAc,CAACK,KAAK,CAACE,aAAD,CAAN,EAAuB,IAAvB,CAA5B;AACA,MAAMG,GAAG,GAAGL,KAAK,CAACG,WAAD,CAAL,GAAqBR,cAAc,CAACK,KAAK,CAACG,WAAD,CAAN,EAAqB,IAArB,CAAnC,GAAgEC,KAA5E;AACA,MAAME,eAAe,GAAGV,gBAAgB,CAACQ,KAAD,CAAxC;AACA,MAAMG,wBAAwB,GAAGV,sBAAsB,CAACO,KAAD,CAAvD;AACA,MAAMI,aAAa,GAAGZ,gBAAgB,CAACS,GAAD,CAAtC;AACA,MAAMI,SAAS,GAAGL,KAAK,CAACM,OAAN,GAAgB,CAAhB,GAAoB,IAAtC;AACA,MAAMC,sBAAsB,GAAGd,sBAAsB,CAACQ,GAAD,CAAtB,GAA8BI,SAA7D;AACA,MAAMG,MAAM,GAAG,CAACR,KAAK,CAACM,OAAtB;AACA,SAAO;AACLV,IAAAA,KAAK,EAALA,KADK;AAELI,IAAAA,KAAK,EAALA,KAFK;AAGLE,IAAAA,eAAe,EAAfA,eAHK;AAILC,IAAAA,wBAAwB,EAAxBA,wBAJK;AAKLF,IAAAA,GAAG,EAAHA,GALK;AAMLG,IAAAA,aAAa,EAAbA,aANK;AAOLG,IAAAA,sBAAsB,EAAtBA,sBAPK;AAQLC,IAAAA,MAAM,EAANA,MARK;AASLX,IAAAA,KAAK,EAALA;AATK,GAAP;AAWD;AACD,OAAO,SAASY,SAAT,CAAmBC,KAAnB,EAA0BC,aAA1B,EAAyC;AAC9C,SAAOA,aAAa,IAAID,KAAK,CAACR,eAAvB,IAA0CS,aAAa,IAAID,KAAK,CAACN,aAAjE,IAAkFO,aAAa,GAAGjB,WAAhB,KAAgCgB,KAAK,CAACH,sBAA/H;AACD;AACD,OAAO,SAASK,YAAT,CAAsBF,KAAtB,EAA6BG,GAA7B,EAAkCF,aAAlC,EAAiDG,YAAjD,EAA+D;AACpE,SAAOH,aAAa,KAAKD,KAAK,CAACR,eAAxB,IAA2CY,YAAY,KAAKD,GAAG,CAACE,OAArB,IAAgCN,SAAS,CAACC,KAAD,EAAQC,aAAR,CAA3F;AACD;AACD,OAAO,SAASK,kBAAT,CAA4BN,KAA5B,EAAmCR,eAAnC,EAAoDE,aAApD,EAAmE;AACxE,SAAOF,eAAe,IAAIQ,KAAK,CAACN,aAAzB,IAA0CA,aAAa,IAAIM,KAAK,CAACR,eAAxE;AACD","sourcesContent":["import { parseTimestamp, getDayIdentifier, getTimestampIdentifier, OFFSET_TIME } from './timestamp';\nexport function parseEvent(input, index, startProperty, endProperty) {\n  const start = parseTimestamp(input[startProperty], true);\n  const end = input[endProperty] ? parseTimestamp(input[endProperty], true) : start;\n  const startIdentifier = getDayIdentifier(start);\n  const startTimestampIdentifier = getTimestampIdentifier(start);\n  const endIdentifier = getDayIdentifier(end);\n  const endOffset = start.hasTime ? 0 : 2359;\n  const endTimestampIdentifier = getTimestampIdentifier(end) + endOffset;\n  const allDay = !start.hasTime;\n  return {\n    input,\n    start,\n    startIdentifier,\n    startTimestampIdentifier,\n    end,\n    endIdentifier,\n    endTimestampIdentifier,\n    allDay,\n    index\n  };\n}\nexport function isEventOn(event, dayIdentifier) {\n  return dayIdentifier >= event.startIdentifier && dayIdentifier <= event.endIdentifier && dayIdentifier * OFFSET_TIME !== event.endTimestampIdentifier;\n}\nexport function isEventStart(event, day, dayIdentifier, firstWeekday) {\n  return dayIdentifier === event.startIdentifier || firstWeekday === day.weekday && isEventOn(event, dayIdentifier);\n}\nexport function isEventOverlapping(event, startIdentifier, endIdentifier) {\n  return startIdentifier <= event.endIdentifier && endIdentifier >= event.startIdentifier;\n}\n//# sourceMappingURL=events.js.map"]}]}