{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/dayspan-vuetify-2/src/components/Calendar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/dayspan-vuetify-2/src/components/Calendar.vue","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Calendar, Schedule, CalendarEvent, Units, DaySpan, Day, Op, Functions as fn } from 'dayspan';\nexport default {\n  name: 'dsCalendar',\n  props: {\n    calendar: {\n      type: Calendar\n    },\n    handleAdd: {\n      type: Boolean,\n      default: function _default() {\n        return this.$dsDefaults().handleAdd;\n      }\n    },\n    handleMove: {\n      type: Boolean,\n      default: function _default() {\n        return this.$dsDefaults().handleMove;\n      }\n    },\n    readOnly: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data(vm) {\n    return {\n      placeholder: null,\n      placeholderForCreate: false,\n      addStart: null\n    };\n  },\n  watch: {\n    '$dayspan.today': 'refreshCurrent'\n  },\n  computed: {\n    type: function type() {\n      return this.calendar ? this.calendar.type : null;\n    },\n    size: function size() {\n      return this.calendar ? this.calendar.size : null;\n    },\n    isDay: function isDay() {\n      return this.type === Units.DAY;\n    },\n    isWeek: function isWeek() {\n      return this.type === Units.WEEK;\n    },\n    isMonth: function isMonth() {\n      return this.type === Units.MONTH;\n    },\n    isYear: function isYear() {\n      return this.type === Units.YEAR;\n    },\n    adding: function adding() {\n      return !!(this.addStart && this.placeholder);\n    },\n    canAdd: function canAdd() {\n      return this.$dayspan.features.drag && this.handleAdd && !this.readOnly && !this.$dayspan.readOnly;\n    },\n    canMove: function canMove() {\n      return this.$dayspan.features.move && this.handleMove && !this.readOnly && !this.$dayspan.readOnly;\n    }\n  },\n  methods: {\n    refreshCurrent: function refreshCurrent() {\n      this.calendar.refreshCurrent(this.$dayspan.today);\n    },\n    mouseDown: function mouseDown(mouseEvent) {\n      if (this.canAdd && mouseEvent.left) {\n        var time = mouseEvent.time;\n        var ev = this.getEvent('adding', {\n          mouseEvent: mouseEvent,\n          placeholder: this.$dayspan.getPlaceholderEventForAdd(time)\n        });\n        this.$emit('adding', ev);\n\n        if (!ev.handled && ev.placeholder) {\n          this.addStart = time;\n          this.placeholderForCreate = false;\n          this.placeholder = ev.placeholder;\n          this.placeholder.event.schedule = Schedule.forTime(time, time.asTime());\n          this.placeholder.fullDay = false;\n        }\n      }\n    },\n    mouseDownDay: function mouseDownDay(mouseEvent) {\n      if (this.canAdd && mouseEvent.left) {\n        var day = mouseEvent.day;\n        var ev = this.getEvent('adding', {\n          mouseEvent: mouseEvent,\n          placeholder: this.$dayspan.getPlaceholderEventForAdd(day)\n        });\n        this.$emit('adding', ev);\n\n        if (!ev.handled && ev.placeholder) {\n          this.addStart = day;\n          this.placeholderForCreate = false;\n          this.placeholder = ev.placeholder;\n          this.placeholder.event.schedule = Schedule.forDay(day);\n          this.placeholder.fullDay = true;\n        }\n      }\n    },\n    mouseUp: function mouseUp(mouseEvent) {\n      if (this.addEnd) {\n        this.finishAdd(mouseEvent);\n      }\n\n      if (this.moving) {\n        this.finishMove(mouseEvent);\n      }\n\n      this.readyToMove = false;\n    },\n    finishAdd: function finishAdd(mouseEvent) {\n      var ev = this.getEvent('added', {\n        mouseEvent: mouseEvent,\n        placeholder: this.placeholder,\n        span: this.placeholder.time\n      });\n      this.$emit('added', ev);\n\n      if (!ev.handled) {\n        ev.clearPlaceholder();\n      }\n\n      this.endAdd();\n    },\n    finishMove: function finishMove(mouseEvent) {\n      var target = this.placeholder.time;\n      var source = this.movingEvent.calendarEvent.time;\n      var sameTime = target.start.sameMinute(source.start);\n      var sameDay = target.start.sameDay(source.start);\n      var isDay = mouseEvent.type === 'mouse-up-day';\n\n      if (isDay && !sameDay || !isDay && !sameTime) {\n        var ev = this.getEvent('moved', {\n          mouseEvent: mouseEvent,\n          movingEvent: this.movingEvent,\n          calendarEvent: this.movingEvent.calendarEvent,\n          target: this.placeholder.time\n        });\n        this.$emit('moved', ev);\n\n        if (!ev.handled) {\n          ev.clearPlaceholder();\n        }\n      } else {\n        this.clearPlaceholder();\n      }\n\n      this.endMove();\n    },\n    mouseMoveDay: function mouseMoveDay(mouseEvent) {\n      if (this.adding && mouseEvent.left) {\n        this.addEnd = mouseEvent.day;\n        var min = this.addStart.min(this.addEnd);\n        var max = this.addStart.max(this.addEnd);\n        this.placeholder.day = min.start();\n        this.placeholder.time.start = min;\n        this.placeholder.time.end = max.end();\n        this.placeholder.event.schedule = Schedule.forDay(this.placeholder.start, this.placeholder.time.days(Op.UP));\n        this.updatePlaceholderRow(this.placeholder);\n      }\n\n      this.mouseMoveCheckReady();\n\n      if (this.moving) {\n        var day = mouseEvent.day;\n        this.placeholder.day = day;\n        this.placeholder.time.start = day;\n        this.placeholder.time.end = day.next(this.placeholder.schedule.durationInDays).end();\n        this.updatePlaceholderRow(this.placeholder);\n      }\n\n      this.mouseMoveCheckEnd(mouseEvent);\n    },\n    mouseMove: function mouseMove(mouseEvent) {\n      if (this.adding && mouseEvent.left) {\n        this.addEnd = mouseEvent.timeDrag;\n        var min = this.addStart.min(this.addEnd);\n        var max = this.addStart.max(this.addEnd);\n        this.placeholder.day = min.start();\n        this.placeholder.time.start = min;\n        this.placeholder.time.end = max;\n        this.placeholder.event.schedule = Schedule.forSpan(this.placeholder.time);\n      }\n\n      this.mouseMoveCheckReady();\n\n      if (this.moving) {\n        var time = mouseEvent.time;\n        time = time.relative(-this.movingEvent.offset);\n        time = this.$dayspan.roundTime(time, this.$dayspan.rounding.drag);\n        this.placeholder.day = time.start();\n        this.placeholder.time.start = time;\n        this.placeholder.time.end = time.relative(this.movingDuration);\n      }\n\n      this.mouseMoveCheckEnd(mouseEvent);\n    },\n    mouseMoveCheckEnd: function mouseMoveCheckEnd(mouseEvent) {\n      if (this.moving && !mouseEvent.left && !this.placeholderForCreate) {\n        this.endMove();\n        this.clearPlaceholder();\n      }\n\n      if (this.adding && !mouseEvent.left && !this.placeholderForCreate) {\n        this.endAdd();\n        this.clearPlaceholder();\n      }\n    },\n    mouseDownEvent: function mouseDownEvent(mouseEvent) {\n      if (this.canMove && mouseEvent.left) {\n        this.readyToMove = true;\n        this.movingEvent = mouseEvent;\n      }\n    },\n    mouseMoveCheckReady: function mouseMoveCheckReady() {\n      if (this.readyToMove) {\n        var moveEvent = this.movingEvent;\n        var calendarEvent = moveEvent.calendarEvent;\n        var ev = this.getEvent('moving', {\n          calendarEvent: calendarEvent,\n          moveEvent: moveEvent,\n          placeholder: this.$dayspan.getPlaceholderEventForMove(calendarEvent)\n        });\n        this.$emit('moving', ev);\n\n        if (!ev.handled && ev.placeholder) {\n          this.moving = true;\n          this.movingDuration = calendarEvent.time.millis();\n          this.placeholderForCreate = false;\n          this.placeholder = ev.placeholder;\n        }\n\n        this.readyToMove = false;\n      }\n    },\n    endMove: function endMove() {\n      this.moving = false;\n      this.movingEvent = null;\n    },\n    endAdd: function endAdd() {\n      this.addStart = null;\n      this.addEnd = null;\n    },\n    updatePlaceholderRow: function updatePlaceholderRow(placeholder) {\n      var row = 0;\n      this.calendar.iterateDays().iterate(function (day) {\n        if (placeholder.time.matchesDay(day)) {\n          row = day.iterateEvents().reduce(row, function (calendarEvent, maxRow) {\n            return Math.max(calendarEvent.row + 1, maxRow);\n          }, function (calendarEvent) {\n            return calendarEvent.event !== placeholder.event;\n          });\n        }\n      });\n      placeholder.row = row;\n    },\n    addPlaceholder: function addPlaceholder(day, fullDay, forUpdate) {\n      var placeholder = this.$dayspan.getPlaceholderEventForAdd(day);\n      var time = placeholder.time;\n\n      if (fullDay) {\n        time.end = time.end.end();\n        placeholder.event.schedule = Schedule.forDay(time.start);\n        placeholder.fullDay = true;\n      } else {\n        time.end = time.end.nextHour();\n        placeholder.event.schedule = Schedule.forSpan(time);\n        placeholder.fullDay = false;\n      }\n\n      this.updatePlaceholderRow(placeholder);\n      this.placeholder = placeholder;\n      this.placeholderForCreate = !forUpdate;\n    },\n    clearPlaceholder: function clearPlaceholder() {\n      this.placeholder = null;\n      this.placeholderForCreate = false;\n    },\n    getEvent: function getEvent(type) {\n      var extra = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return fn.extend({\n        type: type,\n        calendar: this.calendar,\n        clearPlaceholder: this.clearPlaceholder,\n        handled: false,\n        $vm: this,\n        $element: this.$el\n      }, extra);\n    }\n  }\n};",{"version":3,"sources":["Calendar.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"ds-calendar\">\r\n\r\n        <div v-if=\"isYear\" class=\"ds-month-view ds-year-view\">\r\n\r\n            <ds-weeks-view class=\"ds-expand\"\r\n                           v-bind=\"{$scopedSlots}\"\r\n                           v-on=\"$listeners\"\r\n                           :calendar=\"calendar\"\r\n                           :placeholder=\"placeholder\"\r\n                           :placeholder-for-create=\"placeholderForCreate\"\r\n                           @mouse-move-day=\"mouseMoveDay\"\r\n                           @mouse-down-day=\"mouseDownDay\"\r\n                           @mouse-up-day=\"mouseUp\"\r\n                           @mouse-up-event=\"mouseUp\"\r\n                           @mouse-down-event=\"mouseDownEvent\"\r\n                           @clear-placeholder=\"clearPlaceholder\"\r\n            ></ds-weeks-view>\r\n\r\n        </div>\r\n\r\n        <div v-if=\"isMonth\" class=\"ds-month-view\">\r\n\r\n            <ds-weeks-view class=\"ds-expand\"\r\n                           v-bind=\"{$scopedSlots}\"\r\n                           v-on=\"$listeners\"\r\n                           :calendar=\"calendar\"\r\n                           :placeholder=\"placeholder\"\r\n                           :placeholder-for-create=\"placeholderForCreate\"\r\n                           @mouse-move-day=\"mouseMoveDay\"\r\n                           @mouse-down-day=\"mouseDownDay\"\r\n                           @mouse-up-day=\"mouseUp\"\r\n                           @mouse-up-event=\"mouseUp\"\r\n                           @mouse-down-event=\"mouseDownEvent\"\r\n                           @clear-placeholder=\"clearPlaceholder\"\r\n            ></ds-weeks-view>\r\n\r\n        </div>\r\n\r\n        <div v-if=\"isWeek || isDay\" class=\"ds-week-view\">\r\n\r\n            <ds-days-view\r\n                    v-bind=\"{$scopedSlots}\"\r\n                    v-on=\"$listeners\"\r\n                    :calendar=\"calendar\"\r\n                    :placeholder=\"placeholder\"\r\n                    :placeholder-for-create=\"placeholderForCreate\"\r\n                    @mouse-move=\"mouseMove\"\r\n                    @mouse-down=\"mouseDown\"\r\n                    @mouse-up=\"mouseUp\"\r\n                    @mouse-down-event=\"mouseDownEvent\"\r\n                    @mouse-move-day=\"mouseMoveDay\"\r\n                    @mouse-down-day=\"mouseDownDay\"\r\n                    @mouse-up-day=\"mouseUp\"\r\n                    @mouse-up-event=\"mouseUp\"\r\n                    @clear-placeholder=\"clearPlaceholder\"\r\n            ></ds-days-view>\r\n\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { Calendar, Schedule, CalendarEvent, Units, DaySpan, Day, Op, Functions as fn } from 'dayspan'\r\n\r\nexport default {\r\n\r\n    name: 'dsCalendar',\r\n\r\n    props:\r\n        {\r\n            calendar:\r\n                {\r\n                    type: Calendar\r\n                },\r\n\r\n            handleAdd:\r\n                {\r\n                    type: Boolean,\r\n                    default () {\r\n                        return this.$dsDefaults().handleAdd\r\n                    }\r\n                },\r\n\r\n            handleMove:\r\n                {\r\n                    type: Boolean,\r\n                    default () {\r\n                        return this.$dsDefaults().handleMove\r\n                    }\r\n                },\r\n\r\n            readOnly:\r\n                {\r\n                    type: Boolean,\r\n                    default: false\r\n                }\r\n        },\r\n\r\n    data: vm => ({\r\n        placeholder: null,\r\n        placeholderForCreate: false,\r\n        addStart: null\r\n    }),\r\n\r\n    watch:\r\n        {\r\n            '$dayspan.today': 'refreshCurrent'\r\n        },\r\n\r\n    computed:\r\n        {\r\n            type () {\r\n                return this.calendar ? this.calendar.type : null\r\n            },\r\n\r\n            size () {\r\n                return this.calendar ? this.calendar.size : null\r\n            },\r\n\r\n            isDay () {\r\n                return this.type === Units.DAY\r\n            },\r\n\r\n            isWeek () {\r\n                return this.type === Units.WEEK\r\n            },\r\n\r\n            isMonth () {\r\n                return this.type === Units.MONTH\r\n            },\r\n\r\n            isYear () {\r\n                return this.type === Units.YEAR\r\n            },\r\n\r\n            adding () {\r\n                return !!(this.addStart && this.placeholder)\r\n            },\r\n\r\n            canAdd () {\r\n                return this.$dayspan.features.drag && this.handleAdd && !this.readOnly && !this.$dayspan.readOnly\r\n            },\r\n\r\n            canMove () {\r\n                return this.$dayspan.features.move && this.handleMove && !this.readOnly && !this.$dayspan.readOnly\r\n            }\r\n        },\r\n\r\n    methods:\r\n        {\r\n            refreshCurrent () {\r\n                this.calendar.refreshCurrent(this.$dayspan.today)\r\n            },\r\n\r\n            mouseDown (mouseEvent) {\r\n                if (this.canAdd && mouseEvent.left) {\r\n                    let time = mouseEvent.time\r\n                    let ev = this.getEvent('adding', {\r\n                        mouseEvent: mouseEvent,\r\n                        placeholder: this.$dayspan.getPlaceholderEventForAdd(time)\r\n                    })\r\n\r\n                    this.$emit('adding', ev)\r\n\r\n                    if (!ev.handled && ev.placeholder) {\r\n                        this.addStart = time\r\n                        this.placeholderForCreate = false\r\n                        this.placeholder = ev.placeholder\r\n                        this.placeholder.event.schedule = Schedule.forTime(time, time.asTime())\r\n                        this.placeholder.fullDay = false\r\n                    }\r\n                }\r\n            },\r\n\r\n            mouseDownDay (mouseEvent) {\r\n                if (this.canAdd && mouseEvent.left) {\r\n                    let day = mouseEvent.day\r\n                    let ev = this.getEvent('adding', {\r\n                        mouseEvent: mouseEvent,\r\n                        placeholder: this.$dayspan.getPlaceholderEventForAdd(day)\r\n                    })\r\n\r\n                    this.$emit('adding', ev)\r\n\r\n                    if (!ev.handled && ev.placeholder) {\r\n                        this.addStart = day\r\n                        this.placeholderForCreate = false\r\n                        this.placeholder = ev.placeholder\r\n                        this.placeholder.event.schedule = Schedule.forDay(day)\r\n                        this.placeholder.fullDay = true\r\n                    }\r\n                }\r\n            },\r\n\r\n            mouseUp (mouseEvent) {\r\n                if (this.addEnd) {\r\n                    this.finishAdd(mouseEvent)\r\n                }\r\n\r\n                if (this.moving) {\r\n                    this.finishMove(mouseEvent)\r\n                }\r\n\r\n                this.readyToMove = false\r\n            },\r\n\r\n            finishAdd (mouseEvent) {\r\n                var ev = this.getEvent('added', {\r\n                    mouseEvent: mouseEvent,\r\n                    placeholder: this.placeholder,\r\n                    span: this.placeholder.time\r\n                })\r\n\r\n                this.$emit('added', ev)\r\n\r\n                if (!ev.handled) {\r\n                    ev.clearPlaceholder()\r\n                }\r\n\r\n                this.endAdd()\r\n            },\r\n\r\n            finishMove (mouseEvent) {\r\n                let target = this.placeholder.time\r\n                let source = this.movingEvent.calendarEvent.time\r\n                let sameTime = target.start.sameMinute(source.start)\r\n                let sameDay = target.start.sameDay(source.start)\r\n                let isDay = mouseEvent.type === 'mouse-up-day'\r\n\r\n                if ((isDay && !sameDay) || (!isDay && !sameTime)) {\r\n                    var ev = this.getEvent('moved', {\r\n                        mouseEvent: mouseEvent,\r\n                        movingEvent: this.movingEvent,\r\n                        calendarEvent: this.movingEvent.calendarEvent,\r\n                        target: this.placeholder.time\r\n                    })\r\n\r\n                    this.$emit('moved', ev)\r\n\r\n                    if (!ev.handled) {\r\n                        ev.clearPlaceholder()\r\n                    }\r\n                } else {\r\n                    this.clearPlaceholder()\r\n                }\r\n\r\n                this.endMove()\r\n            },\r\n\r\n            mouseMoveDay (mouseEvent) {\r\n                if (this.adding && mouseEvent.left) {\r\n                    this.addEnd = mouseEvent.day\r\n\r\n                    var min = this.addStart.min(this.addEnd)\r\n                    var max = this.addStart.max(this.addEnd)\r\n\r\n                    this.placeholder.day = min.start()\r\n                    this.placeholder.time.start = min\r\n                    this.placeholder.time.end = max.end()\r\n                    this.placeholder.event.schedule = Schedule.forDay(\r\n                        this.placeholder.start,\r\n                        this.placeholder.time.days(Op.UP)\r\n                    )\r\n\r\n                    this.updatePlaceholderRow(this.placeholder)\r\n                }\r\n\r\n                this.mouseMoveCheckReady()\r\n\r\n                if (this.moving) {\r\n                    var day = mouseEvent.day\r\n\r\n                    this.placeholder.day = day\r\n                    this.placeholder.time.start = day\r\n                    this.placeholder.time.end = day.next(this.placeholder.schedule.durationInDays).end()\r\n\r\n                    this.updatePlaceholderRow(this.placeholder)\r\n                }\r\n\r\n                this.mouseMoveCheckEnd(mouseEvent)\r\n            },\r\n\r\n            mouseMove (mouseEvent) {\r\n                if (this.adding && mouseEvent.left) {\r\n                    this.addEnd = mouseEvent.timeDrag\r\n\r\n                    var min = this.addStart.min(this.addEnd)\r\n                    var max = this.addStart.max(this.addEnd)\r\n\r\n                    this.placeholder.day = min.start()\r\n                    this.placeholder.time.start = min\r\n                    this.placeholder.time.end = max\r\n                    this.placeholder.event.schedule = Schedule.forSpan(this.placeholder.time)\r\n                }\r\n\r\n                this.mouseMoveCheckReady()\r\n\r\n                if (this.moving) {\r\n                    var time = mouseEvent.time\r\n                    time = time.relative(-this.movingEvent.offset)\r\n                    time = this.$dayspan.roundTime(time, this.$dayspan.rounding.drag)\r\n\r\n                    this.placeholder.day = time.start()\r\n                    this.placeholder.time.start = time\r\n                    this.placeholder.time.end = time.relative(this.movingDuration)\r\n                }\r\n\r\n                this.mouseMoveCheckEnd(mouseEvent)\r\n            },\r\n\r\n            mouseMoveCheckEnd (mouseEvent) {\r\n                if (this.moving && !mouseEvent.left && !this.placeholderForCreate) {\r\n                    this.endMove()\r\n                    this.clearPlaceholder()\r\n                }\r\n\r\n                if (this.adding && !mouseEvent.left && !this.placeholderForCreate) {\r\n                    this.endAdd()\r\n                    this.clearPlaceholder()\r\n                }\r\n            },\r\n\r\n            mouseDownEvent (mouseEvent) {\r\n                if (this.canMove && mouseEvent.left) {\r\n                    this.readyToMove = true\r\n                    this.movingEvent = mouseEvent\r\n                }\r\n            },\r\n\r\n            mouseMoveCheckReady () {\r\n                if (this.readyToMove) {\r\n                    var moveEvent = this.movingEvent\r\n                    var calendarEvent = moveEvent.calendarEvent\r\n\r\n                    var ev = this.getEvent('moving', {\r\n                        calendarEvent: calendarEvent,\r\n                        moveEvent: moveEvent,\r\n                        placeholder: this.$dayspan.getPlaceholderEventForMove(calendarEvent)\r\n                    })\r\n\r\n                    this.$emit('moving', ev)\r\n\r\n                    if (!ev.handled && ev.placeholder) {\r\n                        this.moving = true\r\n                        this.movingDuration = calendarEvent.time.millis()\r\n                        this.placeholderForCreate = false\r\n                        this.placeholder = ev.placeholder\r\n                    }\r\n\r\n                    this.readyToMove = false\r\n                }\r\n            },\r\n\r\n            endMove () {\r\n                this.moving = false\r\n                this.movingEvent = null\r\n            },\r\n\r\n            endAdd () {\r\n                this.addStart = null\r\n                this.addEnd = null\r\n            },\r\n\r\n            updatePlaceholderRow (placeholder) {\r\n                let row = 0\r\n\r\n                this.calendar.iterateDays().iterate((day) => {\r\n                    if (placeholder.time.matchesDay(day)) {\r\n                        row = day.iterateEvents().reduce(\r\n                            row,\r\n                            (calendarEvent, maxRow) => Math.max(calendarEvent.row + 1, maxRow),\r\n                            (calendarEvent) => calendarEvent.event !== placeholder.event\r\n                        )\r\n                    }\r\n                })\r\n\r\n                placeholder.row = row\r\n            },\r\n\r\n            addPlaceholder (day, fullDay, forUpdate) {\r\n                let placeholder = this.$dayspan.getPlaceholderEventForAdd(day)\r\n                let time = placeholder.time\r\n\r\n                if (fullDay) {\r\n                    time.end = time.end.end()\r\n\r\n                    placeholder.event.schedule = Schedule.forDay(time.start)\r\n                    placeholder.fullDay = true\r\n                } else {\r\n                    time.end = time.end.nextHour()\r\n\r\n                    placeholder.event.schedule = Schedule.forSpan(time)\r\n                    placeholder.fullDay = false\r\n                }\r\n\r\n                this.updatePlaceholderRow(placeholder)\r\n\r\n                this.placeholder = placeholder\r\n                this.placeholderForCreate = !forUpdate\r\n            },\r\n\r\n            clearPlaceholder () {\r\n                this.placeholder = null\r\n                this.placeholderForCreate = false\r\n            },\r\n\r\n            getEvent (type, extra = {}) {\r\n                return fn.extend({\r\n\r\n                    type: type,\r\n                    calendar: this.calendar,\r\n                    clearPlaceholder: this.clearPlaceholder,\r\n                    handled: false,\r\n                    $vm: this,\r\n                    $element: this.$el\r\n\r\n                }, extra)\r\n            }\r\n        }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n\r\n    .ds-calendar {\r\n        width: 100%;\r\n        height: 100%;\r\n        position: relative;\r\n        padding: 0px !important;\r\n    }\r\n\r\n    .ds-month-view {\r\n        width: 100%;\r\n        height: 100%;\r\n\r\n        .ds-today {\r\n            background-color: rgba(0, 0, 0, 0.04);\r\n        }\r\n    }\r\n\r\n    .ds-week-view {\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        overflow-y: auto;\r\n        outline: none;\r\n        background-color: white;\r\n    }\r\n\r\n    .ds-year-view {\r\n\r\n        .ds-first-day {\r\n            font-weight: bold;\r\n        }\r\n\r\n        .ds-first-day-day {\r\n            background-color: rgba(0, 0, 0, 0.08);\r\n        }\r\n    }\r\n\r\n</style>\r\n"],"sourceRoot":"node_modules/dayspan-vuetify-2/src/components"}]}