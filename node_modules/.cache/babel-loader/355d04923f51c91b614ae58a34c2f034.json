{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VParallax/VParallax.js","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VParallax/VParallax.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n// Style\nimport \"../../../src/components/VParallax/VParallax.sass\"; // Mixins\n\nimport Translatable from \"../../mixins/translatable\";\nimport mixins from \"../../util/mixins\";\nvar baseMixins = mixins(Translatable);\n/* @vue/component */\n\nexport default baseMixins.extend().extend({\n  name: 'v-parallax',\n  props: {\n    alt: {\n      type: String,\n      default: ''\n    },\n    height: {\n      type: [String, Number],\n      default: 500\n    },\n    src: String\n  },\n  data: function data() {\n    return {\n      isBooted: false\n    };\n  },\n  computed: {\n    styles: function styles() {\n      return {\n        display: 'block',\n        opacity: this.isBooted ? 1 : 0,\n        transform: \"translate(-50%, \".concat(this.parallax, \"px)\")\n      };\n    }\n  },\n  mounted: function mounted() {\n    this.init();\n  },\n  methods: {\n    init: function init() {\n      var _this = this;\n\n      var img = this.$refs.img;\n      if (!img) return;\n\n      if (img.complete) {\n        this.translate();\n        this.listeners();\n      } else {\n        img.addEventListener('load', function () {\n          _this.translate();\n\n          _this.listeners();\n        }, false);\n      }\n\n      this.isBooted = true;\n    },\n    objHeight: function objHeight() {\n      return this.$refs.img.naturalHeight;\n    }\n  },\n  render: function render(h) {\n    var imgData = {\n      staticClass: 'v-parallax__image',\n      style: this.styles,\n      attrs: {\n        src: this.src,\n        alt: this.alt\n      },\n      ref: 'img'\n    };\n    var container = h('div', {\n      staticClass: 'v-parallax__image-container'\n    }, [h('img', imgData)]);\n    var content = h('div', {\n      staticClass: 'v-parallax__content'\n    }, this.$slots.default);\n    return h('div', {\n      staticClass: 'v-parallax',\n      style: {\n        height: \"\".concat(this.height, \"px\")\n      },\n      on: this.$listeners\n    }, [container, content]);\n  }\n});",{"version":3,"sources":["/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VParallax/VParallax.js"],"names":["Translatable","mixins","baseMixins","extend","name","props","alt","type","String","default","height","Number","src","data","isBooted","computed","styles","display","opacity","transform","parallax","mounted","init","methods","img","$refs","complete","translate","listeners","addEventListener","objHeight","naturalHeight","render","h","imgData","staticClass","style","attrs","ref","container","content","$slots","on","$listeners"],"mappings":";AAAA;AACA,0D,CAA2D;;AAE3D,OAAOA,YAAP;AACA,OAAOC,MAAP;AACA,IAAMC,UAAU,GAAGD,MAAM,CAACD,YAAD,CAAzB;AACA;;AAEA,eAAeE,UAAU,CAACC,MAAX,GAAoBA,MAApB,CAA2B;AACxCC,EAAAA,IAAI,EAAE,YADkC;AAExCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,GAAG,EAAE;AACHC,MAAAA,IAAI,EAAEC,MADH;AAEHC,MAAAA,OAAO,EAAE;AAFN,KADA;AAKLC,IAAAA,MAAM,EAAE;AACNH,MAAAA,IAAI,EAAE,CAACC,MAAD,EAASG,MAAT,CADA;AAENF,MAAAA,OAAO,EAAE;AAFH,KALH;AASLG,IAAAA,GAAG,EAAEJ;AATA,GAFiC;AAaxCK,EAAAA,IAAI,EAAE;AAAA,WAAO;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAP;AAAA,GAbkC;AAgBxCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MADQ,oBACC;AACP,aAAO;AACLC,QAAAA,OAAO,EAAE,OADJ;AAELC,QAAAA,OAAO,EAAE,KAAKJ,QAAL,GAAgB,CAAhB,GAAoB,CAFxB;AAGLK,QAAAA,SAAS,4BAAqB,KAAKC,QAA1B;AAHJ,OAAP;AAKD;AAPO,GAhB8B;AA2BxCC,EAAAA,OA3BwC,qBA2B9B;AACR,SAAKC,IAAL;AACD,GA7BuC;AA+BxCC,EAAAA,OAAO,EAAE;AACPD,IAAAA,IADO,kBACA;AAAA;;AACL,UAAME,GAAG,GAAG,KAAKC,KAAL,CAAWD,GAAvB;AACA,UAAI,CAACA,GAAL,EAAU;;AAEV,UAAIA,GAAG,CAACE,QAAR,EAAkB;AAChB,aAAKC,SAAL;AACA,aAAKC,SAAL;AACD,OAHD,MAGO;AACLJ,QAAAA,GAAG,CAACK,gBAAJ,CAAqB,MAArB,EAA6B,YAAM;AACjC,UAAA,KAAI,CAACF,SAAL;;AACA,UAAA,KAAI,CAACC,SAAL;AACD,SAHD,EAGG,KAHH;AAID;;AAED,WAAKd,QAAL,GAAgB,IAAhB;AACD,KAhBM;AAkBPgB,IAAAA,SAlBO,uBAkBK;AACV,aAAO,KAAKL,KAAL,CAAWD,GAAX,CAAeO,aAAtB;AACD;AApBM,GA/B+B;AAuDxCC,EAAAA,MAvDwC,kBAuDjCC,CAvDiC,EAuD9B;AACR,QAAMC,OAAO,GAAG;AACdC,MAAAA,WAAW,EAAE,mBADC;AAEdC,MAAAA,KAAK,EAAE,KAAKpB,MAFE;AAGdqB,MAAAA,KAAK,EAAE;AACLzB,QAAAA,GAAG,EAAE,KAAKA,GADL;AAELN,QAAAA,GAAG,EAAE,KAAKA;AAFL,OAHO;AAOdgC,MAAAA,GAAG,EAAE;AAPS,KAAhB;AASA,QAAMC,SAAS,GAAGN,CAAC,CAAC,KAAD,EAAQ;AACzBE,MAAAA,WAAW,EAAE;AADY,KAAR,EAEhB,CAACF,CAAC,CAAC,KAAD,EAAQC,OAAR,CAAF,CAFgB,CAAnB;AAGA,QAAMM,OAAO,GAAGP,CAAC,CAAC,KAAD,EAAQ;AACvBE,MAAAA,WAAW,EAAE;AADU,KAAR,EAEd,KAAKM,MAAL,CAAYhC,OAFE,CAAjB;AAGA,WAAOwB,CAAC,CAAC,KAAD,EAAQ;AACdE,MAAAA,WAAW,EAAE,YADC;AAEdC,MAAAA,KAAK,EAAE;AACL1B,QAAAA,MAAM,YAAK,KAAKA,MAAV;AADD,OAFO;AAKdgC,MAAAA,EAAE,EAAE,KAAKC;AALK,KAAR,EAML,CAACJ,SAAD,EAAYC,OAAZ,CANK,CAAR;AAOD;AA9EuC,CAA3B,CAAf","sourcesContent":["// Style\nimport \"../../../src/components/VParallax/VParallax.sass\"; // Mixins\n\nimport Translatable from '../../mixins/translatable';\nimport mixins from '../../util/mixins';\nconst baseMixins = mixins(Translatable);\n/* @vue/component */\n\nexport default baseMixins.extend().extend({\n  name: 'v-parallax',\n  props: {\n    alt: {\n      type: String,\n      default: ''\n    },\n    height: {\n      type: [String, Number],\n      default: 500\n    },\n    src: String\n  },\n  data: () => ({\n    isBooted: false\n  }),\n  computed: {\n    styles() {\n      return {\n        display: 'block',\n        opacity: this.isBooted ? 1 : 0,\n        transform: `translate(-50%, ${this.parallax}px)`\n      };\n    }\n\n  },\n\n  mounted() {\n    this.init();\n  },\n\n  methods: {\n    init() {\n      const img = this.$refs.img;\n      if (!img) return;\n\n      if (img.complete) {\n        this.translate();\n        this.listeners();\n      } else {\n        img.addEventListener('load', () => {\n          this.translate();\n          this.listeners();\n        }, false);\n      }\n\n      this.isBooted = true;\n    },\n\n    objHeight() {\n      return this.$refs.img.naturalHeight;\n    }\n\n  },\n\n  render(h) {\n    const imgData = {\n      staticClass: 'v-parallax__image',\n      style: this.styles,\n      attrs: {\n        src: this.src,\n        alt: this.alt\n      },\n      ref: 'img'\n    };\n    const container = h('div', {\n      staticClass: 'v-parallax__image-container'\n    }, [h('img', imgData)]);\n    const content = h('div', {\n      staticClass: 'v-parallax__content'\n    }, this.$slots.default);\n    return h('div', {\n      staticClass: 'v-parallax',\n      style: {\n        height: `${this.height}px`\n      },\n      on: this.$listeners\n    }, [container, content]);\n  }\n\n});\n//# sourceMappingURL=VParallax.js.map"]}]}