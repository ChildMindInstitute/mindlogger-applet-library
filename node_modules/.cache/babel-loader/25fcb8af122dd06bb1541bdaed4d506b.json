{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VSparkline/helpers/path.js","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VSparkline/helpers/path.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { checkCollinear, getDistance, moveTo } from \"./math\";\n/**\n * From https://github.com/unsplash/react-trend/blob/master/src/helpers/DOM.helpers.js#L18\n */\n\nexport function genPath(points, radius) {\n  var fill = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var height = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 75;\n  var start = points.shift();\n  var end = points[points.length - 1];\n  return (fill ? \"M\".concat(start.x, \" \").concat(height - start.x + 2, \" L\").concat(start.x, \" \").concat(start.y) : \"M\".concat(start.x, \" \").concat(start.y)) + points.map(function (point, index) {\n    var next = points[index + 1];\n    var prev = points[index - 1] || start;\n    var isCollinear = next && checkCollinear(next, point, prev);\n\n    if (!next || isCollinear) {\n      return \"L\".concat(point.x, \" \").concat(point.y);\n    }\n\n    var threshold = Math.min(getDistance(prev, point), getDistance(next, point));\n    var isTooCloseForRadius = threshold / 2 < radius;\n    var radiusForPoint = isTooCloseForRadius ? threshold / 2 : radius;\n    var before = moveTo(prev, point, radiusForPoint);\n    var after = moveTo(next, point, radiusForPoint);\n    return \"L\".concat(before.x, \" \").concat(before.y, \"S\").concat(point.x, \" \").concat(point.y, \" \").concat(after.x, \" \").concat(after.y);\n  }).join('') + (fill ? \"L\".concat(end.x, \" \").concat(height - start.x + 2, \" Z\") : '');\n}",{"version":3,"sources":["/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VSparkline/helpers/path.js"],"names":["checkCollinear","getDistance","moveTo","genPath","points","radius","fill","height","start","shift","end","length","x","y","map","point","index","next","prev","isCollinear","threshold","Math","min","isTooCloseForRadius","radiusForPoint","before","after","join"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,EAAsCC,MAAtC;AACA;;;;AAIA,OAAO,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,MAAzB,EAA4D;AAAA,MAA3BC,IAA2B,uEAApB,KAAoB;AAAA,MAAbC,MAAa,uEAAJ,EAAI;AACjE,MAAMC,KAAK,GAAGJ,MAAM,CAACK,KAAP,EAAd;AACA,MAAMC,GAAG,GAAGN,MAAM,CAACA,MAAM,CAACO,MAAP,GAAgB,CAAjB,CAAlB;AACA,SAAO,CAACL,IAAI,cAAOE,KAAK,CAACI,CAAb,cAAkBL,MAAM,GAAGC,KAAK,CAACI,CAAf,GAAmB,CAArC,eAA2CJ,KAAK,CAACI,CAAjD,cAAsDJ,KAAK,CAACK,CAA5D,eAAsEL,KAAK,CAACI,CAA5E,cAAiFJ,KAAK,CAACK,CAAvF,CAAL,IAAmGT,MAAM,CAACU,GAAP,CAAW,UAACC,KAAD,EAAQC,KAAR,EAAkB;AACrI,QAAMC,IAAI,GAAGb,MAAM,CAACY,KAAK,GAAG,CAAT,CAAnB;AACA,QAAME,IAAI,GAAGd,MAAM,CAACY,KAAK,GAAG,CAAT,CAAN,IAAqBR,KAAlC;AACA,QAAMW,WAAW,GAAGF,IAAI,IAAIjB,cAAc,CAACiB,IAAD,EAAOF,KAAP,EAAcG,IAAd,CAA1C;;AAEA,QAAI,CAACD,IAAD,IAASE,WAAb,EAA0B;AACxB,wBAAWJ,KAAK,CAACH,CAAjB,cAAsBG,KAAK,CAACF,CAA5B;AACD;;AAED,QAAMO,SAAS,GAAGC,IAAI,CAACC,GAAL,CAASrB,WAAW,CAACiB,IAAD,EAAOH,KAAP,CAApB,EAAmCd,WAAW,CAACgB,IAAD,EAAOF,KAAP,CAA9C,CAAlB;AACA,QAAMQ,mBAAmB,GAAGH,SAAS,GAAG,CAAZ,GAAgBf,MAA5C;AACA,QAAMmB,cAAc,GAAGD,mBAAmB,GAAGH,SAAS,GAAG,CAAf,GAAmBf,MAA7D;AACA,QAAMoB,MAAM,GAAGvB,MAAM,CAACgB,IAAD,EAAOH,KAAP,EAAcS,cAAd,CAArB;AACA,QAAME,KAAK,GAAGxB,MAAM,CAACe,IAAD,EAAOF,KAAP,EAAcS,cAAd,CAApB;AACA,sBAAWC,MAAM,CAACb,CAAlB,cAAuBa,MAAM,CAACZ,CAA9B,cAAmCE,KAAK,CAACH,CAAzC,cAA8CG,KAAK,CAACF,CAApD,cAAyDa,KAAK,CAACd,CAA/D,cAAoEc,KAAK,CAACb,CAA1E;AACD,GAfyG,EAevGc,IAfuG,CAelG,EAfkG,CAAnG,IAeQrB,IAAI,cAAOI,GAAG,CAACE,CAAX,cAAgBL,MAAM,GAAGC,KAAK,CAACI,CAAf,GAAmB,CAAnC,UAA2C,EAfvD,CAAP;AAgBD","sourcesContent":["import { checkCollinear, getDistance, moveTo } from './math';\n/**\n * From https://github.com/unsplash/react-trend/blob/master/src/helpers/DOM.helpers.js#L18\n */\n\nexport function genPath(points, radius, fill = false, height = 75) {\n  const start = points.shift();\n  const end = points[points.length - 1];\n  return (fill ? `M${start.x} ${height - start.x + 2} L${start.x} ${start.y}` : `M${start.x} ${start.y}`) + points.map((point, index) => {\n    const next = points[index + 1];\n    const prev = points[index - 1] || start;\n    const isCollinear = next && checkCollinear(next, point, prev);\n\n    if (!next || isCollinear) {\n      return `L${point.x} ${point.y}`;\n    }\n\n    const threshold = Math.min(getDistance(prev, point), getDistance(next, point));\n    const isTooCloseForRadius = threshold / 2 < radius;\n    const radiusForPoint = isTooCloseForRadius ? threshold / 2 : radius;\n    const before = moveTo(prev, point, radiusForPoint);\n    const after = moveTo(next, point, radiusForPoint);\n    return `L${before.x} ${before.y}S${point.x} ${point.y} ${after.x} ${after.y}`;\n  }).join('') + (fill ? `L${end.x} ${height - start.x + 2} Z` : '');\n}\n//# sourceMappingURL=path.js.map"]}]}