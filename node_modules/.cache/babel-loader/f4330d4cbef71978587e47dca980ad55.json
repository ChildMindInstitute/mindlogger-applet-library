{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/services/goto/util.js","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/services/goto/util.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n// Return target's cumulative offset from the top\nexport function getOffset(target) {\n  if (typeof target === 'number') {\n    return target;\n  }\n\n  var el = $(target);\n\n  if (!el) {\n    throw typeof target === 'string' ? new Error(\"Target element \\\"\".concat(target, \"\\\" not found.\")) : new TypeError(\"Target must be a Number/Selector/HTMLElement/VueComponent, received \".concat(type(target), \" instead.\"));\n  }\n\n  var totalOffset = 0;\n\n  while (el) {\n    totalOffset += el.offsetTop;\n    el = el.offsetParent;\n  }\n\n  return totalOffset;\n}\nexport function getContainer(container) {\n  var el = $(container);\n  if (el) return el;\n  throw typeof container === 'string' ? new Error(\"Container element \\\"\".concat(container, \"\\\" not found.\")) : new TypeError(\"Container must be a Selector/HTMLElement/VueComponent, received \".concat(type(container), \" instead.\"));\n}\n\nfunction type(el) {\n  return el == null ? el : el.constructor.name;\n}\n\nfunction $(el) {\n  if (typeof el === 'string') {\n    return document.querySelector(el);\n  } else if (el && el._isVue) {\n    return el.$el;\n  } else if (el instanceof HTMLElement) {\n    return el;\n  } else {\n    return null;\n  }\n}",{"version":3,"sources":["/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/services/goto/util.js"],"names":["getOffset","target","el","$","Error","TypeError","type","totalOffset","offsetTop","offsetParent","getContainer","container","constructor","name","document","querySelector","_isVue","$el","HTMLElement"],"mappings":";AAAA;AACA,OAAO,SAASA,SAAT,CAAmBC,MAAnB,EAA2B;AAChC,MAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,WAAOA,MAAP;AACD;;AAED,MAAIC,EAAE,GAAGC,CAAC,CAACF,MAAD,CAAV;;AAEA,MAAI,CAACC,EAAL,EAAS;AACP,UAAM,OAAOD,MAAP,KAAkB,QAAlB,GAA6B,IAAIG,KAAJ,4BAA6BH,MAA7B,mBAA7B,GAAkF,IAAII,SAAJ,+EAAqFC,IAAI,CAACL,MAAD,CAAzF,eAAxF;AACD;;AAED,MAAIM,WAAW,GAAG,CAAlB;;AAEA,SAAOL,EAAP,EAAW;AACTK,IAAAA,WAAW,IAAIL,EAAE,CAACM,SAAlB;AACAN,IAAAA,EAAE,GAAGA,EAAE,CAACO,YAAR;AACD;;AAED,SAAOF,WAAP;AACD;AACD,OAAO,SAASG,YAAT,CAAsBC,SAAtB,EAAiC;AACtC,MAAMT,EAAE,GAAGC,CAAC,CAACQ,SAAD,CAAZ;AACA,MAAIT,EAAJ,EAAQ,OAAOA,EAAP;AACR,QAAM,OAAOS,SAAP,KAAqB,QAArB,GAAgC,IAAIP,KAAJ,+BAAgCO,SAAhC,mBAAhC,GAA2F,IAAIN,SAAJ,2EAAiFC,IAAI,CAACK,SAAD,CAArF,eAAjG;AACD;;AAED,SAASL,IAAT,CAAcJ,EAAd,EAAkB;AAChB,SAAOA,EAAE,IAAI,IAAN,GAAaA,EAAb,GAAkBA,EAAE,CAACU,WAAH,CAAeC,IAAxC;AACD;;AAED,SAASV,CAAT,CAAWD,EAAX,EAAe;AACb,MAAI,OAAOA,EAAP,KAAc,QAAlB,EAA4B;AAC1B,WAAOY,QAAQ,CAACC,aAAT,CAAuBb,EAAvB,CAAP;AACD,GAFD,MAEO,IAAIA,EAAE,IAAIA,EAAE,CAACc,MAAb,EAAqB;AAC1B,WAAOd,EAAE,CAACe,GAAV;AACD,GAFM,MAEA,IAAIf,EAAE,YAAYgB,WAAlB,EAA+B;AACpC,WAAOhB,EAAP;AACD,GAFM,MAEA;AACL,WAAO,IAAP;AACD;AACF","sourcesContent":["// Return target's cumulative offset from the top\nexport function getOffset(target) {\n  if (typeof target === 'number') {\n    return target;\n  }\n\n  let el = $(target);\n\n  if (!el) {\n    throw typeof target === 'string' ? new Error(`Target element \"${target}\" not found.`) : new TypeError(`Target must be a Number/Selector/HTMLElement/VueComponent, received ${type(target)} instead.`);\n  }\n\n  let totalOffset = 0;\n\n  while (el) {\n    totalOffset += el.offsetTop;\n    el = el.offsetParent;\n  }\n\n  return totalOffset;\n}\nexport function getContainer(container) {\n  const el = $(container);\n  if (el) return el;\n  throw typeof container === 'string' ? new Error(`Container element \"${container}\" not found.`) : new TypeError(`Container must be a Selector/HTMLElement/VueComponent, received ${type(container)} instead.`);\n}\n\nfunction type(el) {\n  return el == null ? el : el.constructor.name;\n}\n\nfunction $(el) {\n  if (typeof el === 'string') {\n    return document.querySelector(el);\n  } else if (el && el._isVue) {\n    return el.$el;\n  } else if (el instanceof HTMLElement) {\n    return el;\n  } else {\n    return null;\n  }\n}\n//# sourceMappingURL=util.js.map"]}]}