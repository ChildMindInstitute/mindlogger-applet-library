{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VTabs/VTabsBar.js","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VTabs/VTabsBar.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Extensions\nimport { BaseSlideGroup } from \"../VSlideGroup/VSlideGroup\"; // Mixins\n\nimport Themeable from \"../../mixins/themeable\";\nimport SSRBootable from \"../../mixins/ssr-bootable\"; // Utilities\n\nimport mixins from \"../../util/mixins\";\nexport default mixins(BaseSlideGroup, SSRBootable, Themeable\n/* @vue/component */\n).extend({\n  name: 'v-tabs-bar',\n  provide: function provide() {\n    return {\n      tabsBar: this\n    };\n  },\n  computed: {\n    classes: function classes() {\n      return _objectSpread({}, BaseSlideGroup.options.computed.classes.call(this), {\n        'v-tabs-bar': true,\n        'v-tabs-bar--is-mobile': this.isMobile,\n        // TODO: Remove this and move to v-slide-group\n        'v-tabs-bar--show-arrows': this.showArrows\n      }, this.themeClasses);\n    }\n  },\n  watch: {\n    items: 'callSlider',\n    internalValue: 'callSlider',\n    $route: 'onRouteChange'\n  },\n  methods: {\n    callSlider: function callSlider() {\n      if (!this.isBooted) return;\n      this.$emit('call:slider');\n    },\n    genContent: function genContent() {\n      var render = BaseSlideGroup.options.methods.genContent.call(this);\n      render.data = render.data || {};\n      render.data.staticClass += ' v-tabs-bar__content';\n      return render;\n    },\n    onRouteChange: function onRouteChange(val, oldVal) {\n      /* istanbul ignore next */\n      if (this.mandatory) return;\n      var items = this.items;\n      var newPath = val.path;\n      var oldPath = oldVal.path;\n      var hasNew = false;\n      var hasOld = false;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n          if (item.to === newPath) hasNew = true;else if (item.to === oldPath) hasOld = true;\n          if (hasNew && hasOld) break;\n        } // If we have an old item and not a new one\n        // it's assumed that the user navigated to\n        // a path that is not present in the items\n\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (!hasNew && hasOld) this.internalValue = undefined;\n    }\n  },\n  render: function render(h) {\n    var render = BaseSlideGroup.options.render.call(this, h);\n    render.data.attrs = {\n      role: 'tablist'\n    };\n    return render;\n  }\n});",{"version":3,"sources":["/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VTabs/VTabsBar.js"],"names":["BaseSlideGroup","Themeable","SSRBootable","mixins","extend","name","provide","tabsBar","computed","classes","options","call","isMobile","showArrows","themeClasses","watch","items","internalValue","$route","methods","callSlider","isBooted","$emit","genContent","render","data","staticClass","onRouteChange","val","oldVal","mandatory","newPath","path","oldPath","hasNew","hasOld","item","to","undefined","h","attrs","role"],"mappings":";;;;;;;;;;;AAAA;AACA,SAASA,cAAT,qC,CAA6D;;AAE7D,OAAOC,SAAP;AACA,OAAOC,WAAP,kC,CAAqD;;AAErD,OAAOC,MAAP;AACA,eAAeA,MAAM,CAACH,cAAD,EAAiBE,WAAjB,EAA8BD;AACnD;AADqB,CAAN,CAEbG,MAFa,CAEN;AACPC,EAAAA,IAAI,EAAE,YADC;AAGPC,EAAAA,OAHO,qBAGG;AACR,WAAO;AACLC,MAAAA,OAAO,EAAE;AADJ,KAAP;AAGD,GAPM;AASPC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OADQ,qBACE;AACR,+BAAYT,cAAc,CAACU,OAAf,CAAuBF,QAAvB,CAAgCC,OAAhC,CAAwCE,IAAxC,CAA6C,IAA7C,CAAZ;AACE,sBAAc,IADhB;AAEE,iCAAyB,KAAKC,QAFhC;AAGE;AACA,mCAA2B,KAAKC;AAJlC,SAKK,KAAKC,YALV;AAOD;AATO,GATH;AAqBPC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,YADF;AAELC,IAAAA,aAAa,EAAE,YAFV;AAGLC,IAAAA,MAAM,EAAE;AAHH,GArBA;AA0BPC,EAAAA,OAAO,EAAE;AACPC,IAAAA,UADO,wBACM;AACX,UAAI,CAAC,KAAKC,QAAV,EAAoB;AACpB,WAAKC,KAAL,CAAW,aAAX;AACD,KAJM;AAMPC,IAAAA,UANO,wBAMM;AACX,UAAMC,MAAM,GAAGxB,cAAc,CAACU,OAAf,CAAuBS,OAAvB,CAA+BI,UAA/B,CAA0CZ,IAA1C,CAA+C,IAA/C,CAAf;AACAa,MAAAA,MAAM,CAACC,IAAP,GAAcD,MAAM,CAACC,IAAP,IAAe,EAA7B;AACAD,MAAAA,MAAM,CAACC,IAAP,CAAYC,WAAZ,IAA2B,sBAA3B;AACA,aAAOF,MAAP;AACD,KAXM;AAaPG,IAAAA,aAbO,yBAaOC,GAbP,EAaYC,MAbZ,EAaoB;AACzB;AACA,UAAI,KAAKC,SAAT,EAAoB;AACpB,UAAMd,KAAK,GAAG,KAAKA,KAAnB;AACA,UAAMe,OAAO,GAAGH,GAAG,CAACI,IAApB;AACA,UAAMC,OAAO,GAAGJ,MAAM,CAACG,IAAvB;AACA,UAAIE,MAAM,GAAG,KAAb;AACA,UAAIC,MAAM,GAAG,KAAb;AAPyB;AAAA;AAAA;;AAAA;AASzB,6BAAmBnB,KAAnB,8HAA0B;AAAA,cAAfoB,IAAe;AACxB,cAAIA,IAAI,CAACC,EAAL,KAAYN,OAAhB,EAAyBG,MAAM,GAAG,IAAT,CAAzB,KAA4C,IAAIE,IAAI,CAACC,EAAL,KAAYJ,OAAhB,EAAyBE,MAAM,GAAG,IAAT;AACrE,cAAID,MAAM,IAAIC,MAAd,EAAsB;AACvB,SAZwB,CAYvB;AACF;AACA;;AAdyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBzB,UAAI,CAACD,MAAD,IAAWC,MAAf,EAAuB,KAAKlB,aAAL,GAAqBqB,SAArB;AACxB;AA/BM,GA1BF;AA6DPd,EAAAA,MA7DO,kBA6DAe,CA7DA,EA6DG;AACR,QAAMf,MAAM,GAAGxB,cAAc,CAACU,OAAf,CAAuBc,MAAvB,CAA8Bb,IAA9B,CAAmC,IAAnC,EAAyC4B,CAAzC,CAAf;AACAf,IAAAA,MAAM,CAACC,IAAP,CAAYe,KAAZ,GAAoB;AAClBC,MAAAA,IAAI,EAAE;AADY,KAApB;AAGA,WAAOjB,MAAP;AACD;AAnEM,CAFM,CAAf","sourcesContent":["// Extensions\nimport { BaseSlideGroup } from '../VSlideGroup/VSlideGroup'; // Mixins\n\nimport Themeable from '../../mixins/themeable';\nimport SSRBootable from '../../mixins/ssr-bootable'; // Utilities\n\nimport mixins from '../../util/mixins';\nexport default mixins(BaseSlideGroup, SSRBootable, Themeable\n/* @vue/component */\n).extend({\n  name: 'v-tabs-bar',\n\n  provide() {\n    return {\n      tabsBar: this\n    };\n  },\n\n  computed: {\n    classes() {\n      return { ...BaseSlideGroup.options.computed.classes.call(this),\n        'v-tabs-bar': true,\n        'v-tabs-bar--is-mobile': this.isMobile,\n        // TODO: Remove this and move to v-slide-group\n        'v-tabs-bar--show-arrows': this.showArrows,\n        ...this.themeClasses\n      };\n    }\n\n  },\n  watch: {\n    items: 'callSlider',\n    internalValue: 'callSlider',\n    $route: 'onRouteChange'\n  },\n  methods: {\n    callSlider() {\n      if (!this.isBooted) return;\n      this.$emit('call:slider');\n    },\n\n    genContent() {\n      const render = BaseSlideGroup.options.methods.genContent.call(this);\n      render.data = render.data || {};\n      render.data.staticClass += ' v-tabs-bar__content';\n      return render;\n    },\n\n    onRouteChange(val, oldVal) {\n      /* istanbul ignore next */\n      if (this.mandatory) return;\n      const items = this.items;\n      const newPath = val.path;\n      const oldPath = oldVal.path;\n      let hasNew = false;\n      let hasOld = false;\n\n      for (const item of items) {\n        if (item.to === newPath) hasNew = true;else if (item.to === oldPath) hasOld = true;\n        if (hasNew && hasOld) break;\n      } // If we have an old item and not a new one\n      // it's assumed that the user navigated to\n      // a path that is not present in the items\n\n\n      if (!hasNew && hasOld) this.internalValue = undefined;\n    }\n\n  },\n\n  render(h) {\n    const render = BaseSlideGroup.options.render.call(this, h);\n    render.data.attrs = {\n      role: 'tablist'\n    };\n    return render;\n  }\n\n});\n//# sourceMappingURL=VTabsBar.js.map"]}]}