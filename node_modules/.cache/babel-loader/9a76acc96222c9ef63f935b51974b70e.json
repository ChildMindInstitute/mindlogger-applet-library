{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/eslint-loader/index.js??ref--13-0!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/src/state/index.js","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/src/state/index.js","mtime":1617365728000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _objectWithoutProperties from \"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nimport { Store } from 'vuex';\nimport _ from 'lodash';\nimport createPersistedState from 'vuex-persistedstate';\n\nvar getDefaultState = function getDefaultState() {\n  return {\n    backend: \"https://api-new.mindlogger.org/api/v1\",\n    auth: {},\n    currentLanguage: 'en_US',\n    currentRetentions: null,\n    publishedApplets: []\n  };\n};\n\nvar state = getDefaultState();\nvar mutations = {\n  setCurrentLanguage: function setCurrentLanguage(state, lang) {\n    state.currentLanguage = lang;\n  },\n  resetState: function resetState(state) {\n    Object.assign(state, getDefaultState());\n  },\n  setBackend: function setBackend(state, backend) {\n    // const backendServers = [\n    //   { url: \"https://api-prod.mindlogger.org/api/v1\", env: \"production\" },\n    //   { url: \"https://api-staging.mindlogger.org/api/v1\", env: \"development\" },\n    //   { url: \"https://api-test.mindlogger.org/api/v1\", env: \"staging\" },\n    //   { url: \"http://localhost:8080/api/v1\", env: \"local\" },\n    //   { url: process.env.CUSTOM_URL || \"\", env: \"other\" },\n    // ];\n    // state.backend =\n    //   backend ||\n    //   _.find(backendServers, { env: process.env.NODE_ENV }).url ||\n    //   backendServers[0].url;\n    state.backend = backend || \"https://api-new.mindlogger.org/api/v1\";\n  },\n  setPublishedApplets: function setPublishedApplets(state, publishedApplets) {\n    state.publishedApplets = publishedApplets;\n  },\n  setAuth: function setAuth(state, userData) {\n    state.auth = userData.auth;\n  }\n};\n\nvar stateCopy = function (_ref) {\n  var currentLanguage = _ref.currentLanguage,\n      o = _objectWithoutProperties(_ref, [\"currentLanguage\"]);\n\n  return o;\n}(state);\n\nvar stateToPersist = Object.keys(stateCopy);\nexport var storeConfig = {\n  state: state,\n  mutations: mutations,\n  plugins: [createPersistedState({\n    storage: window.sessionStorage,\n    paths: stateToPersist\n  })]\n};\nvar store = new Store(storeConfig);\nexport default store;",{"version":3,"sources":["/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/src/state/index.js"],"names":["Vue","Vuex","use","Store","_","createPersistedState","getDefaultState","backend","auth","currentLanguage","currentRetentions","publishedApplets","state","mutations","setCurrentLanguage","lang","resetState","Object","assign","setBackend","setPublishedApplets","setAuth","userData","stateCopy","o","stateToPersist","keys","storeConfig","plugins","storage","window","sessionStorage","paths","store"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEAD,GAAG,CAACE,GAAJ,CAAQD,IAAR;AAEA,SAASE,KAAT,QAAsB,MAAtB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,oBAAP,MAAiC,qBAAjC;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,SAAO;AACLC,IAAAA,OAAO,EAAE,uCADJ;AAELC,IAAAA,IAAI,EAAE,EAFD;AAGLC,IAAAA,eAAe,EAAE,OAHZ;AAILC,IAAAA,iBAAiB,EAAE,IAJd;AAKLC,IAAAA,gBAAgB,EAAE;AALb,GAAP;AAOD,CARD;;AAUA,IAAMC,KAAK,GAAGN,eAAe,EAA7B;AAEA,IAAMO,SAAS,GAAG;AAChBC,EAAAA,kBADgB,8BACGF,KADH,EACUG,IADV,EACgB;AAC9BH,IAAAA,KAAK,CAACH,eAAN,GAAwBM,IAAxB;AACD,GAHe;AAIhBC,EAAAA,UAJgB,sBAILJ,KAJK,EAIE;AAChBK,IAAAA,MAAM,CAACC,MAAP,CAAcN,KAAd,EAAqBN,eAAe,EAApC;AACD,GANe;AAOhBa,EAAAA,UAPgB,sBAOLP,KAPK,EAOEL,OAPF,EAOW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEAK,IAAAA,KAAK,CAACL,OAAN,GAAgBA,OAAO,IAAI,uCAA3B;AACD,GAtBe;AAuBhBa,EAAAA,mBAvBgB,+BAuBIR,KAvBJ,EAuBWD,gBAvBX,EAuB6B;AAC3CC,IAAAA,KAAK,CAACD,gBAAN,GAAyBA,gBAAzB;AACD,GAzBe;AA0BhBU,EAAAA,OA1BgB,mBA0BRT,KA1BQ,EA0BDU,QA1BC,EA0BS;AACvBV,IAAAA,KAAK,CAACJ,IAAN,GAAac,QAAQ,CAACd,IAAtB;AACD;AA5Be,CAAlB;;AA+BA,IAAMe,SAAS,GAAI;AAAA,MAEjBd,eAFiB,QAEjBA,eAFiB;AAAA,MAGde,CAHc;;AAAA,SAIbA,CAJa;AAAA,CAAD,CAITZ,KAJS,CAAlB;;AAKA,IAAMa,cAAc,GAAGR,MAAM,CAACS,IAAP,CAAYH,SAAZ,CAAvB;AAEA,OAAO,IAAMI,WAAW,GAAG;AACzBf,EAAAA,KAAK,EAALA,KADyB;AAEzBC,EAAAA,SAAS,EAATA,SAFyB;AAGzBe,EAAAA,OAAO,EAAE,CACPvB,oBAAoB,CAAC;AACnBwB,IAAAA,OAAO,EAAEC,MAAM,CAACC,cADG;AAEnBC,IAAAA,KAAK,EAAEP;AAFY,GAAD,CADb;AAHgB,CAApB;AAWP,IAAMQ,KAAK,GAAG,IAAI9B,KAAJ,CAAUwB,WAAV,CAAd;AAEA,eAAeM,KAAf","sourcesContent":["import Vue from 'vue';\nimport Vuex from 'vuex';\n\nVue.use(Vuex);\n\nimport { Store } from 'vuex';\nimport _ from 'lodash';\nimport createPersistedState from 'vuex-persistedstate';\n\nconst getDefaultState = () => {\n  return {\n    backend: \"https://api-new.mindlogger.org/api/v1\",\n    auth: {},\n    currentLanguage: 'en_US',\n    currentRetentions: null,\n    publishedApplets: [],\n  };\n};\n\nconst state = getDefaultState();\n\nconst mutations = {\n  setCurrentLanguage(state, lang) {\n    state.currentLanguage = lang;\n  },\n  resetState(state) {\n    Object.assign(state, getDefaultState());\n  },\n  setBackend(state, backend) {\n    // const backendServers = [\n    //   { url: \"https://api-prod.mindlogger.org/api/v1\", env: \"production\" },\n    //   { url: \"https://api-staging.mindlogger.org/api/v1\", env: \"development\" },\n    //   { url: \"https://api-test.mindlogger.org/api/v1\", env: \"staging\" },\n    //   { url: \"http://localhost:8080/api/v1\", env: \"local\" },\n    //   { url: process.env.CUSTOM_URL || \"\", env: \"other\" },\n    // ];\n\n    // state.backend =\n    //   backend ||\n    //   _.find(backendServers, { env: process.env.NODE_ENV }).url ||\n    //   backendServers[0].url;\n\n    state.backend = backend || \"https://api-new.mindlogger.org/api/v1\";\n  },\n  setPublishedApplets(state, publishedApplets) {\n    state.publishedApplets = publishedApplets;\n  },\n  setAuth(state, userData) {\n    state.auth = userData.auth;\n  },\n};\n\nconst stateCopy = (({ \n  // Excluded properties.\n  currentLanguage,\n  ...o\n}) => o)(state);\nconst stateToPersist = Object.keys(stateCopy);\n\nexport const storeConfig = {\n  state,\n  mutations,\n  plugins: [\n    createPersistedState({\n      storage: window.sessionStorage,\n      paths: stateToPersist,\n    }),\n  ],\n};\n\nconst store = new Store(storeConfig);\n\nexport default store;\n"]}]}