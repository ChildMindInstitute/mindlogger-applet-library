{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/dayspan-vuetify-2/src/components/DayTimes.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/dayspan-vuetify-2/src/components/DayTimes.vue","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Constants, CalendarDay, CalendarEvent, Calendar, DaySpan, Functions as fn } from 'dayspan';\nexport default {\n  name: 'dsDayTimes',\n  props: {\n    day: {\n      required: true,\n      type: CalendarDay\n    },\n    calendar: {\n      required: true,\n      type: Calendar\n    },\n    placeholder: {\n      type: CalendarEvent\n    },\n    placeholderForCreate: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    classesDay: function classesDay() {\n      return {\n        'ds-day-today': this.day.currentDay,\n        'ds-day-past': this.day.currentOffset < 0,\n        'ds-day-future': this.day.currentOffset > 0\n      };\n    },\n    nowLine: function nowLine() {\n      return this.$dayspan.getStyleNow();\n    },\n    hasPlaceholder: function hasPlaceholder() {\n      return this.placeholder && !this.placeholder.fullDay && this.placeholder.time.matchesDay(this.day);\n    }\n  },\n  methods: {\n    isVisible: function isVisible(calendarEvent) {\n      if (calendarEvent.fullDay) {\n        return false;\n      }\n\n      if (this.$dayspan.features.hideOnMove && this.placeholder && this.placeholder.event === calendarEvent.event) {\n        return false;\n      }\n\n      return true;\n    },\n    addAt: function addAt(hour) {\n      this.$emit('add-at', {\n        day: this.day,\n        hour: hour - 1\n      });\n    },\n    mouseEnterDay: function mouseEnterDay($event) {\n      this.$emit('mouse-enter-day', this.day);\n    },\n    mouseLeaveDay: function mouseLeaveDay($event) {\n      this.$emit('mouse-leave-day', this.day);\n    },\n    mouseMove: function mouseMove($event) {\n      var time = this.getTimeAt($event, this.$dayspan.rounding.move);\n      var timeDrag = this.getTimeAt($event, this.$dayspan.rounding.add, true);\n      var ev = this.getEvent('mouse-move', $event, {\n        time: time,\n        timeDrag: timeDrag\n      });\n      this.$emit('mouse-move', ev);\n    },\n    mouseDown: function mouseDown($event) {\n      var time = this.getTimeAt($event, this.$dayspan.rounding.add);\n      var ev = this.getEvent('mouse-down', $event, {\n        time: time\n      });\n      this.$emit('mouse-down', ev);\n    },\n    mouseUp: function mouseUp($event) {\n      var time = this.getTimeAt($event, this.$dayspan.rounding.add, true);\n      var ev = this.getEvent('mouse-up', $event, {\n        time: time\n      });\n      this.$emit('mouse-up', ev);\n    },\n    getEvent: function getEvent(type, $event) {\n      var extra = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return fn.extend({\n        type: type,\n        day: this.day,\n        left: $event.button === 0 && $event.buttons > 0,\n        right: $event.button === 1 && $event.buttons > 0,\n        handled: false,\n        $event: $event,\n        $vm: this,\n        $element: this.$el\n      }, extra);\n    },\n    getTimeAt: function getTimeAt($event, roundTo, roundUp) {\n      var bounds = this.$el.getBoundingClientRect();\n      var y = ($event.clientY - bounds.y) / bounds.height;\n      var millis = Math.round(Constants.MILLIS_IN_DAY * y);\n      var time = this.day.start().relative(millis);\n\n      if (roundTo) {\n        time = this.$dayspan.roundTime(time, roundTo, roundUp);\n      }\n\n      return time;\n    }\n  }\n};",{"version":3,"sources":["DayTimes.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n\r\n    <div class=\"ds-day\"\r\n         :class=\"classesDay\"\r\n         @mouseenter=\"mouseEnterDay\"\r\n         @mouseleave=\"mouseLeaveDay\"\r\n         @mousemove.stop=\"mouseMove\"\r\n         @mousedown=\"mouseDown\"\r\n         @mouseup=\"mouseUp\"\r\n         @dragstart.prevent>\r\n\r\n        <div class=\"ds-hour\"\r\n             v-for=\"h in 24\"\r\n             @click.stop=\"addAt( h )\"></div>\r\n\r\n        <template v-for=\"(event, i) in day.events\">\r\n\r\n            <ds-calendar-event-time\r\n                    v-if=\"isVisible( event )\"\r\n                    v-bind=\"{$scopedSlots}\"\r\n                    v-on=\"$listeners\"\r\n                    :calendar-event=\"event\"\r\n                    :key=\"event.id\"\r\n                    :calendar=\"calendar\"\r\n            ></ds-calendar-event-time>\r\n\r\n        </template>\r\n\r\n        <div v-if=\"day.currentDay\"\r\n             :style=\"nowLine\"></div>\r\n\r\n        <div v-if=\"hasPlaceholder\">\r\n\r\n            <ds-calendar-event-time-placeholder\r\n                    v-bind=\"{$scopedSlots}\"\r\n                    v-on=\"$listeners\"\r\n                    :day=\"day\"\r\n                    :placeholder=\"placeholder\"\r\n                    :placeholder-for-create=\"placeholderForCreate\"\r\n                    :calendar=\"calendar\"\r\n            ></ds-calendar-event-time-placeholder>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport { Constants, CalendarDay, CalendarEvent, Calendar, DaySpan, Functions as fn } from 'dayspan'\r\n\r\nexport default {\r\n\r\n    name: 'dsDayTimes',\r\n\r\n    props:\r\n        {\r\n            day:\r\n                {\r\n                    required: true,\r\n                    type: CalendarDay\r\n                },\r\n\r\n            calendar:\r\n                {\r\n                    required: true,\r\n                    type: Calendar\r\n                },\r\n\r\n            placeholder:\r\n                {\r\n                    type: CalendarEvent\r\n                },\r\n\r\n            placeholderForCreate:\r\n                {\r\n                    type: Boolean,\r\n                    default: false\r\n                }\r\n        },\r\n\r\n    computed:\r\n        {\r\n            classesDay () {\r\n                return {\r\n                    'ds-day-today': this.day.currentDay,\r\n                    'ds-day-past': this.day.currentOffset < 0,\r\n                    'ds-day-future': this.day.currentOffset > 0\r\n                }\r\n            },\r\n\r\n            nowLine () {\r\n                return this.$dayspan.getStyleNow()\r\n            },\r\n\r\n            hasPlaceholder () {\r\n                return this.placeholder &&\r\n                    !this.placeholder.fullDay &&\r\n                    this.placeholder.time.matchesDay(this.day)\r\n            }\r\n        },\r\n\r\n    methods:\r\n        {\r\n            isVisible (calendarEvent) {\r\n                if (calendarEvent.fullDay) {\r\n                    return false\r\n                }\r\n\r\n                if (this.$dayspan.features.hideOnMove &&\r\n                    this.placeholder &&\r\n                    this.placeholder.event === calendarEvent.event) {\r\n                    return false\r\n                }\r\n\r\n                return true\r\n            },\r\n\r\n            addAt (hour) {\r\n                this.$emit('add-at', {\r\n                    day: this.day,\r\n                    hour: hour - 1\r\n                })\r\n            },\r\n\r\n            mouseEnterDay ($event) {\r\n                this.$emit('mouse-enter-day', this.day)\r\n            },\r\n\r\n            mouseLeaveDay ($event) {\r\n                this.$emit('mouse-leave-day', this.day)\r\n            },\r\n\r\n            mouseMove ($event) {\r\n                var time = this.getTimeAt($event, this.$dayspan.rounding.move)\r\n                var timeDrag = this.getTimeAt($event, this.$dayspan.rounding.add, true)\r\n                var ev = this.getEvent('mouse-move', $event, {time, timeDrag})\r\n\r\n                this.$emit('mouse-move', ev)\r\n            },\r\n\r\n            mouseDown ($event) {\r\n                var time = this.getTimeAt($event, this.$dayspan.rounding.add)\r\n                var ev = this.getEvent('mouse-down', $event, {time})\r\n\r\n                this.$emit('mouse-down', ev)\r\n            },\r\n\r\n            mouseUp ($event) {\r\n                var time = this.getTimeAt($event, this.$dayspan.rounding.add, true)\r\n                var ev = this.getEvent('mouse-up', $event, {time})\r\n\r\n                this.$emit('mouse-up', ev)\r\n            },\r\n\r\n            getEvent (type, $event, extra = {}) {\r\n                return fn.extend({\r\n\r\n                    type: type,\r\n                    day: this.day,\r\n                    left: $event.button === 0 && $event.buttons > 0,\r\n                    right: $event.button === 1 && $event.buttons > 0,\r\n                    handled: false,\r\n                    $event: $event,\r\n                    $vm: this,\r\n                    $element: this.$el\r\n\r\n                }, extra)\r\n            },\r\n\r\n            getTimeAt ($event, roundTo, roundUp) {\r\n                var bounds = this.$el.getBoundingClientRect()\r\n                var y = ($event.clientY - bounds.y) / bounds.height\r\n                var millis = Math.round(Constants.MILLIS_IN_DAY * y)\r\n                var time = this.day.start().relative(millis)\r\n\r\n                if (roundTo) {\r\n                    time = this.$dayspan.roundTime(time, roundTo, roundUp)\r\n                }\r\n\r\n                return time\r\n            }\r\n        }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n\r\n    .v-menu__activator {\r\n        align-items: end;\r\n    }\r\n\r\n    .ds-day {\r\n        flex: 1;\r\n        width: 0;\r\n        border-right: #e0e0e0 1px solid;\r\n        border-bottom: #e0e0e0 1px solid;\r\n\r\n        &.ds-day-today {\r\n            background-color: rgba(0, 0, 0, 0.04);\r\n        }\r\n\r\n        &.ds-day-past {\r\n\r\n        }\r\n\r\n        &.ds-day-future {\r\n\r\n        }\r\n    }\r\n\r\n    .ds-hour {\r\n        height: 40px;\r\n        border-bottom: #e0e0e0 1px solid;\r\n    }\r\n\r\n</style>\r\n"],"sourceRoot":"node_modules/dayspan-vuetify-2/src/components"}]}