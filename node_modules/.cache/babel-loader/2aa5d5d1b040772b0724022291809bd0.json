{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VColorPicker/util/index.js","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VColorPicker/util/index.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _objectWithoutProperties from \"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _typeof from \"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport _defineProperty from \"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Utilities\nimport { HSVAtoRGBA, HSVAtoHex, RGBAtoHSVA, HexToHSVA, HSVAtoHSLA, RGBAtoHex, HSLAtoHSVA, parseHex } from \"../../../util/colorUtils\";\nexport function fromHSVA(hsva) {\n  hsva = _objectSpread({}, hsva);\n  var hexa = HSVAtoHex(hsva);\n  var hsla = HSVAtoHSLA(hsva);\n  var rgba = HSVAtoRGBA(hsva);\n  return {\n    alpha: hsva.a,\n    hex: hexa.substr(0, 7),\n    hexa: hexa,\n    hsla: hsla,\n    hsva: hsva,\n    hue: hsva.h,\n    rgba: rgba\n  };\n}\nexport function fromHSLA(hsla) {\n  var hsva = HSLAtoHSVA(hsla);\n  var hexa = HSVAtoHex(hsva);\n  var rgba = HSVAtoRGBA(hsva);\n  return {\n    alpha: hsva.a,\n    hex: hexa.substr(0, 7),\n    hexa: hexa,\n    hsla: hsla,\n    hsva: hsva,\n    hue: hsva.h,\n    rgba: rgba\n  };\n}\nexport function fromRGBA(rgba) {\n  var hsva = RGBAtoHSVA(rgba);\n  var hexa = RGBAtoHex(rgba);\n  var hsla = HSVAtoHSLA(hsva);\n  return {\n    alpha: hsva.a,\n    hex: hexa.substr(0, 7),\n    hexa: hexa,\n    hsla: hsla,\n    hsva: hsva,\n    hue: hsva.h,\n    rgba: rgba\n  };\n}\nexport function fromHexa(hexa) {\n  var hsva = HexToHSVA(hexa);\n  var hsla = HSVAtoHSLA(hsva);\n  var rgba = HSVAtoRGBA(hsva);\n  return {\n    alpha: hsva.a,\n    hex: hexa.substr(0, 7),\n    hexa: hexa,\n    hsla: hsla,\n    hsva: hsva,\n    hue: hsva.h,\n    rgba: rgba\n  };\n}\nexport function fromHex(hex) {\n  return fromHexa(parseHex(hex));\n}\n\nfunction has(obj, key) {\n  return key.every(function (k) {\n    return obj.hasOwnProperty(k);\n  });\n}\n\nexport function parseColor(color, oldColor) {\n  if (!color) return fromRGBA({\n    r: 255,\n    g: 0,\n    b: 0,\n    a: 1\n  });\n\n  if (typeof color === 'string') {\n    if (color === 'transparent') return fromHexa('#00000000');\n    var hex = parseHex(color);\n    if (oldColor && hex === oldColor.hexa) return oldColor;else return fromHexa(hex);\n  }\n\n  if (_typeof(color) === 'object') {\n    if (color.hasOwnProperty('alpha')) return color;\n    var a = color.hasOwnProperty('a') ? parseFloat(color.a) : 1;\n\n    if (has(color, ['r', 'g', 'b'])) {\n      if (oldColor && color === oldColor.rgba) return oldColor;else return fromRGBA(_objectSpread({}, color, {\n        a: a\n      }));\n    } else if (has(color, ['h', 's', 'l'])) {\n      if (oldColor && color === oldColor.hsla) return oldColor;else return fromHSLA(_objectSpread({}, color, {\n        a: a\n      }));\n    } else if (has(color, ['h', 's', 'v'])) {\n      if (oldColor && color === oldColor.hsva) return oldColor;else return fromHSVA(_objectSpread({}, color, {\n        a: a\n      }));\n    }\n  }\n\n  return fromRGBA({\n    r: 255,\n    g: 0,\n    b: 0,\n    a: 1\n  });\n}\n\nfunction stripAlpha(color, stripAlpha) {\n  if (stripAlpha) {\n    var a = color.a,\n        rest = _objectWithoutProperties(color, [\"a\"]);\n\n    return rest;\n  }\n\n  return color;\n}\n\nexport function extractColor(color, input) {\n  if (input == null) return color;\n\n  if (typeof input === 'string') {\n    return input.length === 7 ? color.hex : color.hexa;\n  }\n\n  if (_typeof(input) === 'object') {\n    if (has(input, ['r', 'g', 'b'])) return stripAlpha(color.rgba, !input.a);else if (has(input, ['h', 's', 'l'])) return stripAlpha(color.hsla, !input.a);else if (has(input, ['h', 's', 'v'])) return stripAlpha(color.hsva, !input.a);\n  }\n\n  return color;\n}\nexport function hasAlpha(color) {\n  if (!color) return false;\n\n  if (typeof color === 'string') {\n    return color.length > 7;\n  }\n\n  if (_typeof(color) === 'object') {\n    return has(color, ['a']) || has(color, ['alpha']);\n  }\n\n  return false;\n}",{"version":3,"sources":["/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VColorPicker/util/index.js"],"names":["HSVAtoRGBA","HSVAtoHex","RGBAtoHSVA","HexToHSVA","HSVAtoHSLA","RGBAtoHex","HSLAtoHSVA","parseHex","fromHSVA","hsva","hexa","hsla","rgba","alpha","a","hex","substr","hue","h","fromHSLA","fromRGBA","fromHexa","fromHex","has","obj","key","every","k","hasOwnProperty","parseColor","color","oldColor","r","g","b","parseFloat","stripAlpha","rest","extractColor","input","length","hasAlpha"],"mappings":"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","sourcesContent":["// Utilities\nimport { HSVAtoRGBA, HSVAtoHex, RGBAtoHSVA, HexToHSVA, HSVAtoHSLA, RGBAtoHex, HSLAtoHSVA, parseHex } from '../../../util/colorUtils';\nexport function fromHSVA(hsva) {\n  hsva = { ...hsva\n  };\n  const hexa = HSVAtoHex(hsva);\n  const hsla = HSVAtoHSLA(hsva);\n  const rgba = HSVAtoRGBA(hsva);\n  return {\n    alpha: hsva.a,\n    hex: hexa.substr(0, 7),\n    hexa,\n    hsla,\n    hsva,\n    hue: hsva.h,\n    rgba\n  };\n}\nexport function fromHSLA(hsla) {\n  const hsva = HSLAtoHSVA(hsla);\n  const hexa = HSVAtoHex(hsva);\n  const rgba = HSVAtoRGBA(hsva);\n  return {\n    alpha: hsva.a,\n    hex: hexa.substr(0, 7),\n    hexa,\n    hsla,\n    hsva,\n    hue: hsva.h,\n    rgba\n  };\n}\nexport function fromRGBA(rgba) {\n  const hsva = RGBAtoHSVA(rgba);\n  const hexa = RGBAtoHex(rgba);\n  const hsla = HSVAtoHSLA(hsva);\n  return {\n    alpha: hsva.a,\n    hex: hexa.substr(0, 7),\n    hexa,\n    hsla,\n    hsva,\n    hue: hsva.h,\n    rgba\n  };\n}\nexport function fromHexa(hexa) {\n  const hsva = HexToHSVA(hexa);\n  const hsla = HSVAtoHSLA(hsva);\n  const rgba = HSVAtoRGBA(hsva);\n  return {\n    alpha: hsva.a,\n    hex: hexa.substr(0, 7),\n    hexa,\n    hsla,\n    hsva,\n    hue: hsva.h,\n    rgba\n  };\n}\nexport function fromHex(hex) {\n  return fromHexa(parseHex(hex));\n}\n\nfunction has(obj, key) {\n  return key.every(k => obj.hasOwnProperty(k));\n}\n\nexport function parseColor(color, oldColor) {\n  if (!color) return fromRGBA({\n    r: 255,\n    g: 0,\n    b: 0,\n    a: 1\n  });\n\n  if (typeof color === 'string') {\n    if (color === 'transparent') return fromHexa('#00000000');\n    const hex = parseHex(color);\n    if (oldColor && hex === oldColor.hexa) return oldColor;else return fromHexa(hex);\n  }\n\n  if (typeof color === 'object') {\n    if (color.hasOwnProperty('alpha')) return color;\n    const a = color.hasOwnProperty('a') ? parseFloat(color.a) : 1;\n\n    if (has(color, ['r', 'g', 'b'])) {\n      if (oldColor && color === oldColor.rgba) return oldColor;else return fromRGBA({ ...color,\n        a\n      });\n    } else if (has(color, ['h', 's', 'l'])) {\n      if (oldColor && color === oldColor.hsla) return oldColor;else return fromHSLA({ ...color,\n        a\n      });\n    } else if (has(color, ['h', 's', 'v'])) {\n      if (oldColor && color === oldColor.hsva) return oldColor;else return fromHSVA({ ...color,\n        a\n      });\n    }\n  }\n\n  return fromRGBA({\n    r: 255,\n    g: 0,\n    b: 0,\n    a: 1\n  });\n}\n\nfunction stripAlpha(color, stripAlpha) {\n  if (stripAlpha) {\n    const {\n      a,\n      ...rest\n    } = color;\n    return rest;\n  }\n\n  return color;\n}\n\nexport function extractColor(color, input) {\n  if (input == null) return color;\n\n  if (typeof input === 'string') {\n    return input.length === 7 ? color.hex : color.hexa;\n  }\n\n  if (typeof input === 'object') {\n    if (has(input, ['r', 'g', 'b'])) return stripAlpha(color.rgba, !input.a);else if (has(input, ['h', 's', 'l'])) return stripAlpha(color.hsla, !input.a);else if (has(input, ['h', 's', 'v'])) return stripAlpha(color.hsva, !input.a);\n  }\n\n  return color;\n}\nexport function hasAlpha(color) {\n  if (!color) return false;\n\n  if (typeof color === 'string') {\n    return color.length > 7;\n  }\n\n  if (typeof color === 'object') {\n    return has(color, ['a']) || has(color, ['alpha']);\n  }\n\n  return false;\n}\n//# sourceMappingURL=index.js.map"]}]}