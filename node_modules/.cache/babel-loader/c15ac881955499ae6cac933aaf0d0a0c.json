{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VCalendar/modes/common.js","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VCalendar/modes/common.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _slicedToArray from \"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.sort\";\nimport { getTimestampIdentifier } from \"../util/timestamp\";\nvar MILLIS_IN_DAY = 86400000;\n\nfunction _getVisuals(events) {\n  var minStart = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var visuals = events.map(function (event) {\n    return {\n      event: event,\n      columnCount: 0,\n      column: 0,\n      left: 0,\n      width: 100\n    };\n  });\n  visuals.sort(function (a, b) {\n    return Math.max(minStart, a.event.startTimestampIdentifier) - Math.max(minStart, b.event.startTimestampIdentifier) || b.event.endTimestampIdentifier - a.event.endTimestampIdentifier;\n  });\n  return visuals;\n}\n\nexport { _getVisuals as getVisuals };\nexport function hasOverlap(s0, e0, s1, e1) {\n  var exclude = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n  return exclude ? !(s0 >= e1 || e0 <= s1) : !(s0 > e1 || e0 < s1);\n}\nexport function setColumnCount(groups) {\n  groups.forEach(function (group) {\n    group.visuals.forEach(function (groupVisual) {\n      groupVisual.columnCount = groups.length;\n    });\n  });\n}\nexport function getRange(event) {\n  return [event.startTimestampIdentifier, event.endTimestampIdentifier];\n}\nexport function getDayRange(event) {\n  return [event.startIdentifier, event.endIdentifier];\n}\nexport function getNormalizedRange(event, dayStart) {\n  return [Math.max(dayStart, event.startTimestampIdentifier), Math.min(dayStart + MILLIS_IN_DAY, event.endTimestampIdentifier)];\n}\nexport function getOpenGroup(groups, start, end, timed) {\n  for (var i = 0; i < groups.length; i++) {\n    var group = groups[i];\n    var intersected = false;\n\n    if (hasOverlap(start, end, group.start, group.end, timed)) {\n      for (var k = 0; k < group.visuals.length; k++) {\n        var groupVisual = group.visuals[k];\n\n        var _ref = timed ? getRange(groupVisual.event) : getDayRange(groupVisual.event),\n            _ref2 = _slicedToArray(_ref, 2),\n            groupStart = _ref2[0],\n            groupEnd = _ref2[1];\n\n        if (hasOverlap(start, end, groupStart, groupEnd, timed)) {\n          intersected = true;\n          break;\n        }\n      }\n    }\n\n    if (!intersected) {\n      return i;\n    }\n  }\n\n  return -1;\n}\nexport function getOverlapGroupHandler(firstWeekday) {\n  var handler = {\n    groups: [],\n    min: -1,\n    max: -1,\n    reset: function reset() {\n      handler.groups = [];\n      handler.min = handler.max = -1;\n    },\n    getVisuals: function getVisuals(day, dayEvents, timed) {\n      if (day.weekday === firstWeekday || timed) {\n        handler.reset();\n      }\n\n      var dayStart = getTimestampIdentifier(day);\n\n      var visuals = _getVisuals(dayEvents, dayStart);\n\n      visuals.forEach(function (visual) {\n        var _ref3 = timed ? getRange(visual.event) : getDayRange(visual.event),\n            _ref4 = _slicedToArray(_ref3, 2),\n            start = _ref4[0],\n            end = _ref4[1];\n\n        if (handler.groups.length > 0 && !hasOverlap(start, end, handler.min, handler.max, timed)) {\n          setColumnCount(handler.groups);\n          handler.reset();\n        }\n\n        var targetGroup = getOpenGroup(handler.groups, start, end, timed);\n\n        if (targetGroup === -1) {\n          targetGroup = handler.groups.length;\n          handler.groups.push({\n            start: start,\n            end: end,\n            visuals: []\n          });\n        }\n\n        var target = handler.groups[targetGroup];\n        target.visuals.push(visual);\n        target.start = Math.min(target.start, start);\n        target.end = Math.max(target.end, end);\n        visual.column = targetGroup;\n\n        if (handler.min === -1) {\n          handler.min = start;\n          handler.max = end;\n        } else {\n          handler.min = Math.min(handler.min, start);\n          handler.max = Math.max(handler.max, end);\n        }\n      });\n      setColumnCount(handler.groups);\n      return visuals;\n    }\n  };\n  return handler;\n}",{"version":3,"sources":["/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VCalendar/modes/common.js"],"names":["getTimestampIdentifier","MILLIS_IN_DAY","getVisuals","events","minStart","visuals","map","event","columnCount","column","left","width","sort","a","b","Math","max","startTimestampIdentifier","endTimestampIdentifier","hasOverlap","s0","e0","s1","e1","exclude","setColumnCount","groups","forEach","group","groupVisual","length","getRange","getDayRange","startIdentifier","endIdentifier","getNormalizedRange","dayStart","min","getOpenGroup","start","end","timed","i","intersected","k","groupStart","groupEnd","getOverlapGroupHandler","firstWeekday","handler","reset","day","dayEvents","weekday","visual","targetGroup","push","target"],"mappings":"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","sourcesContent":["import { getTimestampIdentifier } from '../util/timestamp';\nconst MILLIS_IN_DAY = 86400000;\nexport function getVisuals(events, minStart = 0) {\n  const visuals = events.map(event => ({\n    event,\n    columnCount: 0,\n    column: 0,\n    left: 0,\n    width: 100\n  }));\n  visuals.sort((a, b) => {\n    return Math.max(minStart, a.event.startTimestampIdentifier) - Math.max(minStart, b.event.startTimestampIdentifier) || b.event.endTimestampIdentifier - a.event.endTimestampIdentifier;\n  });\n  return visuals;\n}\nexport function hasOverlap(s0, e0, s1, e1, exclude = true) {\n  return exclude ? !(s0 >= e1 || e0 <= s1) : !(s0 > e1 || e0 < s1);\n}\nexport function setColumnCount(groups) {\n  groups.forEach(group => {\n    group.visuals.forEach(groupVisual => {\n      groupVisual.columnCount = groups.length;\n    });\n  });\n}\nexport function getRange(event) {\n  return [event.startTimestampIdentifier, event.endTimestampIdentifier];\n}\nexport function getDayRange(event) {\n  return [event.startIdentifier, event.endIdentifier];\n}\nexport function getNormalizedRange(event, dayStart) {\n  return [Math.max(dayStart, event.startTimestampIdentifier), Math.min(dayStart + MILLIS_IN_DAY, event.endTimestampIdentifier)];\n}\nexport function getOpenGroup(groups, start, end, timed) {\n  for (let i = 0; i < groups.length; i++) {\n    const group = groups[i];\n    let intersected = false;\n\n    if (hasOverlap(start, end, group.start, group.end, timed)) {\n      for (let k = 0; k < group.visuals.length; k++) {\n        const groupVisual = group.visuals[k];\n        const [groupStart, groupEnd] = timed ? getRange(groupVisual.event) : getDayRange(groupVisual.event);\n\n        if (hasOverlap(start, end, groupStart, groupEnd, timed)) {\n          intersected = true;\n          break;\n        }\n      }\n    }\n\n    if (!intersected) {\n      return i;\n    }\n  }\n\n  return -1;\n}\nexport function getOverlapGroupHandler(firstWeekday) {\n  const handler = {\n    groups: [],\n    min: -1,\n    max: -1,\n    reset: () => {\n      handler.groups = [];\n      handler.min = handler.max = -1;\n    },\n    getVisuals: (day, dayEvents, timed) => {\n      if (day.weekday === firstWeekday || timed) {\n        handler.reset();\n      }\n\n      const dayStart = getTimestampIdentifier(day);\n      const visuals = getVisuals(dayEvents, dayStart);\n      visuals.forEach(visual => {\n        const [start, end] = timed ? getRange(visual.event) : getDayRange(visual.event);\n\n        if (handler.groups.length > 0 && !hasOverlap(start, end, handler.min, handler.max, timed)) {\n          setColumnCount(handler.groups);\n          handler.reset();\n        }\n\n        let targetGroup = getOpenGroup(handler.groups, start, end, timed);\n\n        if (targetGroup === -1) {\n          targetGroup = handler.groups.length;\n          handler.groups.push({\n            start,\n            end,\n            visuals: []\n          });\n        }\n\n        const target = handler.groups[targetGroup];\n        target.visuals.push(visual);\n        target.start = Math.min(target.start, start);\n        target.end = Math.max(target.end, end);\n        visual.column = targetGroup;\n\n        if (handler.min === -1) {\n          handler.min = start;\n          handler.max = end;\n        } else {\n          handler.min = Math.min(handler.min, start);\n          handler.max = Math.max(handler.max, end);\n        }\n      });\n      setColumnCount(handler.groups);\n      return visuals;\n    }\n  };\n  return handler;\n}\n//# sourceMappingURL=common.js.map"]}]}