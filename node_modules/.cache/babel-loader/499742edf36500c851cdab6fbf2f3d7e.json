{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/mixins/bootable/index.js","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/mixins/bootable/index.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["// Utilities\nimport { removed } from \"../../util/console\"; // Types\n\nimport Vue from 'vue';\n/**\n * Bootable\n * @mixin\n *\n * Used to add lazy content functionality to components\n * Looks for change in \"isActive\" to automatically boot\n * Otherwise can be set manually\n */\n\n/* @vue/component */\n\nexport default Vue.extend().extend({\n  name: 'bootable',\n  props: {\n    eager: Boolean\n  },\n  data: function data() {\n    return {\n      isBooted: false\n    };\n  },\n  computed: {\n    hasContent: function hasContent() {\n      return this.isBooted || this.eager || this.isActive;\n    }\n  },\n  watch: {\n    isActive: function isActive() {\n      this.isBooted = true;\n    }\n  },\n  created: function created() {\n    /* istanbul ignore next */\n    if ('lazy' in this.$attrs) {\n      removed('lazy', this);\n    }\n  },\n  methods: {\n    showLazyContent: function showLazyContent(content) {\n      return this.hasContent && content ? content() : [this.$createElement()];\n    }\n  }\n});",{"version":3,"sources":["/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/mixins/bootable/index.js"],"names":["removed","Vue","extend","name","props","eager","Boolean","data","isBooted","computed","hasContent","isActive","watch","created","$attrs","methods","showLazyContent","content","$createElement"],"mappings":"AAAA;AACA,SAASA,OAAT,6B,CAA8C;;AAE9C,OAAOC,GAAP,MAAgB,KAAhB;AACA;;;;;;;;;AASA;;AAEA,eAAeA,GAAG,CAACC,MAAJ,GAAaA,MAAb,CAAoB;AACjCC,EAAAA,IAAI,EAAE,UAD2B;AAEjCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAEC;AADF,GAF0B;AAKjCC,EAAAA,IAAI,EAAE;AAAA,WAAO;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAP;AAAA,GAL2B;AAQjCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UADQ,wBACK;AACX,aAAO,KAAKF,QAAL,IAAiB,KAAKH,KAAtB,IAA+B,KAAKM,QAA3C;AACD;AAHO,GARuB;AAcjCC,EAAAA,KAAK,EAAE;AACLD,IAAAA,QADK,sBACM;AACT,WAAKH,QAAL,GAAgB,IAAhB;AACD;AAHI,GAd0B;AAqBjCK,EAAAA,OArBiC,qBAqBvB;AACR;AACA,QAAI,UAAU,KAAKC,MAAnB,EAA2B;AACzBd,MAAAA,OAAO,CAAC,MAAD,EAAS,IAAT,CAAP;AACD;AACF,GA1BgC;AA4BjCe,EAAAA,OAAO,EAAE;AACPC,IAAAA,eADO,2BACSC,OADT,EACkB;AACvB,aAAO,KAAKP,UAAL,IAAmBO,OAAnB,GAA6BA,OAAO,EAApC,GAAyC,CAAC,KAAKC,cAAL,EAAD,CAAhD;AACD;AAHM;AA5BwB,CAApB,CAAf","sourcesContent":["// Utilities\nimport { removed } from '../../util/console'; // Types\n\nimport Vue from 'vue';\n/**\n * Bootable\n * @mixin\n *\n * Used to add lazy content functionality to components\n * Looks for change in \"isActive\" to automatically boot\n * Otherwise can be set manually\n */\n\n/* @vue/component */\n\nexport default Vue.extend().extend({\n  name: 'bootable',\n  props: {\n    eager: Boolean\n  },\n  data: () => ({\n    isBooted: false\n  }),\n  computed: {\n    hasContent() {\n      return this.isBooted || this.eager || this.isActive;\n    }\n\n  },\n  watch: {\n    isActive() {\n      this.isBooted = true;\n    }\n\n  },\n\n  created() {\n    /* istanbul ignore next */\n    if ('lazy' in this.$attrs) {\n      removed('lazy', this);\n    }\n  },\n\n  methods: {\n    showLazyContent(content) {\n      return this.hasContent && content ? content() : [this.$createElement()];\n    }\n\n  }\n});\n//# sourceMappingURL=index.js.map"]}]}