{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VAppBar/VAppBar.js","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VAppBar/VAppBar.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.string.fixed\";\nimport _defineProperty from \"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Styles\nimport \"../../../src/components/VAppBar/VAppBar.sass\"; // Extensions\n\nimport VToolbar from \"../VToolbar/VToolbar\"; // Directives\n\nimport Scroll from \"../../directives/scroll\"; // Mixins\n\nimport Applicationable from \"../../mixins/applicationable\";\nimport Scrollable from \"../../mixins/scrollable\";\nimport SSRBootable from \"../../mixins/ssr-bootable\";\nimport Toggleable from \"../../mixins/toggleable\"; // Utilities\n\nimport { convertToUnit } from \"../../util/helpers\";\nimport mixins from \"../../util/mixins\";\nvar baseMixins = mixins(VToolbar, Scrollable, SSRBootable, Toggleable, Applicationable('top', ['clippedLeft', 'clippedRight', 'computedHeight', 'invertedScroll', 'isExtended', 'isProminent', 'value']));\n/* @vue/component */\n\nexport default baseMixins.extend({\n  name: 'v-app-bar',\n  directives: {\n    Scroll: Scroll\n  },\n  props: {\n    clippedLeft: Boolean,\n    clippedRight: Boolean,\n    collapseOnScroll: Boolean,\n    elevateOnScroll: Boolean,\n    fadeImgOnScroll: Boolean,\n    hideOnScroll: Boolean,\n    invertedScroll: Boolean,\n    scrollOffScreen: Boolean,\n    shrinkOnScroll: Boolean,\n    value: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data: function data() {\n    return {\n      isActive: this.value\n    };\n  },\n  computed: {\n    applicationProperty: function applicationProperty() {\n      return !this.bottom ? 'top' : 'bottom';\n    },\n    canScroll: function canScroll() {\n      return Scrollable.options.computed.canScroll.call(this) && (this.invertedScroll || this.elevateOnScroll || this.hideOnScroll || this.collapseOnScroll || this.isBooted || // If falsey, user has provided an\n      // explicit value which should\n      // overwrite anything we do\n      !this.value);\n    },\n    classes: function classes() {\n      return _objectSpread({}, VToolbar.options.computed.classes.call(this), {\n        'v-toolbar--collapse': this.collapse || this.collapseOnScroll,\n        'v-app-bar': true,\n        'v-app-bar--clipped': this.clippedLeft || this.clippedRight,\n        'v-app-bar--fade-img-on-scroll': this.fadeImgOnScroll,\n        'v-app-bar--elevate-on-scroll': this.elevateOnScroll,\n        'v-app-bar--fixed': !this.absolute && (this.app || this.fixed),\n        'v-app-bar--hide-shadow': this.hideShadow,\n        'v-app-bar--is-scrolled': this.currentScroll > 0,\n        'v-app-bar--shrink-on-scroll': this.shrinkOnScroll\n      });\n    },\n    computedContentHeight: function computedContentHeight() {\n      if (!this.shrinkOnScroll) return VToolbar.options.computed.computedContentHeight.call(this);\n      var height = this.computedOriginalHeight;\n      var min = this.dense ? 48 : 56;\n      var max = height;\n      var difference = max - min;\n      var iteration = difference / this.computedScrollThreshold;\n      var offset = this.currentScroll * iteration;\n      return Math.max(min, max - offset);\n    },\n    computedFontSize: function computedFontSize() {\n      if (!this.isProminent) return undefined;\n      var max = this.dense ? 96 : 128;\n      var difference = max - this.computedContentHeight;\n      var increment = 0.00347; // 1.5rem to a minimum of 1.25rem\n\n      return Number((1.50 - difference * increment).toFixed(2));\n    },\n    computedLeft: function computedLeft() {\n      if (!this.app || this.clippedLeft) return 0;\n      return this.$vuetify.application.left;\n    },\n    computedMarginTop: function computedMarginTop() {\n      if (!this.app) return 0;\n      return this.$vuetify.application.bar;\n    },\n    computedOpacity: function computedOpacity() {\n      if (!this.fadeImgOnScroll) return undefined;\n      var opacity = Math.max((this.computedScrollThreshold - this.currentScroll) / this.computedScrollThreshold, 0);\n      return Number(parseFloat(opacity).toFixed(2));\n    },\n    computedOriginalHeight: function computedOriginalHeight() {\n      var height = VToolbar.options.computed.computedContentHeight.call(this);\n      if (this.isExtended) height += parseInt(this.extensionHeight);\n      return height;\n    },\n    computedRight: function computedRight() {\n      if (!this.app || this.clippedRight) return 0;\n      return this.$vuetify.application.right;\n    },\n    computedScrollThreshold: function computedScrollThreshold() {\n      if (this.scrollThreshold) return Number(this.scrollThreshold);\n      return this.computedOriginalHeight - (this.dense ? 48 : 56);\n    },\n    computedTransform: function computedTransform() {\n      if (!this.canScroll || this.elevateOnScroll && this.currentScroll === 0 && this.isActive) return 0;\n      if (this.isActive) return 0;\n      var scrollOffScreen = this.scrollOffScreen ? this.computedHeight : this.computedContentHeight;\n      return this.bottom ? scrollOffScreen : -scrollOffScreen;\n    },\n    hideShadow: function hideShadow() {\n      if (this.elevateOnScroll && this.isExtended) {\n        return this.currentScroll < this.computedScrollThreshold;\n      }\n\n      if (this.elevateOnScroll) {\n        return this.currentScroll === 0 || this.computedTransform < 0;\n      }\n\n      return (!this.isExtended || this.scrollOffScreen) && this.computedTransform !== 0;\n    },\n    isCollapsed: function isCollapsed() {\n      if (!this.collapseOnScroll) {\n        return VToolbar.options.computed.isCollapsed.call(this);\n      }\n\n      return this.currentScroll > 0;\n    },\n    isProminent: function isProminent() {\n      return VToolbar.options.computed.isProminent.call(this) || this.shrinkOnScroll;\n    },\n    styles: function styles() {\n      return _objectSpread({}, VToolbar.options.computed.styles.call(this), {\n        fontSize: convertToUnit(this.computedFontSize, 'rem'),\n        marginTop: convertToUnit(this.computedMarginTop),\n        transform: \"translateY(\".concat(convertToUnit(this.computedTransform), \")\"),\n        left: convertToUnit(this.computedLeft),\n        right: convertToUnit(this.computedRight)\n      });\n    }\n  },\n  watch: {\n    canScroll: 'onScroll',\n    computedTransform: function computedTransform() {\n      // Normally we do not want the v-app-bar\n      // to update the application top value\n      // to avoid screen jump. However, in\n      // this situation, we must so that\n      // the clipped drawer can update\n      // its top value when scrolled\n      if (!this.canScroll || !this.clippedLeft && !this.clippedRight) return;\n      this.callUpdate();\n    },\n    invertedScroll: function invertedScroll(val) {\n      this.isActive = !val || this.currentScroll !== 0;\n    }\n  },\n  created: function created() {\n    if (this.invertedScroll) this.isActive = false;\n  },\n  methods: {\n    genBackground: function genBackground() {\n      var render = VToolbar.options.methods.genBackground.call(this);\n      render.data = this._b(render.data || {}, render.tag, {\n        style: {\n          opacity: this.computedOpacity\n        }\n      });\n      return render;\n    },\n    updateApplication: function updateApplication() {\n      return this.invertedScroll ? 0 : this.computedHeight + this.computedTransform;\n    },\n    thresholdMet: function thresholdMet() {\n      if (this.invertedScroll) {\n        this.isActive = this.currentScroll > this.computedScrollThreshold;\n        return;\n      }\n\n      if (this.hideOnScroll) {\n        this.isActive = this.isScrollingUp || this.currentScroll < this.computedScrollThreshold;\n      }\n\n      if (this.currentThreshold < this.computedScrollThreshold) return;\n      this.savedScroll = this.currentScroll;\n    }\n  },\n  render: function render(h) {\n    var render = VToolbar.options.render.call(this, h);\n    render.data = render.data || {};\n\n    if (this.canScroll) {\n      render.data.directives = render.data.directives || [];\n      render.data.directives.push({\n        arg: this.scrollTarget,\n        name: 'scroll',\n        value: this.onScroll\n      });\n    }\n\n    return render;\n  }\n});",{"version":3,"sources":["/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VAppBar/VAppBar.js"],"names":["VToolbar","Scroll","Applicationable","Scrollable","SSRBootable","Toggleable","convertToUnit","mixins","baseMixins","extend","name","directives","props","clippedLeft","Boolean","clippedRight","collapseOnScroll","elevateOnScroll","fadeImgOnScroll","hideOnScroll","invertedScroll","scrollOffScreen","shrinkOnScroll","value","type","default","data","isActive","computed","applicationProperty","bottom","canScroll","options","call","isBooted","classes","collapse","absolute","app","fixed","hideShadow","currentScroll","computedContentHeight","height","computedOriginalHeight","min","dense","max","difference","iteration","computedScrollThreshold","offset","Math","computedFontSize","isProminent","undefined","increment","Number","toFixed","computedLeft","$vuetify","application","left","computedMarginTop","bar","computedOpacity","opacity","parseFloat","isExtended","parseInt","extensionHeight","computedRight","right","scrollThreshold","computedTransform","computedHeight","isCollapsed","styles","fontSize","marginTop","transform","watch","callUpdate","val","created","methods","genBackground","render","_b","tag","style","updateApplication","thresholdMet","isScrollingUp","currentThreshold","savedScroll","h","push","arg","scrollTarget","onScroll"],"mappings":"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","sourcesContent":["// Styles\nimport \"../../../src/components/VAppBar/VAppBar.sass\"; // Extensions\n\nimport VToolbar from '../VToolbar/VToolbar'; // Directives\n\nimport Scroll from '../../directives/scroll'; // Mixins\n\nimport Applicationable from '../../mixins/applicationable';\nimport Scrollable from '../../mixins/scrollable';\nimport SSRBootable from '../../mixins/ssr-bootable';\nimport Toggleable from '../../mixins/toggleable'; // Utilities\n\nimport { convertToUnit } from '../../util/helpers';\nimport mixins from '../../util/mixins';\nconst baseMixins = mixins(VToolbar, Scrollable, SSRBootable, Toggleable, Applicationable('top', ['clippedLeft', 'clippedRight', 'computedHeight', 'invertedScroll', 'isExtended', 'isProminent', 'value']));\n/* @vue/component */\n\nexport default baseMixins.extend({\n  name: 'v-app-bar',\n  directives: {\n    Scroll\n  },\n  props: {\n    clippedLeft: Boolean,\n    clippedRight: Boolean,\n    collapseOnScroll: Boolean,\n    elevateOnScroll: Boolean,\n    fadeImgOnScroll: Boolean,\n    hideOnScroll: Boolean,\n    invertedScroll: Boolean,\n    scrollOffScreen: Boolean,\n    shrinkOnScroll: Boolean,\n    value: {\n      type: Boolean,\n      default: true\n    }\n  },\n\n  data() {\n    return {\n      isActive: this.value\n    };\n  },\n\n  computed: {\n    applicationProperty() {\n      return !this.bottom ? 'top' : 'bottom';\n    },\n\n    canScroll() {\n      return Scrollable.options.computed.canScroll.call(this) && (this.invertedScroll || this.elevateOnScroll || this.hideOnScroll || this.collapseOnScroll || this.isBooted || // If falsey, user has provided an\n      // explicit value which should\n      // overwrite anything we do\n      !this.value);\n    },\n\n    classes() {\n      return { ...VToolbar.options.computed.classes.call(this),\n        'v-toolbar--collapse': this.collapse || this.collapseOnScroll,\n        'v-app-bar': true,\n        'v-app-bar--clipped': this.clippedLeft || this.clippedRight,\n        'v-app-bar--fade-img-on-scroll': this.fadeImgOnScroll,\n        'v-app-bar--elevate-on-scroll': this.elevateOnScroll,\n        'v-app-bar--fixed': !this.absolute && (this.app || this.fixed),\n        'v-app-bar--hide-shadow': this.hideShadow,\n        'v-app-bar--is-scrolled': this.currentScroll > 0,\n        'v-app-bar--shrink-on-scroll': this.shrinkOnScroll\n      };\n    },\n\n    computedContentHeight() {\n      if (!this.shrinkOnScroll) return VToolbar.options.computed.computedContentHeight.call(this);\n      const height = this.computedOriginalHeight;\n      const min = this.dense ? 48 : 56;\n      const max = height;\n      const difference = max - min;\n      const iteration = difference / this.computedScrollThreshold;\n      const offset = this.currentScroll * iteration;\n      return Math.max(min, max - offset);\n    },\n\n    computedFontSize() {\n      if (!this.isProminent) return undefined;\n      const max = this.dense ? 96 : 128;\n      const difference = max - this.computedContentHeight;\n      const increment = 0.00347; // 1.5rem to a minimum of 1.25rem\n\n      return Number((1.50 - difference * increment).toFixed(2));\n    },\n\n    computedLeft() {\n      if (!this.app || this.clippedLeft) return 0;\n      return this.$vuetify.application.left;\n    },\n\n    computedMarginTop() {\n      if (!this.app) return 0;\n      return this.$vuetify.application.bar;\n    },\n\n    computedOpacity() {\n      if (!this.fadeImgOnScroll) return undefined;\n      const opacity = Math.max((this.computedScrollThreshold - this.currentScroll) / this.computedScrollThreshold, 0);\n      return Number(parseFloat(opacity).toFixed(2));\n    },\n\n    computedOriginalHeight() {\n      let height = VToolbar.options.computed.computedContentHeight.call(this);\n      if (this.isExtended) height += parseInt(this.extensionHeight);\n      return height;\n    },\n\n    computedRight() {\n      if (!this.app || this.clippedRight) return 0;\n      return this.$vuetify.application.right;\n    },\n\n    computedScrollThreshold() {\n      if (this.scrollThreshold) return Number(this.scrollThreshold);\n      return this.computedOriginalHeight - (this.dense ? 48 : 56);\n    },\n\n    computedTransform() {\n      if (!this.canScroll || this.elevateOnScroll && this.currentScroll === 0 && this.isActive) return 0;\n      if (this.isActive) return 0;\n      const scrollOffScreen = this.scrollOffScreen ? this.computedHeight : this.computedContentHeight;\n      return this.bottom ? scrollOffScreen : -scrollOffScreen;\n    },\n\n    hideShadow() {\n      if (this.elevateOnScroll && this.isExtended) {\n        return this.currentScroll < this.computedScrollThreshold;\n      }\n\n      if (this.elevateOnScroll) {\n        return this.currentScroll === 0 || this.computedTransform < 0;\n      }\n\n      return (!this.isExtended || this.scrollOffScreen) && this.computedTransform !== 0;\n    },\n\n    isCollapsed() {\n      if (!this.collapseOnScroll) {\n        return VToolbar.options.computed.isCollapsed.call(this);\n      }\n\n      return this.currentScroll > 0;\n    },\n\n    isProminent() {\n      return VToolbar.options.computed.isProminent.call(this) || this.shrinkOnScroll;\n    },\n\n    styles() {\n      return { ...VToolbar.options.computed.styles.call(this),\n        fontSize: convertToUnit(this.computedFontSize, 'rem'),\n        marginTop: convertToUnit(this.computedMarginTop),\n        transform: `translateY(${convertToUnit(this.computedTransform)})`,\n        left: convertToUnit(this.computedLeft),\n        right: convertToUnit(this.computedRight)\n      };\n    }\n\n  },\n  watch: {\n    canScroll: 'onScroll',\n\n    computedTransform() {\n      // Normally we do not want the v-app-bar\n      // to update the application top value\n      // to avoid screen jump. However, in\n      // this situation, we must so that\n      // the clipped drawer can update\n      // its top value when scrolled\n      if (!this.canScroll || !this.clippedLeft && !this.clippedRight) return;\n      this.callUpdate();\n    },\n\n    invertedScroll(val) {\n      this.isActive = !val || this.currentScroll !== 0;\n    }\n\n  },\n\n  created() {\n    if (this.invertedScroll) this.isActive = false;\n  },\n\n  methods: {\n    genBackground() {\n      const render = VToolbar.options.methods.genBackground.call(this);\n      render.data = this._b(render.data || {}, render.tag, {\n        style: {\n          opacity: this.computedOpacity\n        }\n      });\n      return render;\n    },\n\n    updateApplication() {\n      return this.invertedScroll ? 0 : this.computedHeight + this.computedTransform;\n    },\n\n    thresholdMet() {\n      if (this.invertedScroll) {\n        this.isActive = this.currentScroll > this.computedScrollThreshold;\n        return;\n      }\n\n      if (this.hideOnScroll) {\n        this.isActive = this.isScrollingUp || this.currentScroll < this.computedScrollThreshold;\n      }\n\n      if (this.currentThreshold < this.computedScrollThreshold) return;\n      this.savedScroll = this.currentScroll;\n    }\n\n  },\n\n  render(h) {\n    const render = VToolbar.options.render.call(this, h);\n    render.data = render.data || {};\n\n    if (this.canScroll) {\n      render.data.directives = render.data.directives || [];\n      render.data.directives.push({\n        arg: this.scrollTarget,\n        name: 'scroll',\n        value: this.onScroll\n      });\n    }\n\n    return render;\n  }\n\n});\n//# sourceMappingURL=VAppBar.js.map"]}]}