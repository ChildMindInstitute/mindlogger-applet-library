{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/dayspan-vuetify-2/src/components/CalendarApp.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/dayspan-vuetify-2/src/components/CalendarApp.vue","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.string.repeat\";\nimport \"core-js/modules/es6.string.small\";\nimport \"core-js/modules/es6.array.find\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Constants, Sorts, Calendar, Day, Units, Weekday, Month, DaySpan, PatternMap, Time, Op } from \"dayspan\";\nexport default {\n  name: \"dsCalendarApp\",\n  props: {\n    events: {\n      type: Array\n    },\n    navDrawer: {\n      type: Boolean,\n      default: false\n    },\n    calendar: {\n      type: Calendar,\n      default: function _default() {\n        return Calendar.months();\n      }\n    },\n    readOnly: {\n      type: Boolean,\n      default: false\n    },\n    types: {\n      type: Array,\n      default: function _default() {\n        return this.$dsDefaults().types;\n      }\n    },\n    allowsAddToday: {\n      type: Boolean,\n      default: function _default() {\n        return this.$dsDefaults().allowsAddToday;\n      }\n    },\n    formats: {\n      validate: function validate(x) {\n        return this.$dsValidate(x, \"formats\");\n      },\n      default: function _default() {\n        return this.$dsDefaults().formats;\n      }\n    },\n    labels: {\n      validate: function validate(x) {\n        return this.$dsValidate(x, \"labels\");\n      },\n      default: function _default() {\n        return this.$dsDefaults().labels;\n      }\n    },\n    styles: {\n      validate: function validate(x) {\n        return this.$dsValidate(x, \"styles\");\n      },\n      default: function _default() {\n        return this.$dsDefaults().styles;\n      }\n    },\n    optionsDialog: {\n      validate: function validate(x) {\n        return this.$dsValidate(x, \"optionsDialog\");\n      },\n      default: function _default() {\n        return this.$dsDefaults().optionsDialog;\n      }\n    },\n    promptDialog: {\n      validate: function validate(x) {\n        return this.$dsValidate(x, \"promptDialog\");\n      },\n      default: function _default() {\n        return this.$dsDefaults().promptDialog;\n      }\n    }\n  },\n  data: function data(vm) {\n    return {\n      drawer: false,\n      optionsVisible: false,\n      options: [],\n      promptVisible: false,\n      promptQuestion: \"\",\n      promptCallback: null\n    };\n  },\n  watch: {\n    navDrawer: function navDrawer(val) {\n      this.drawer = val;\n    },\n    events: \"applyEvents\",\n    calendar: \"applyEvents\"\n  },\n  computed: {\n    currentType: {\n      get: function get() {\n        var _this = this;\n\n        return this.types.find(function (type) {\n          return type.type === _this.calendar.type && type.size === _this.calendar.size;\n        }) || this.types[0];\n      },\n      set: function set(type) {\n        this.rebuild(undefined, true, type);\n      }\n    },\n    summary: function summary() {\n      var small = this.$vuetify.breakpoint.xs;\n\n      if (small) {\n        return this.calendar.start.format(this.formats.xs);\n      }\n\n      var large = this.$vuetify.breakpoint.mdAndUp;\n      return this.calendar.summary(false, !large, false, !large);\n    },\n    todayDate: function todayDate() {\n      return this.$dayspan.today.format(this.formats.today);\n    },\n    nextLabel: function nextLabel() {\n      return this.labels.next(this.currentType);\n    },\n    prevLabel: function prevLabel() {\n      return this.labels.prev(this.currentType);\n    },\n    toolbarStyle: function toolbarStyle() {\n      var large = this.$vuetify.breakpoint.lgAndUp;\n      return large ? this.styles.toolbar.large : this.styles.toolbar.small;\n    },\n    hasCreatePopover: function hasCreatePopover() {\n      return !!this.$scopedSlots.eventCreatePopover;\n    },\n    canAddDay: function canAddDay() {\n      return this.$dayspan.features.addDay && !this.readOnly && !this.$dayspan.readOnly;\n    },\n    canAddTime: function canAddTime() {\n      return this.$dayspan.features.addTime && !this.readOnly && !this.$dayspan.readOnly;\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    if (!this.$dayspan.promptOpen) {\n      this.$dayspan.promptOpen = function (question, callback) {\n        _this2.promptVisible = false;\n        _this2.promptQuestion = question;\n        _this2.promptCallback = callback;\n        _this2.promptVisible = true;\n      };\n    }\n  },\n  methods: {\n    setState: function setState(state) {\n      state.eventSorter = state.listTimes ? Sorts.List([Sorts.FullDay, Sorts.Start]) : Sorts.Start;\n      this.calendar.set(state);\n      this.triggerChange();\n    },\n    applyEvents: function applyEvents() {\n      if (this.events) {\n        this.calendar.removeEvents();\n        this.calendar.addEvents(this.events);\n      }\n    },\n    isType: function isType(type, aroundDay) {\n      var cal = this.calendar;\n      return cal.type === type.type && cal.size === type.size && (!aroundDay || cal.span.matchesDay(aroundDay));\n    },\n    rebuild: function rebuild(aroundDay, force, forceType) {\n      var type = forceType || this.currentType || this.types[2];\n\n      if (this.isType(type, aroundDay) && !force) {\n        return;\n      }\n\n      var input = {\n        type: type.type,\n        size: type.size,\n        around: aroundDay,\n        eventsOutside: true,\n        preferToday: false,\n        listTimes: type.listTimes,\n        updateRows: type.updateRows,\n        updateColumns: type.listTimes,\n        fill: !type.listTimes,\n        otherwiseFocus: type.focus,\n        repeatCovers: type.repeat\n      };\n      this.setState(input);\n    },\n    next: function next() {\n      this.calendar.unselect().next();\n      this.triggerChange();\n    },\n    prev: function prev() {\n      this.calendar.unselect().prev();\n      this.triggerChange();\n    },\n    setToday: function setToday() {\n      this.rebuild(this.$dayspan.today);\n    },\n    viewDay: function viewDay(day) {\n      this.rebuild(day, false, this.types[0]);\n    },\n    edit: function edit(calendarEvent) {\n      var eventDialog = this.$refs.eventDialog;\n      eventDialog.edit(calendarEvent);\n    },\n    editPlaceholder: function editPlaceholder(createEdit) {\n      var placeholder = createEdit.calendarEvent;\n      var details = createEdit.details;\n      var eventDialog = this.$refs.eventDialog;\n      var calendar = this.$refs.calendar;\n      eventDialog.addPlaceholder(placeholder, details);\n      eventDialog.$once(\"close\", calendar.clearPlaceholder);\n    },\n    add: function add(day) {\n      if (!this.canAddDay) {\n        return;\n      }\n\n      var eventDialog = this.$refs.eventDialog;\n      var calendar = this.$refs.calendar;\n      var useDialog = !this.hasCreatePopover;\n      calendar.addPlaceholder(day, true, useDialog);\n\n      if (useDialog) {\n        eventDialog.add(day);\n        eventDialog.$once(\"close\", calendar.clearPlaceholder);\n      }\n    },\n    addAt: function addAt(dayHour) {\n      if (!this.canAddTime) {\n        return;\n      }\n\n      var eventDialog = this.$refs.eventDialog;\n      var calendar = this.$refs.calendar;\n      var useDialog = !this.hasCreatePopover;\n      var at = dayHour.day.withHour(dayHour.hour);\n      calendar.addPlaceholder(at, false, useDialog);\n\n      if (useDialog) {\n        eventDialog.addAt(dayHour.day, dayHour.hour);\n        eventDialog.$once(\"close\", calendar.clearPlaceholder);\n      }\n    },\n    addToday: function addToday() {\n      if (!this.canAddDay) {\n        return;\n      }\n\n      var eventDialog = this.$refs.eventDialog;\n      var calendar = this.$refs.calendar;\n      var useDialog = !this.hasCreatePopover || !calendar;\n      var day = this.$dayspan.today;\n\n      if (!this.calendar.filled.matchesDay(day)) {\n        var first = this.calendar.days[0];\n        var last = this.calendar.days[this.calendar.days.length - 1];\n        var firstDistance = Math.abs(first.currentOffset);\n        var lastDistance = Math.abs(last.currentOffset);\n        day = firstDistance < lastDistance ? first : last;\n      }\n\n      calendar && calendar.addPlaceholder(day, true, useDialog);\n\n      if (useDialog) {\n        eventDialog.add(day);\n        calendar && eventDialog.$once(\"close\", calendar.clearPlaceholder);\n      }\n    },\n    handleAdd: function handleAdd(addEvent) {\n      var eventDialog = this.$refs.eventDialog;\n      var calendar = this.$refs.calendar;\n      addEvent.handled = true;\n\n      if (!this.hasCreatePopover) {\n        if (addEvent.placeholder.fullDay) {\n          eventDialog.add(addEvent.span.start, addEvent.span.days(Op.UP));\n        } else {\n          eventDialog.addSpan(addEvent.span);\n        }\n\n        eventDialog.$once(\"close\", addEvent.clearPlaceholder);\n      } else {\n        calendar.placeholderForCreate = true;\n      }\n    },\n    handleMove: function handleMove(moveEvent) {\n      var _this3 = this;\n\n      var calendarEvent = moveEvent.calendarEvent;\n      var target = moveEvent.target;\n      var targetStart = target.start;\n      var sourceStart = calendarEvent.time.start;\n      var schedule = calendarEvent.schedule;\n      var options = [];\n      moveEvent.handled = true;\n      var callbacks = {\n        cancel: function cancel() {\n          moveEvent.clearPlaceholder();\n        },\n        single: function single() {\n          calendarEvent.move(targetStart);\n\n          _this3.eventsRefresh();\n\n          moveEvent.clearPlaceholder();\n\n          _this3.$emit(\"event-update\", calendarEvent.event);\n        },\n        instance: function instance() {\n          calendarEvent.move(targetStart);\n\n          _this3.eventsRefresh();\n\n          moveEvent.clearPlaceholder();\n\n          _this3.$emit(\"event-update\", calendarEvent.event);\n        },\n        duplicate: function duplicate() {\n          schedule.setExcluded(targetStart, false);\n\n          _this3.eventsRefresh();\n\n          moveEvent.clearPlaceholder();\n\n          _this3.$emit(\"event-update\", calendarEvent.event);\n        },\n        all: function all() {\n          schedule.moveTime(sourceStart.asTime(), targetStart.asTime());\n\n          _this3.eventsRefresh();\n\n          moveEvent.clearPlaceholder();\n\n          _this3.$emit(\"event-update\", calendarEvent.event);\n        }\n      };\n      options.push({\n        text: this.labels.moveCancel,\n        callback: callbacks.cancel\n      });\n\n      if (schedule.isSingleEvent()) {\n        options.push({\n          text: this.labels.moveSingleEvent,\n          callback: callbacks.single\n        });\n\n        if (this.$dayspan.features.moveDuplicate) {\n          options.push({\n            text: this.labels.moveDuplicate,\n            callback: callbacks.duplicate\n          });\n        }\n      } else {\n        if (this.$dayspan.features.moveInstance) {\n          options.push({\n            text: this.labels.moveOccurrence,\n            callback: callbacks.instance\n          });\n        }\n\n        if (this.$dayspan.features.moveDuplicate) {\n          options.push({\n            text: this.labels.moveDuplicate,\n            callback: callbacks.duplicate\n          });\n        }\n\n        if (this.$dayspan.features.moveAll && !schedule.isFullDay() && targetStart.sameDay(sourceStart)) {\n          options.push({\n            text: this.labels.moveAll,\n            callback: callbacks.all\n          });\n        }\n      }\n\n      this.options = options;\n      this.optionsVisible = true;\n    },\n    chooseOption: function chooseOption(option) {\n      if (option) {\n        option.callback();\n      }\n\n      this.optionsVisible = false;\n    },\n    choosePrompt: function choosePrompt(yes) {\n      this.promptCallback(yes);\n      this.promptVisible = false;\n    },\n    eventFinish: function eventFinish(ev) {\n      this.triggerChange();\n    },\n    eventsRefresh: function eventsRefresh() {\n      this.calendar.refreshEvents();\n      this.triggerChange();\n    },\n    triggerChange: function triggerChange() {\n      this.$emit(\"change\", {\n        calendar: this.calendar\n      });\n    }\n  }\n};",{"version":3,"sources":["CalendarApp.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"ds-expand ds-calendar-app\">\r\n    <v-navigation-drawer fixed app v-model=\"drawer\" :clipped=\"$vuetify.breakpoint.lgAndUp\">\r\n      <slot name=\"drawerTop\"></slot>\r\n\r\n      <slot name=\"drawerPicker\" :calendar=\"calendar\" :picked=\"rebuild\">\r\n        <div class=\"pa-3\" v-if=\"calendar\">\r\n          <ds-day-picker :span=\"calendar.span\" @picked=\"rebuild\"></ds-day-picker>\r\n        </div>\r\n      </slot>\r\n\r\n      <slot name=\"drawerBottom\"></slot>\r\n    </v-navigation-drawer>\r\n\r\n    <v-app-bar\r\n      app\r\n      flat\r\n      fixed\r\n      class=\"ds-app-calendar-toolbar\"\r\n      color=\"white\"\r\n      :clipped-left=\"$vuetify.breakpoint.lgAndUp\"\r\n    >\r\n      <v-toolbar-title class=\"ml-0\" :style=\"toolbarStyle\">\r\n        <!--      <v-toolbar-side-icon @click.stop=\"drawer = !drawer\"></v-toolbar-side-icon>-->\r\n        <slot name=\"drawerButton\">\r\n          <v-btn fab small icon @click.stop=\"drawer = !drawer\">\r\n            <v-icon>mdi-menu</v-icon>\r\n          </v-btn>\r\n        </slot>\r\n        <span class=\"hidden-sm-and-down\">\r\n          <slot name=\"title\" :calendar=\"calendar\"></slot>\r\n        </span>\r\n      </v-toolbar-title>\r\n\r\n      <slot name=\"today\" v-bind=\"{setToday, todayDate, calendar}\">\r\n        <v-tooltip bottom>\r\n          <template v-slot:activator=\"{ on }\">\r\n            <v-btn\r\n              v-on=\"on\"\r\n              class=\"ds-skinny-button\"\r\n              depressed\r\n              :icon=\"$vuetify.breakpoint.smAndDown\"\r\n              @click=\"setToday\"\r\n            >\r\n              <span v-if=\"$vuetify.breakpoint.mdAndUp\">{{ labels.today }}</span>\r\n              <v-icon v-else>{{ labels.todayIcon }}</v-icon>\r\n            </v-btn>\r\n          </template>\r\n          <span>{{ todayDate }}</span>\r\n        </v-tooltip>\r\n      </slot>\r\n\r\n      <slot name=\"prev\" v-bind=\"{prev, prevLabel, calendar}\">\r\n        <v-tooltip bottom>\r\n          <template v-slot:activator=\"{ on }\">\r\n            <v-btn\r\n              v-on=\"on\"\r\n              icon\r\n              depressed\r\n              class=\"ds-light-forecolor ds-skinny-button\"\r\n              @click=\"prev\"\r\n            >\r\n              <v-icon>keyboard_arrow_left</v-icon>\r\n            </v-btn>\r\n          </template>\r\n          <span>{{ prevLabel }}</span>\r\n        </v-tooltip>\r\n      </slot>\r\n\r\n      <slot name=\"next\" v-bind=\"{next, nextLabel, calendar}\">\r\n        <v-tooltip bottom>\r\n          <template v-slot:activator=\"{ on }\">\r\n            <v-btn\r\n              v-on=\"on\"\r\n              icon\r\n              depressed\r\n              class=\"ds-light-forecolor ds-skinny-button\"\r\n              @click=\"next\"\r\n            >\r\n              <v-icon>keyboard_arrow_right</v-icon>\r\n            </v-btn>\r\n          </template>\r\n          <span>{{ nextLabel }}</span>\r\n        </v-tooltip>\r\n      </slot>\r\n\r\n      <slot name=\"summary\" v-bind=\"{summary, calendar}\">\r\n        <h1 class=\"title ds-light-forecolor\">{{ summary }}</h1>\r\n      </slot>\r\n\r\n      <v-spacer></v-spacer>\r\n\r\n      <slot name=\"view\" v-bind=\"{currentType, types}\">\r\n        <v-menu>\r\n          <template v-slot:activator=\"{ on }\">\r\n            <v-btn text v-on=\"on\">\r\n              {{ currentType.label }}\r\n              <v-icon>arrow_drop_down</v-icon>\r\n            </v-btn>\r\n          </template>\r\n          <v-list>\r\n            <v-list-item v-for=\"type in types\" :key=\"type.id\" @click=\"currentType = type\">\r\n              <v-list-item-content>\r\n                <v-list-item-title>{{ type.label }}</v-list-item-title>\r\n              </v-list-item-content>\r\n              <v-list-item-action>{{ type.shortcut }}</v-list-item-action>\r\n            </v-list-item>\r\n          </v-list>\r\n        </v-menu>\r\n      </slot>\r\n\r\n      <slot name=\"menuRight\"></slot>\r\n    </v-app-bar>\r\n    <v-content class=\"ds-expand\">\r\n      <v-container fluid fill-height class=\"ds-calendar-container\">\r\n        <ds-gestures @swipeleft=\"next\" @swiperight=\"prev\">\r\n          <div v-if=\"currentType.schedule\" class=\"ds-expand\">\r\n            <slot\r\n              name=\"calendarAppAgenda\"\r\n              v-bind=\"{$scopedSlots, $listeners, calendar, add, edit, viewDay}\"\r\n            >\r\n              <ds-agenda\r\n                v-bind=\"{$scopedSlots}\"\r\n                v-on=\"$listeners\"\r\n                :read-only=\"readOnly\"\r\n                :calendar=\"calendar\"\r\n                @add=\"add\"\r\n                @edit=\"edit\"\r\n                @view-day=\"viewDay\"\r\n              ></ds-agenda>\r\n            </slot>\r\n          </div>\r\n\r\n          <div v-else class=\"ds-expand\">\r\n            <slot\r\n              name=\"calendarAppCalendar\"\r\n              v-bind=\"{$scopedSlots, $listeners, calendar, add, addAt, edit, viewDay, handleAdd, handleMove}\"\r\n            >\r\n              <ds-calendar\r\n                ref=\"calendar\"\r\n                v-bind=\"{$scopedSlots}\"\r\n                v-on=\"$listeners\"\r\n                :calendar=\"calendar\"\r\n                :read-only=\"readOnly\"\r\n                @add=\"add\"\r\n                @add-at=\"addAt\"\r\n                @edit=\"edit\"\r\n                @view-day=\"viewDay\"\r\n                @added=\"handleAdd\"\r\n                @moved=\"handleMove\"\r\n              ></ds-calendar>\r\n            </slot>\r\n          </div>\r\n        </ds-gestures>\r\n\r\n        <slot\r\n          name=\"calendarAppEventDialog\"\r\n          v-bind=\"{$scopedSlots, $listeners, calendar, eventFinish}\"\r\n        >\r\n          <ds-event-dialog\r\n            ref=\"eventDialog\"\r\n            v-bind=\"{$scopedSlots}\"\r\n            v-on=\"$listeners\"\r\n            :calendar=\"calendar\"\r\n            :read-only=\"readOnly\"\r\n            @saved=\"eventFinish\"\r\n            @actioned=\"eventFinish\"\r\n          ></ds-event-dialog>\r\n        </slot>\r\n\r\n        <slot\r\n          name=\"calendarAppOptions\"\r\n          v-bind=\"{optionsVisible, optionsDialog, options, chooseOption}\"\r\n        >\r\n          <v-dialog\r\n            ref=\"optionsDialog\"\r\n            v-model=\"optionsVisible\"\r\n            v-bind=\"optionsDialog\"\r\n            :fullscreen=\"$dayspan.fullscreenDialogs\"\r\n          >\r\n            <v-list>\r\n              <template v-for=\"option in options\">\r\n                <v-list-item :key=\"option.text\" @click=\"chooseOption( option )\">{{ option.text }}</v-list-item>\r\n              </template>\r\n            </v-list>\r\n          </v-dialog>\r\n        </slot>\r\n\r\n        <slot\r\n          name=\"calendarAppPrompt\"\r\n          v-bind=\"{promptVisible, promptDialog, promptQuestion, choosePrompt}\"\r\n        >\r\n          <v-dialog ref=\"promptDialog\" v-model=\"promptVisible\" v-bind=\"promptDialog\">\r\n            <v-card>\r\n              <v-card-title>{{ promptQuestion }}</v-card-title>\r\n              <v-card-actions>\r\n                <v-btn color=\"primary\" text @click=\"choosePrompt( true )\">{{ labels.promptConfirm }}</v-btn>\r\n                <v-spacer></v-spacer>\r\n                <v-btn\r\n                  color=\"secondary\"\r\n                  text\r\n                  @click=\"choosePrompt( false )\"\r\n                >{{ labels.promptCancel }}</v-btn>\r\n              </v-card-actions>\r\n            </v-card>\r\n          </v-dialog>\r\n        </slot>\r\n\r\n        <slot name=\"calendarAppAdd\" v-bind=\"{allowsAddToday, addToday}\">\r\n          <v-fab-transition v-if=\"!readOnly\">\r\n            <v-btn\r\n              class=\"ds-add-event-today\"\r\n              color=\"primary\"\r\n              fixed\r\n              bottom\r\n              right\r\n              fab\r\n              v-model=\"allowsAddToday\"\r\n              @click=\"addToday\"\r\n            >\r\n              <v-icon>add</v-icon>\r\n            </v-btn>\r\n          </v-fab-transition>\r\n        </slot>\r\n\r\n        <slot name=\"containerInside\" v-bind=\"{events, calendar}\"></slot>\r\n      </v-container>\r\n    </v-content>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  Constants,\r\n  Sorts,\r\n  Calendar,\r\n  Day,\r\n  Units,\r\n  Weekday,\r\n  Month,\r\n  DaySpan,\r\n  PatternMap,\r\n  Time,\r\n  Op\r\n} from \"dayspan\";\r\n\r\nexport default {\r\n  name: \"dsCalendarApp\",\r\n\r\n  props: {\r\n    events: {\r\n      type: Array\r\n    },\r\n    navDrawer: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    calendar: {\r\n      type: Calendar,\r\n      default() {\r\n        return Calendar.months();\r\n      }\r\n    },\r\n    readOnly: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    types: {\r\n      type: Array,\r\n      default() {\r\n        return this.$dsDefaults().types;\r\n      }\r\n    },\r\n    allowsAddToday: {\r\n      type: Boolean,\r\n      default() {\r\n        return this.$dsDefaults().allowsAddToday;\r\n      }\r\n    },\r\n    formats: {\r\n      validate(x) {\r\n        return this.$dsValidate(x, \"formats\");\r\n      },\r\n      default() {\r\n        return this.$dsDefaults().formats;\r\n      }\r\n    },\r\n    labels: {\r\n      validate(x) {\r\n        return this.$dsValidate(x, \"labels\");\r\n      },\r\n      default() {\r\n        return this.$dsDefaults().labels;\r\n      }\r\n    },\r\n    styles: {\r\n      validate(x) {\r\n        return this.$dsValidate(x, \"styles\");\r\n      },\r\n      default() {\r\n        return this.$dsDefaults().styles;\r\n      }\r\n    },\r\n    optionsDialog: {\r\n      validate(x) {\r\n        return this.$dsValidate(x, \"optionsDialog\");\r\n      },\r\n      default() {\r\n        return this.$dsDefaults().optionsDialog;\r\n      }\r\n    },\r\n    promptDialog: {\r\n      validate(x) {\r\n        return this.$dsValidate(x, \"promptDialog\");\r\n      },\r\n      default() {\r\n        return this.$dsDefaults().promptDialog;\r\n      }\r\n    }\r\n  },\r\n\r\n  data: vm => ({\r\n    drawer: false,\r\n    optionsVisible: false,\r\n    options: [],\r\n    promptVisible: false,\r\n    promptQuestion: \"\",\r\n    promptCallback: null\r\n  }),\r\n\r\n  watch: {\r\n    navDrawer: function(val) {\r\n      this.drawer = val;\r\n    },\r\n    events: \"applyEvents\",\r\n    calendar: \"applyEvents\"\r\n  },\r\n\r\n  computed: {\r\n    currentType: {\r\n      get() {\r\n        return (\r\n          this.types.find(\r\n            type =>\r\n              type.type === this.calendar.type &&\r\n              type.size === this.calendar.size\r\n          ) || this.types[0]\r\n        );\r\n      },\r\n      set(type) {\r\n        this.rebuild(undefined, true, type);\r\n      }\r\n    },\r\n\r\n    summary() {\r\n      let small = this.$vuetify.breakpoint.xs;\r\n\r\n      if (small) {\r\n        return this.calendar.start.format(this.formats.xs);\r\n      }\r\n\r\n      let large = this.$vuetify.breakpoint.mdAndUp;\r\n\r\n      return this.calendar.summary(false, !large, false, !large);\r\n    },\r\n\r\n    todayDate() {\r\n      return this.$dayspan.today.format(this.formats.today);\r\n    },\r\n\r\n    nextLabel() {\r\n      return this.labels.next(this.currentType);\r\n    },\r\n\r\n    prevLabel() {\r\n      return this.labels.prev(this.currentType);\r\n    },\r\n\r\n    toolbarStyle() {\r\n      let large = this.$vuetify.breakpoint.lgAndUp;\r\n\r\n      return large ? this.styles.toolbar.large : this.styles.toolbar.small;\r\n    },\r\n\r\n    hasCreatePopover() {\r\n      return !!this.$scopedSlots.eventCreatePopover;\r\n    },\r\n\r\n    canAddDay() {\r\n      return (\r\n        this.$dayspan.features.addDay &&\r\n        !this.readOnly &&\r\n        !this.$dayspan.readOnly\r\n      );\r\n    },\r\n\r\n    canAddTime() {\r\n      return (\r\n        this.$dayspan.features.addTime &&\r\n        !this.readOnly &&\r\n        !this.$dayspan.readOnly\r\n      );\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    if (!this.$dayspan.promptOpen) {\r\n      this.$dayspan.promptOpen = (question, callback) => {\r\n        this.promptVisible = false;\r\n        this.promptQuestion = question;\r\n        this.promptCallback = callback;\r\n        this.promptVisible = true;\r\n      };\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    setState(state) {\r\n      state.eventSorter = state.listTimes\r\n        ? Sorts.List([Sorts.FullDay, Sorts.Start])\r\n        : Sorts.Start;\r\n\r\n      this.calendar.set(state);\r\n\r\n      this.triggerChange();\r\n    },\r\n\r\n    applyEvents() {\r\n      if (this.events) {\r\n        this.calendar.removeEvents();\r\n        this.calendar.addEvents(this.events);\r\n      }\r\n    },\r\n\r\n    isType(type, aroundDay) {\r\n      let cal = this.calendar;\r\n\r\n      return (\r\n        cal.type === type.type &&\r\n        cal.size === type.size &&\r\n        (!aroundDay || cal.span.matchesDay(aroundDay))\r\n      );\r\n    },\r\n\r\n    rebuild(aroundDay, force, forceType) {\r\n      let type = forceType || this.currentType || this.types[2];\r\n\r\n      if (this.isType(type, aroundDay) && !force) {\r\n        return;\r\n      }\r\n\r\n      let input = {\r\n        type: type.type,\r\n        size: type.size,\r\n        around: aroundDay,\r\n        eventsOutside: true,\r\n        preferToday: false,\r\n        listTimes: type.listTimes,\r\n        updateRows: type.updateRows,\r\n        updateColumns: type.listTimes,\r\n        fill: !type.listTimes,\r\n        otherwiseFocus: type.focus,\r\n        repeatCovers: type.repeat\r\n      };\r\n\r\n      this.setState(input);\r\n    },\r\n\r\n    next() {\r\n      this.calendar.unselect().next();\r\n\r\n      this.triggerChange();\r\n    },\r\n\r\n    prev() {\r\n      this.calendar.unselect().prev();\r\n\r\n      this.triggerChange();\r\n    },\r\n\r\n    setToday() {\r\n      this.rebuild(this.$dayspan.today);\r\n    },\r\n\r\n    viewDay(day) {\r\n      this.rebuild(day, false, this.types[0]);\r\n    },\r\n\r\n    edit(calendarEvent) {\r\n      let eventDialog = this.$refs.eventDialog;\r\n\r\n      eventDialog.edit(calendarEvent);\r\n    },\r\n\r\n    editPlaceholder(createEdit) {\r\n      let placeholder = createEdit.calendarEvent;\r\n      let details = createEdit.details;\r\n      let eventDialog = this.$refs.eventDialog;\r\n      let calendar = this.$refs.calendar;\r\n\r\n      eventDialog.addPlaceholder(placeholder, details);\r\n      eventDialog.$once(\"close\", calendar.clearPlaceholder);\r\n    },\r\n\r\n    add(day) {\r\n      if (!this.canAddDay) {\r\n        return;\r\n      }\r\n\r\n      let eventDialog = this.$refs.eventDialog;\r\n      let calendar = this.$refs.calendar;\r\n      let useDialog = !this.hasCreatePopover;\r\n\r\n      calendar.addPlaceholder(day, true, useDialog);\r\n\r\n      if (useDialog) {\r\n        eventDialog.add(day);\r\n        eventDialog.$once(\"close\", calendar.clearPlaceholder);\r\n      }\r\n    },\r\n\r\n    addAt(dayHour) {\r\n      if (!this.canAddTime) {\r\n        return;\r\n      }\r\n\r\n      let eventDialog = this.$refs.eventDialog;\r\n      let calendar = this.$refs.calendar;\r\n      let useDialog = !this.hasCreatePopover;\r\n      let at = dayHour.day.withHour(dayHour.hour);\r\n\r\n      calendar.addPlaceholder(at, false, useDialog);\r\n\r\n      if (useDialog) {\r\n        eventDialog.addAt(dayHour.day, dayHour.hour);\r\n        eventDialog.$once(\"close\", calendar.clearPlaceholder);\r\n      }\r\n    },\r\n\r\n    addToday() {\r\n      if (!this.canAddDay) {\r\n        return;\r\n      }\r\n\r\n      let eventDialog = this.$refs.eventDialog;\r\n      let calendar = this.$refs.calendar;\r\n      let useDialog = !this.hasCreatePopover || !calendar;\r\n\r\n      let day = this.$dayspan.today;\r\n\r\n      if (!this.calendar.filled.matchesDay(day)) {\r\n        let first = this.calendar.days[0];\r\n        let last = this.calendar.days[this.calendar.days.length - 1];\r\n        let firstDistance = Math.abs(first.currentOffset);\r\n        let lastDistance = Math.abs(last.currentOffset);\r\n\r\n        day = firstDistance < lastDistance ? first : last;\r\n      }\r\n\r\n      calendar && calendar.addPlaceholder(day, true, useDialog);\r\n\r\n      if (useDialog) {\r\n        eventDialog.add(day);\r\n\r\n        calendar && eventDialog.$once(\"close\", calendar.clearPlaceholder);\r\n      }\r\n    },\r\n\r\n    handleAdd(addEvent) {\r\n      let eventDialog = this.$refs.eventDialog;\r\n      let calendar = this.$refs.calendar;\r\n\r\n      addEvent.handled = true;\r\n\r\n      if (!this.hasCreatePopover) {\r\n        if (addEvent.placeholder.fullDay) {\r\n          eventDialog.add(addEvent.span.start, addEvent.span.days(Op.UP));\r\n        } else {\r\n          eventDialog.addSpan(addEvent.span);\r\n        }\r\n\r\n        eventDialog.$once(\"close\", addEvent.clearPlaceholder);\r\n      } else {\r\n        calendar.placeholderForCreate = true;\r\n      }\r\n    },\r\n\r\n    handleMove(moveEvent) {\r\n      let calendarEvent = moveEvent.calendarEvent;\r\n      let target = moveEvent.target;\r\n      let targetStart = target.start;\r\n      let sourceStart = calendarEvent.time.start;\r\n      let schedule = calendarEvent.schedule;\r\n      let options = [];\r\n\r\n      moveEvent.handled = true;\r\n\r\n      let callbacks = {\r\n        cancel: () => {\r\n          moveEvent.clearPlaceholder();\r\n        },\r\n        single: () => {\r\n          calendarEvent.move(targetStart);\r\n          this.eventsRefresh();\r\n          moveEvent.clearPlaceholder();\r\n\r\n          this.$emit(\"event-update\", calendarEvent.event);\r\n        },\r\n        instance: () => {\r\n          calendarEvent.move(targetStart);\r\n          this.eventsRefresh();\r\n          moveEvent.clearPlaceholder();\r\n\r\n          this.$emit(\"event-update\", calendarEvent.event);\r\n        },\r\n        duplicate: () => {\r\n          schedule.setExcluded(targetStart, false);\r\n          this.eventsRefresh();\r\n          moveEvent.clearPlaceholder();\r\n\r\n          this.$emit(\"event-update\", calendarEvent.event);\r\n        },\r\n        all: () => {\r\n          schedule.moveTime(sourceStart.asTime(), targetStart.asTime());\r\n          this.eventsRefresh();\r\n          moveEvent.clearPlaceholder();\r\n\r\n          this.$emit(\"event-update\", calendarEvent.event);\r\n        }\r\n      };\r\n\r\n      options.push({\r\n        text: this.labels.moveCancel,\r\n        callback: callbacks.cancel\r\n      });\r\n\r\n      if (schedule.isSingleEvent()) {\r\n        options.push({\r\n          text: this.labels.moveSingleEvent,\r\n          callback: callbacks.single\r\n        });\r\n\r\n        if (this.$dayspan.features.moveDuplicate) {\r\n          options.push({\r\n            text: this.labels.moveDuplicate,\r\n            callback: callbacks.duplicate\r\n          });\r\n        }\r\n      } else {\r\n        if (this.$dayspan.features.moveInstance) {\r\n          options.push({\r\n            text: this.labels.moveOccurrence,\r\n            callback: callbacks.instance\r\n          });\r\n        }\r\n\r\n        if (this.$dayspan.features.moveDuplicate) {\r\n          options.push({\r\n            text: this.labels.moveDuplicate,\r\n            callback: callbacks.duplicate\r\n          });\r\n        }\r\n\r\n        if (\r\n          this.$dayspan.features.moveAll &&\r\n          !schedule.isFullDay() &&\r\n          targetStart.sameDay(sourceStart)\r\n        ) {\r\n          options.push({\r\n            text: this.labels.moveAll,\r\n            callback: callbacks.all\r\n          });\r\n        }\r\n      }\r\n\r\n      this.options = options;\r\n      this.optionsVisible = true;\r\n    },\r\n\r\n    chooseOption(option) {\r\n      if (option) {\r\n        option.callback();\r\n      }\r\n\r\n      this.optionsVisible = false;\r\n    },\r\n\r\n    choosePrompt(yes) {\r\n      this.promptCallback(yes);\r\n      this.promptVisible = false;\r\n    },\r\n\r\n    eventFinish(ev) {\r\n      this.triggerChange();\r\n    },\r\n\r\n    eventsRefresh() {\r\n      this.calendar.refreshEvents();\r\n\r\n      this.triggerChange();\r\n    },\r\n\r\n    triggerChange() {\r\n      this.$emit(\"change\", {\r\n        calendar: this.calendar\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.ds-app-calendar-toolbar {\r\n  .v-toolbar__content {\r\n    border-bottom: 1px solid rgb(224, 224, 224);\r\n  }\r\n}\r\n\r\n.ds-skinny-button {\r\n  margin-left: 2px !important;\r\n  margin-right: 2px !important;\r\n}\r\n\r\n.ds-expand {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.ds-calendar-container {\r\n  padding: 0px !important;\r\n  position: relative;\r\n}\r\n\r\n.v-btn--floating.ds-add-event-today {\r\n  .v-icon {\r\n    width: 24px;\r\n    height: 24px;\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"node_modules/dayspan-vuetify-2/src/components"}]}