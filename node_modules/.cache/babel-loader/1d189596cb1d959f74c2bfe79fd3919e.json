{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VAutocomplete/VAutocomplete.js","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VAutocomplete/VAutocomplete.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find\";\nimport _typeof from \"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport _defineProperty from \"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Styles\nimport \"../../../src/components/VAutocomplete/VAutocomplete.sass\"; // Extensions\n\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from \"../VSelect/VSelect\";\nimport VTextField from \"../VTextField/VTextField\"; // Utilities\n\nimport mergeData from \"../../util/mergeData\";\nimport { keyCodes, getObjectValueByPath } from \"../../util/helpers\";\n\nvar defaultMenuProps = _objectSpread({}, VSelectMenuProps, {\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false\n});\n/* @vue/component */\n\n\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true\n    },\n    autoSelectFirst: {\n      type: Boolean,\n      default: false\n    },\n    filter: {\n      type: Function,\n      default: function _default(item, queryText, itemText) {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1;\n      }\n    },\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: function _default() {\n        return defaultMenuProps;\n      }\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String,\n      default: undefined\n    }\n  },\n  data: function data() {\n    return {\n      lazySearch: this.searchInput\n    };\n  },\n  computed: {\n    classes: function classes() {\n      return _objectSpread({}, VSelect.options.computed.classes.call(this), {\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1\n      });\n    },\n    computedItems: function computedItems() {\n      return this.filteredItems;\n    },\n    selectedValues: function selectedValues() {\n      var _this = this;\n\n      return this.selectedItems.map(function (item) {\n        return _this.getValue(item);\n      });\n    },\n    hasDisplayedItems: function hasDisplayedItems() {\n      var _this2 = this;\n\n      return this.hideSelected ? this.filteredItems.some(function (item) {\n        return !_this2.hasItem(item);\n      }) : this.filteredItems.length > 0;\n    },\n    currentRange: function currentRange() {\n      if (this.selectedItem == null) return 0;\n      return String(this.getText(this.selectedItem)).length;\n    },\n    filteredItems: function filteredItems() {\n      var _this3 = this;\n\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems;\n      return this.allItems.filter(function (item) {\n        var text = _this3.getText(item); // Remove items without text to match\n\n\n        if (text == null || _typeof(text) === 'object') return false;\n        return _this3.filter(item, String(_this3.internalSearch), String(text));\n      });\n    },\n    internalSearch: {\n      get: function get() {\n        return this.lazySearch;\n      },\n      set: function set(val) {\n        this.lazySearch = val;\n        this.$emit('update:search-input', val);\n      }\n    },\n    isAnyValueAllowed: function isAnyValueAllowed() {\n      return false;\n    },\n    isDirty: function isDirty() {\n      return this.searchIsDirty || this.selectedItems.length > 0;\n    },\n    isSearching: function isSearching() {\n      return this.multiple && this.searchIsDirty || this.searchIsDirty && this.internalSearch !== this.getText(this.selectedItem);\n    },\n    menuCanShow: function menuCanShow() {\n      if (!this.isFocused) return false;\n      return this.hasDisplayedItems || !this.hideNoData;\n    },\n    $_menuProps: function $_menuProps() {\n      var props = VSelect.options.computed.$_menuProps.call(this);\n      props.contentClass = \"v-autocomplete__content \".concat(props.contentClass || '').trim();\n      return _objectSpread({}, defaultMenuProps, {}, props);\n    },\n    searchIsDirty: function searchIsDirty() {\n      return this.internalSearch != null && this.internalSearch !== '';\n    },\n    selectedItem: function selectedItem() {\n      var _this4 = this;\n\n      if (this.multiple) return null;\n      return this.selectedItems.find(function (i) {\n        return _this4.valueComparator(_this4.getValue(i), _this4.getValue(_this4.internalValue));\n      });\n    },\n    listData: function listData() {\n      var data = VSelect.options.computed.listData.call(this);\n      data.props = _objectSpread({}, data.props, {\n        items: this.virtualizedItems,\n        noFilter: this.noFilter || !this.isSearching || !this.filteredItems.length,\n        searchInput: this.internalSearch\n      });\n      return data;\n    }\n  },\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n    isFocused: function isFocused(val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy);\n        this.$refs.input && this.$refs.input.select();\n      } else {\n        document.removeEventListener('copy', this.onCopy);\n        this.updateSelf();\n      }\n    },\n    isMenuActive: function isMenuActive(val) {\n      if (val || !this.hasSlot) return;\n      this.lazySearch = undefined;\n    },\n    items: function items(val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (!(oldVal && oldVal.length) && this.hideNoData && this.isFocused && !this.isMenuActive && val.length) this.activateMenu();\n    },\n    searchInput: function searchInput(val) {\n      this.lazySearch = val;\n    },\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf'\n  },\n  created: function created() {\n    this.setSearch();\n  },\n  methods: {\n    onFilteredItemsChanged: function onFilteredItemsChanged(val, oldVal) {\n      var _this5 = this;\n\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return;\n      this.setMenuIndex(-1);\n      this.$nextTick(function () {\n        if (!_this5.internalSearch || val.length !== 1 && !_this5.autoSelectFirst) return;\n\n        _this5.$refs.menu.getTiles();\n\n        _this5.setMenuIndex(0);\n      });\n    },\n    onInternalSearchChanged: function onInternalSearchChanged() {\n      this.updateMenuDimensions();\n    },\n    updateMenuDimensions: function updateMenuDimensions() {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions();\n    },\n    changeSelectedIndex: function changeSelectedIndex(keyCode) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return;\n\n      if (this.multiple && keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = this.selectedItems.length - 1;\n        } else {\n          this.selectedIndex--;\n        }\n      } else if (this.multiple && keyCode === keyCodes.right) {\n        if (this.selectedIndex >= this.selectedItems.length - 1) {\n          this.selectedIndex = -1;\n        } else {\n          this.selectedIndex++;\n        }\n      } else if (keyCode === keyCodes.backspace || keyCode === keyCodes.delete) {\n        this.deleteCurrentItem();\n      }\n    },\n    deleteCurrentItem: function deleteCurrentItem() {\n      if (this.readonly) return;\n      var index = this.selectedItems.length - 1;\n\n      if (this.selectedIndex === -1 && index !== 0) {\n        this.selectedIndex = index;\n        return;\n      }\n\n      var currentItem = this.selectedItems[this.selectedIndex];\n      if (this.getDisabled(currentItem)) return;\n      var newIndex = this.selectedIndex === index ? this.selectedIndex - 1 : this.selectedItems[this.selectedIndex + 1] ? this.selectedIndex : -1;\n\n      if (newIndex === -1) {\n        this.setValue(this.multiple ? [] : undefined);\n      } else {\n        this.selectItem(currentItem);\n      }\n\n      this.selectedIndex = newIndex;\n    },\n    clearableCallback: function clearableCallback() {\n      this.internalSearch = undefined;\n      VSelect.options.methods.clearableCallback.call(this);\n    },\n    genInput: function genInput() {\n      var input = VTextField.options.methods.genInput.call(this);\n      input.data = mergeData(input.data, {\n        attrs: {\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data, 'attrs.autocomplete', 'off')\n        },\n        domProps: {\n          value: this.internalSearch\n        }\n      });\n      return input;\n    },\n    genInputSlot: function genInputSlot() {\n      var slot = VSelect.options.methods.genInputSlot.call(this);\n      slot.data.attrs.role = 'combobox';\n      return slot;\n    },\n    genSelections: function genSelections() {\n      return this.hasSlot || this.multiple ? VSelect.options.methods.genSelections.call(this) : [];\n    },\n    onClick: function onClick(e) {\n      if (this.isDisabled) return;\n      this.selectedIndex > -1 ? this.selectedIndex = -1 : this.onFocus();\n      if (!this.isAppendInner(e.target)) this.activateMenu();\n    },\n    onInput: function onInput(e) {\n      if (this.selectedIndex > -1 || !e.target) return;\n      var target = e.target;\n      var value = target.value; // If typing and menu is not currently active\n\n      if (target.value) this.activateMenu();\n      this.internalSearch = value;\n      this.badInput = target.validity && target.validity.badInput;\n    },\n    onKeyDown: function onKeyDown(e) {\n      var keyCode = e.keyCode;\n      VSelect.options.methods.onKeyDown.call(this, e); // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n\n      this.changeSelectedIndex(keyCode);\n    },\n    onSpaceDown: function onSpaceDown(e) {},\n    onTabDown: function onTabDown(e) {\n      VSelect.options.methods.onTabDown.call(this, e);\n      this.updateSelf();\n    },\n    onUpDown: function onUpDown(e) {\n      // Prevent screen from scrolling\n      e.preventDefault(); // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n\n      this.activateMenu();\n    },\n    selectItem: function selectItem(item) {\n      VSelect.options.methods.selectItem.call(this, item);\n      this.setSearch();\n    },\n    setSelectedItems: function setSelectedItems() {\n      VSelect.options.methods.setSelectedItems.call(this); // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n\n      if (!this.isFocused) this.setSearch();\n    },\n    setSearch: function setSearch() {\n      var _this6 = this;\n\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(function () {\n        if (!_this6.multiple || !_this6.internalSearch || !_this6.isMenuActive) {\n          _this6.internalSearch = !_this6.selectedItems.length || _this6.multiple || _this6.hasSlot ? null : _this6.getText(_this6.selectedItem);\n        }\n      });\n    },\n    updateSelf: function updateSelf() {\n      if (!this.searchIsDirty && !this.internalValue) return;\n\n      if (!this.valueComparator(this.internalSearch, this.getValue(this.internalValue))) {\n        this.setSearch();\n      }\n    },\n    hasItem: function hasItem(item) {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1;\n    },\n    onCopy: function onCopy(event) {\n      if (this.selectedIndex === -1) return;\n      var currentItem = this.selectedItems[this.selectedIndex];\n      var currentItemText = this.getText(currentItem);\n      event.clipboardData.setData('text/plain', currentItemText);\n      event.clipboardData.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText);\n      event.preventDefault();\n    }\n  }\n});",{"version":3,"sources":["/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VAutocomplete/VAutocomplete.js"],"names":["VSelect","defaultMenuProps","VSelectMenuProps","VTextField","mergeData","keyCodes","getObjectValueByPath","offsetY","offsetOverflow","transition","extend","name","props","allowOverflow","type","Boolean","default","autoSelectFirst","filter","Function","item","queryText","itemText","toLocaleLowerCase","indexOf","hideNoData","menuProps","options","noFilter","searchInput","String","undefined","data","lazySearch","computed","classes","call","selectedIndex","computedItems","filteredItems","selectedValues","selectedItems","map","getValue","hasDisplayedItems","hideSelected","some","hasItem","length","currentRange","selectedItem","getText","isSearching","internalSearch","allItems","text","get","set","val","$emit","isAnyValueAllowed","isDirty","searchIsDirty","multiple","menuCanShow","isFocused","$_menuProps","contentClass","trim","find","i","valueComparator","internalValue","listData","items","virtualizedItems","watch","document","addEventListener","onCopy","$refs","input","select","removeEventListener","updateSelf","isMenuActive","hasSlot","oldVal","activateMenu","created","setSearch","methods","onFilteredItemsChanged","setMenuIndex","$nextTick","menu","getTiles","onInternalSearchChanged","updateMenuDimensions","updateDimensions","changeSelectedIndex","keyCode","left","right","backspace","delete","deleteCurrentItem","readonly","index","currentItem","getDisabled","newIndex","setValue","selectItem","clearableCallback","genInput","attrs","autocomplete","domProps","value","genInputSlot","slot","role","genSelections","onClick","e","isDisabled","onFocus","isAppendInner","target","onInput","badInput","validity","onKeyDown","onSpaceDown","onTabDown","onUpDown","preventDefault","setSelectedItems","event","currentItemText","clipboardData","setData"],"mappings":"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","sourcesContent":["// Styles\nimport \"../../../src/components/VAutocomplete/VAutocomplete.sass\"; // Extensions\n\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect';\nimport VTextField from '../VTextField/VTextField'; // Utilities\n\nimport mergeData from '../../util/mergeData';\nimport { keyCodes, getObjectValueByPath } from '../../util/helpers';\nconst defaultMenuProps = { ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false\n};\n/* @vue/component */\n\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true\n    },\n    autoSelectFirst: {\n      type: Boolean,\n      default: false\n    },\n    filter: {\n      type: Function,\n      default: (item, queryText, itemText) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1;\n      }\n    },\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String,\n      default: undefined\n    }\n  },\n\n  data() {\n    return {\n      lazySearch: this.searchInput\n    };\n  },\n\n  computed: {\n    classes() {\n      return { ...VSelect.options.computed.classes.call(this),\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1\n      };\n    },\n\n    computedItems() {\n      return this.filteredItems;\n    },\n\n    selectedValues() {\n      return this.selectedItems.map(item => this.getValue(item));\n    },\n\n    hasDisplayedItems() {\n      return this.hideSelected ? this.filteredItems.some(item => !this.hasItem(item)) : this.filteredItems.length > 0;\n    },\n\n    currentRange() {\n      if (this.selectedItem == null) return 0;\n      return String(this.getText(this.selectedItem)).length;\n    },\n\n    filteredItems() {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems;\n      return this.allItems.filter(item => {\n        const text = this.getText(item); // Remove items without text to match\n\n        if (text == null || typeof text === 'object') return false;\n        return this.filter(item, String(this.internalSearch), String(text));\n      });\n    },\n\n    internalSearch: {\n      get() {\n        return this.lazySearch;\n      },\n\n      set(val) {\n        this.lazySearch = val;\n        this.$emit('update:search-input', val);\n      }\n\n    },\n\n    isAnyValueAllowed() {\n      return false;\n    },\n\n    isDirty() {\n      return this.searchIsDirty || this.selectedItems.length > 0;\n    },\n\n    isSearching() {\n      return this.multiple && this.searchIsDirty || this.searchIsDirty && this.internalSearch !== this.getText(this.selectedItem);\n    },\n\n    menuCanShow() {\n      if (!this.isFocused) return false;\n      return this.hasDisplayedItems || !this.hideNoData;\n    },\n\n    $_menuProps() {\n      const props = VSelect.options.computed.$_menuProps.call(this);\n      props.contentClass = `v-autocomplete__content ${props.contentClass || ''}`.trim();\n      return { ...defaultMenuProps,\n        ...props\n      };\n    },\n\n    searchIsDirty() {\n      return this.internalSearch != null && this.internalSearch !== '';\n    },\n\n    selectedItem() {\n      if (this.multiple) return null;\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue));\n      });\n    },\n\n    listData() {\n      const data = VSelect.options.computed.listData.call(this);\n      data.props = { ...data.props,\n        items: this.virtualizedItems,\n        noFilter: this.noFilter || !this.isSearching || !this.filteredItems.length,\n        searchInput: this.internalSearch\n      };\n      return data;\n    }\n\n  },\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n\n    isFocused(val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy);\n        this.$refs.input && this.$refs.input.select();\n      } else {\n        document.removeEventListener('copy', this.onCopy);\n        this.updateSelf();\n      }\n    },\n\n    isMenuActive(val) {\n      if (val || !this.hasSlot) return;\n      this.lazySearch = undefined;\n    },\n\n    items(val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (!(oldVal && oldVal.length) && this.hideNoData && this.isFocused && !this.isMenuActive && val.length) this.activateMenu();\n    },\n\n    searchInput(val) {\n      this.lazySearch = val;\n    },\n\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf'\n  },\n\n  created() {\n    this.setSearch();\n  },\n\n  methods: {\n    onFilteredItemsChanged(val, oldVal) {\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return;\n      this.setMenuIndex(-1);\n      this.$nextTick(() => {\n        if (!this.internalSearch || val.length !== 1 && !this.autoSelectFirst) return;\n        this.$refs.menu.getTiles();\n        this.setMenuIndex(0);\n      });\n    },\n\n    onInternalSearchChanged() {\n      this.updateMenuDimensions();\n    },\n\n    updateMenuDimensions() {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions();\n    },\n\n    changeSelectedIndex(keyCode) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return;\n\n      if (this.multiple && keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = this.selectedItems.length - 1;\n        } else {\n          this.selectedIndex--;\n        }\n      } else if (this.multiple && keyCode === keyCodes.right) {\n        if (this.selectedIndex >= this.selectedItems.length - 1) {\n          this.selectedIndex = -1;\n        } else {\n          this.selectedIndex++;\n        }\n      } else if (keyCode === keyCodes.backspace || keyCode === keyCodes.delete) {\n        this.deleteCurrentItem();\n      }\n    },\n\n    deleteCurrentItem() {\n      if (this.readonly) return;\n      const index = this.selectedItems.length - 1;\n\n      if (this.selectedIndex === -1 && index !== 0) {\n        this.selectedIndex = index;\n        return;\n      }\n\n      const currentItem = this.selectedItems[this.selectedIndex];\n      if (this.getDisabled(currentItem)) return;\n      const newIndex = this.selectedIndex === index ? this.selectedIndex - 1 : this.selectedItems[this.selectedIndex + 1] ? this.selectedIndex : -1;\n\n      if (newIndex === -1) {\n        this.setValue(this.multiple ? [] : undefined);\n      } else {\n        this.selectItem(currentItem);\n      }\n\n      this.selectedIndex = newIndex;\n    },\n\n    clearableCallback() {\n      this.internalSearch = undefined;\n      VSelect.options.methods.clearableCallback.call(this);\n    },\n\n    genInput() {\n      const input = VTextField.options.methods.genInput.call(this);\n      input.data = mergeData(input.data, {\n        attrs: {\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data, 'attrs.autocomplete', 'off')\n        },\n        domProps: {\n          value: this.internalSearch\n        }\n      });\n      return input;\n    },\n\n    genInputSlot() {\n      const slot = VSelect.options.methods.genInputSlot.call(this);\n      slot.data.attrs.role = 'combobox';\n      return slot;\n    },\n\n    genSelections() {\n      return this.hasSlot || this.multiple ? VSelect.options.methods.genSelections.call(this) : [];\n    },\n\n    onClick(e) {\n      if (this.isDisabled) return;\n      this.selectedIndex > -1 ? this.selectedIndex = -1 : this.onFocus();\n      if (!this.isAppendInner(e.target)) this.activateMenu();\n    },\n\n    onInput(e) {\n      if (this.selectedIndex > -1 || !e.target) return;\n      const target = e.target;\n      const value = target.value; // If typing and menu is not currently active\n\n      if (target.value) this.activateMenu();\n      this.internalSearch = value;\n      this.badInput = target.validity && target.validity.badInput;\n    },\n\n    onKeyDown(e) {\n      const keyCode = e.keyCode;\n      VSelect.options.methods.onKeyDown.call(this, e); // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n\n      this.changeSelectedIndex(keyCode);\n    },\n\n    onSpaceDown(e) {},\n\n    onTabDown(e) {\n      VSelect.options.methods.onTabDown.call(this, e);\n      this.updateSelf();\n    },\n\n    onUpDown(e) {\n      // Prevent screen from scrolling\n      e.preventDefault(); // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n\n      this.activateMenu();\n    },\n\n    selectItem(item) {\n      VSelect.options.methods.selectItem.call(this, item);\n      this.setSearch();\n    },\n\n    setSelectedItems() {\n      VSelect.options.methods.setSelectedItems.call(this); // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n\n      if (!this.isFocused) this.setSearch();\n    },\n\n    setSearch() {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        if (!this.multiple || !this.internalSearch || !this.isMenuActive) {\n          this.internalSearch = !this.selectedItems.length || this.multiple || this.hasSlot ? null : this.getText(this.selectedItem);\n        }\n      });\n    },\n\n    updateSelf() {\n      if (!this.searchIsDirty && !this.internalValue) return;\n\n      if (!this.valueComparator(this.internalSearch, this.getValue(this.internalValue))) {\n        this.setSearch();\n      }\n    },\n\n    hasItem(item) {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1;\n    },\n\n    onCopy(event) {\n      if (this.selectedIndex === -1) return;\n      const currentItem = this.selectedItems[this.selectedIndex];\n      const currentItemText = this.getText(currentItem);\n      event.clipboardData.setData('text/plain', currentItemText);\n      event.clipboardData.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText);\n      event.preventDefault();\n    }\n\n  }\n});\n//# sourceMappingURL=VAutocomplete.js.map"]}]}