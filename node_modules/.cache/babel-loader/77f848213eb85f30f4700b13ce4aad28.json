{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/mixins/stackable/index.js","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/mixins/stackable/index.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _toConsumableArray from \"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport Vue from 'vue';\nimport { getZIndex } from \"../../util/helpers\";\n/* @vue/component */\n\nexport default Vue.extend().extend({\n  name: 'stackable',\n  data: function data() {\n    return {\n      stackElement: null,\n      stackExclude: null,\n      stackMinZIndex: 0,\n      isActive: false\n    };\n  },\n  computed: {\n    activeZIndex: function activeZIndex() {\n      if (typeof window === 'undefined') return 0;\n      var content = this.stackElement || this.$refs.content; // Return current zindex if not active\n\n      var index = !this.isActive ? getZIndex(content) : this.getMaxZIndex(this.stackExclude || [content]) + 2;\n      if (index == null) return index; // Return max current z-index (excluding self) + 2\n      // (2 to leave room for an overlay below, if needed)\n\n      return parseInt(index);\n    }\n  },\n  methods: {\n    getMaxZIndex: function getMaxZIndex() {\n      var exclude = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var base = this.$el; // Start with lowest allowed z-index or z-index of\n      // base component's element, whichever is greater\n\n      var zis = [this.stackMinZIndex, getZIndex(base)]; // Convert the NodeList to an array to\n      // prevent an Edge bug with Symbol.iterator\n      // https://github.com/vuetifyjs/vuetify/issues/2146\n\n      var activeElements = [].concat(_toConsumableArray(document.getElementsByClassName('v-menu__content--active')), _toConsumableArray(document.getElementsByClassName('v-dialog__content--active'))); // Get z-index for all active dialogs\n\n      for (var index = 0; index < activeElements.length; index++) {\n        if (!exclude.includes(activeElements[index])) {\n          zis.push(getZIndex(activeElements[index]));\n        }\n      }\n\n      return Math.max.apply(Math, zis);\n    }\n  }\n});",{"version":3,"sources":["/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/mixins/stackable/index.js"],"names":["Vue","getZIndex","extend","name","data","stackElement","stackExclude","stackMinZIndex","isActive","computed","activeZIndex","window","content","$refs","index","getMaxZIndex","parseInt","methods","exclude","base","$el","zis","activeElements","document","getElementsByClassName","length","includes","push","Math","max"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,SAASC,SAAT;AACA;;AAEA,eAAeD,GAAG,CAACE,MAAJ,GAAaA,MAAb,CAAoB;AACjCC,EAAAA,IAAI,EAAE,WAD2B;AAGjCC,EAAAA,IAHiC,kBAG1B;AACL,WAAO;AACLC,MAAAA,YAAY,EAAE,IADT;AAELC,MAAAA,YAAY,EAAE,IAFT;AAGLC,MAAAA,cAAc,EAAE,CAHX;AAILC,MAAAA,QAAQ,EAAE;AAJL,KAAP;AAMD,GAVgC;AAYjCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YADQ,0BACO;AACb,UAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC,OAAO,CAAP;AACnC,UAAMC,OAAO,GAAG,KAAKP,YAAL,IAAqB,KAAKQ,KAAL,CAAWD,OAAhD,CAFa,CAE4C;;AAEzD,UAAME,KAAK,GAAG,CAAC,KAAKN,QAAN,GAAiBP,SAAS,CAACW,OAAD,CAA1B,GAAsC,KAAKG,YAAL,CAAkB,KAAKT,YAAL,IAAqB,CAACM,OAAD,CAAvC,IAAoD,CAAxG;AACA,UAAIE,KAAK,IAAI,IAAb,EAAmB,OAAOA,KAAP,CALN,CAKoB;AACjC;;AAEA,aAAOE,QAAQ,CAACF,KAAD,CAAf;AACD;AAVO,GAZuB;AAyBjCG,EAAAA,OAAO,EAAE;AACPF,IAAAA,YADO,0BACoB;AAAA,UAAdG,OAAc,uEAAJ,EAAI;AACzB,UAAMC,IAAI,GAAG,KAAKC,GAAlB,CADyB,CACF;AACvB;;AAEA,UAAMC,GAAG,GAAG,CAAC,KAAKd,cAAN,EAAsBN,SAAS,CAACkB,IAAD,CAA/B,CAAZ,CAJyB,CAI2B;AACpD;AACA;;AAEA,UAAMG,cAAc,gCAAOC,QAAQ,CAACC,sBAAT,CAAgC,yBAAhC,CAAP,sBAAsED,QAAQ,CAACC,sBAAT,CAAgC,2BAAhC,CAAtE,EAApB,CARyB,CAQgI;;AAEzJ,WAAK,IAAIV,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGQ,cAAc,CAACG,MAA3C,EAAmDX,KAAK,EAAxD,EAA4D;AAC1D,YAAI,CAACI,OAAO,CAACQ,QAAR,CAAiBJ,cAAc,CAACR,KAAD,CAA/B,CAAL,EAA8C;AAC5CO,UAAAA,GAAG,CAACM,IAAJ,CAAS1B,SAAS,CAACqB,cAAc,CAACR,KAAD,CAAf,CAAlB;AACD;AACF;;AAED,aAAOc,IAAI,CAACC,GAAL,OAAAD,IAAI,EAAQP,GAAR,CAAX;AACD;AAlBM;AAzBwB,CAApB,CAAf","sourcesContent":["import Vue from 'vue';\nimport { getZIndex } from '../../util/helpers';\n/* @vue/component */\n\nexport default Vue.extend().extend({\n  name: 'stackable',\n\n  data() {\n    return {\n      stackElement: null,\n      stackExclude: null,\n      stackMinZIndex: 0,\n      isActive: false\n    };\n  },\n\n  computed: {\n    activeZIndex() {\n      if (typeof window === 'undefined') return 0;\n      const content = this.stackElement || this.$refs.content; // Return current zindex if not active\n\n      const index = !this.isActive ? getZIndex(content) : this.getMaxZIndex(this.stackExclude || [content]) + 2;\n      if (index == null) return index; // Return max current z-index (excluding self) + 2\n      // (2 to leave room for an overlay below, if needed)\n\n      return parseInt(index);\n    }\n\n  },\n  methods: {\n    getMaxZIndex(exclude = []) {\n      const base = this.$el; // Start with lowest allowed z-index or z-index of\n      // base component's element, whichever is greater\n\n      const zis = [this.stackMinZIndex, getZIndex(base)]; // Convert the NodeList to an array to\n      // prevent an Edge bug with Symbol.iterator\n      // https://github.com/vuetifyjs/vuetify/issues/2146\n\n      const activeElements = [...document.getElementsByClassName('v-menu__content--active'), ...document.getElementsByClassName('v-dialog__content--active')]; // Get z-index for all active dialogs\n\n      for (let index = 0; index < activeElements.length; index++) {\n        if (!exclude.includes(activeElements[index])) {\n          zis.push(getZIndex(activeElements[index]));\n        }\n      }\n\n      return Math.max(...zis);\n    }\n\n  }\n});\n//# sourceMappingURL=index.js.map"]}]}