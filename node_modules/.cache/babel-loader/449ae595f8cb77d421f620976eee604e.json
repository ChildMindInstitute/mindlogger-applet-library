{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VBreadcrumbs/VBreadcrumbs.js","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VBreadcrumbs/VBreadcrumbs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Styles\nimport \"../../../src/components/VBreadcrumbs/VBreadcrumbs.sass\"; // Components\n\nimport VBreadcrumbsItem from \"./VBreadcrumbsItem\";\nimport VBreadcrumbsDivider from \"./VBreadcrumbsDivider\"; // Mixins\n\nimport Themeable from \"../../mixins/themeable\"; // Utils\n\nimport mixins from \"../../util/mixins\";\nexport default mixins(Themeable\n/* @vue/component */\n).extend({\n  name: 'v-breadcrumbs',\n  props: {\n    divider: {\n      type: String,\n      default: '/'\n    },\n    items: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    large: Boolean\n  },\n  computed: {\n    classes: function classes() {\n      return _objectSpread({\n        'v-breadcrumbs--large': this.large\n      }, this.themeClasses);\n    }\n  },\n  methods: {\n    genDivider: function genDivider() {\n      return this.$createElement(VBreadcrumbsDivider, this.$slots.divider ? this.$slots.divider : this.divider);\n    },\n    genItems: function genItems() {\n      var items = [];\n      var hasSlot = !!this.$scopedSlots.item;\n      var keys = [];\n\n      for (var i = 0; i < this.items.length; i++) {\n        var item = this.items[i];\n        keys.push(item.text);\n        if (hasSlot) items.push(this.$scopedSlots.item({\n          item: item\n        }));else items.push(this.$createElement(VBreadcrumbsItem, {\n          key: keys.join('.'),\n          props: item\n        }, [item.text]));\n        if (i < this.items.length - 1) items.push(this.genDivider());\n      }\n\n      return items;\n    }\n  },\n  render: function render(h) {\n    var children = this.$slots.default || this.genItems();\n    return h('ul', {\n      staticClass: 'v-breadcrumbs',\n      class: this.classes\n    }, children);\n  }\n});",{"version":3,"sources":["/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VBreadcrumbs/VBreadcrumbs.js"],"names":["VBreadcrumbsItem","VBreadcrumbsDivider","Themeable","mixins","extend","name","props","divider","type","String","default","items","Array","large","Boolean","computed","classes","themeClasses","methods","genDivider","$createElement","$slots","genItems","hasSlot","$scopedSlots","item","keys","i","length","push","text","key","join","render","h","children","staticClass","class"],"mappings":";;;;;;;;;AAAA;AACA,gE,CAAiE;;AAEjE,OAAOA,gBAAP;AACA,OAAOC,mBAAP,8B,CAAyD;;AAEzD,OAAOC,SAAP,+B,CAAgD;;AAEhD,OAAOC,MAAP;AACA,eAAeA,MAAM,CAACD;AACtB;AADqB,CAAN,CAEbE,MAFa,CAEN;AACPC,EAAAA,IAAI,EAAE,eADC;AAEPC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAEC,MADC;AAEPC,MAAAA,OAAO,EAAE;AAFF,KADJ;AAKLC,IAAAA,KAAK,EAAE;AACLH,MAAAA,IAAI,EAAEI,KADD;AAELF,MAAAA,OAAO,EAAE;AAAA,eAAM,EAAN;AAAA;AAFJ,KALF;AASLG,IAAAA,KAAK,EAAEC;AATF,GAFA;AAaPC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OADQ,qBACE;AACR;AACE,gCAAwB,KAAKH;AAD/B,SAEK,KAAKI,YAFV;AAID;AANO,GAbH;AAsBPC,EAAAA,OAAO,EAAE;AACPC,IAAAA,UADO,wBACM;AACX,aAAO,KAAKC,cAAL,CAAoBnB,mBAApB,EAAyC,KAAKoB,MAAL,CAAYd,OAAZ,GAAsB,KAAKc,MAAL,CAAYd,OAAlC,GAA4C,KAAKA,OAA1F,CAAP;AACD,KAHM;AAKPe,IAAAA,QALO,sBAKI;AACT,UAAMX,KAAK,GAAG,EAAd;AACA,UAAMY,OAAO,GAAG,CAAC,CAAC,KAAKC,YAAL,CAAkBC,IAApC;AACA,UAAMC,IAAI,GAAG,EAAb;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKhB,KAAL,CAAWiB,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C,YAAMF,IAAI,GAAG,KAAKd,KAAL,CAAWgB,CAAX,CAAb;AACAD,QAAAA,IAAI,CAACG,IAAL,CAAUJ,IAAI,CAACK,IAAf;AACA,YAAIP,OAAJ,EAAaZ,KAAK,CAACkB,IAAN,CAAW,KAAKL,YAAL,CAAkBC,IAAlB,CAAuB;AAC7CA,UAAAA,IAAI,EAAJA;AAD6C,SAAvB,CAAX,EAAb,KAESd,KAAK,CAACkB,IAAN,CAAW,KAAKT,cAAL,CAAoBpB,gBAApB,EAAsC;AACxD+B,UAAAA,GAAG,EAAEL,IAAI,CAACM,IAAL,CAAU,GAAV,CADmD;AAExD1B,UAAAA,KAAK,EAAEmB;AAFiD,SAAtC,EAGjB,CAACA,IAAI,CAACK,IAAN,CAHiB,CAAX;AAIT,YAAIH,CAAC,GAAG,KAAKhB,KAAL,CAAWiB,MAAX,GAAoB,CAA5B,EAA+BjB,KAAK,CAACkB,IAAN,CAAW,KAAKV,UAAL,EAAX;AAChC;;AAED,aAAOR,KAAP;AACD;AAvBM,GAtBF;AAiDPsB,EAAAA,MAjDO,kBAiDAC,CAjDA,EAiDG;AACR,QAAMC,QAAQ,GAAG,KAAKd,MAAL,CAAYX,OAAZ,IAAuB,KAAKY,QAAL,EAAxC;AACA,WAAOY,CAAC,CAAC,IAAD,EAAO;AACbE,MAAAA,WAAW,EAAE,eADA;AAEbC,MAAAA,KAAK,EAAE,KAAKrB;AAFC,KAAP,EAGLmB,QAHK,CAAR;AAID;AAvDM,CAFM,CAAf","sourcesContent":["// Styles\nimport \"../../../src/components/VBreadcrumbs/VBreadcrumbs.sass\"; // Components\n\nimport VBreadcrumbsItem from './VBreadcrumbsItem';\nimport VBreadcrumbsDivider from './VBreadcrumbsDivider'; // Mixins\n\nimport Themeable from '../../mixins/themeable'; // Utils\n\nimport mixins from '../../util/mixins';\nexport default mixins(Themeable\n/* @vue/component */\n).extend({\n  name: 'v-breadcrumbs',\n  props: {\n    divider: {\n      type: String,\n      default: '/'\n    },\n    items: {\n      type: Array,\n      default: () => []\n    },\n    large: Boolean\n  },\n  computed: {\n    classes() {\n      return {\n        'v-breadcrumbs--large': this.large,\n        ...this.themeClasses\n      };\n    }\n\n  },\n  methods: {\n    genDivider() {\n      return this.$createElement(VBreadcrumbsDivider, this.$slots.divider ? this.$slots.divider : this.divider);\n    },\n\n    genItems() {\n      const items = [];\n      const hasSlot = !!this.$scopedSlots.item;\n      const keys = [];\n\n      for (let i = 0; i < this.items.length; i++) {\n        const item = this.items[i];\n        keys.push(item.text);\n        if (hasSlot) items.push(this.$scopedSlots.item({\n          item\n        }));else items.push(this.$createElement(VBreadcrumbsItem, {\n          key: keys.join('.'),\n          props: item\n        }, [item.text]));\n        if (i < this.items.length - 1) items.push(this.genDivider());\n      }\n\n      return items;\n    }\n\n  },\n\n  render(h) {\n    const children = this.$slots.default || this.genItems();\n    return h('ul', {\n      staticClass: 'v-breadcrumbs',\n      class: this.classes\n    }, children);\n  }\n\n});\n//# sourceMappingURL=VBreadcrumbs.js.map"]}]}