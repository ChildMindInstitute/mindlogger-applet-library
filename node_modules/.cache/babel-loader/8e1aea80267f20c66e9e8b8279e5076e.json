{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VFileInput/VFileInput.js","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VFileInput/VFileInput.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport _toConsumableArray from \"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _typeof from \"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Styles\nimport \"../../../src/components/VFileInput/VFileInput.sass\"; // Extensions\n\nimport VTextField from \"../VTextField\"; // Components\n\nimport { VChip } from \"../VChip\"; // Utilities\n\nimport { deepEqual, humanReadableFileSize, wrapInArray } from \"../../util/helpers\";\nimport { consoleError } from \"../../util/console\";\nexport default VTextField.extend({\n  name: 'v-file-input',\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  props: {\n    chips: Boolean,\n    clearable: {\n      type: Boolean,\n      default: true\n    },\n    counterSizeString: {\n      type: String,\n      default: '$vuetify.fileInput.counterSize'\n    },\n    counterString: {\n      type: String,\n      default: '$vuetify.fileInput.counter'\n    },\n    placeholder: String,\n    prependIcon: {\n      type: String,\n      default: '$file'\n    },\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    showSize: {\n      type: [Boolean, Number],\n      default: false,\n      validator: function validator(v) {\n        return typeof v === 'boolean' || [1000, 1024].includes(v);\n      }\n    },\n    smallChips: Boolean,\n    truncateLength: {\n      type: [Number, String],\n      default: 22\n    },\n    type: {\n      type: String,\n      default: 'file'\n    },\n    value: {\n      default: undefined,\n      validator: function validator(val) {\n        return wrapInArray(val).every(function (v) {\n          return v != null && _typeof(v) === 'object';\n        });\n      }\n    }\n  },\n  computed: {\n    classes: function classes() {\n      return _objectSpread({}, VTextField.options.computed.classes.call(this), {\n        'v-file-input': true\n      });\n    },\n    computedCounterValue: function computedCounterValue() {\n      var fileCount = this.isMultiple && this.lazyValue ? this.lazyValue.length : this.lazyValue instanceof File ? 1 : 0;\n      if (!this.showSize) return this.$vuetify.lang.t(this.counterString, fileCount);\n      var bytes = this.internalArrayValue.reduce(function (bytes, _ref) {\n        var _ref$size = _ref.size,\n            size = _ref$size === void 0 ? 0 : _ref$size;\n        return bytes + size;\n      }, 0);\n      return this.$vuetify.lang.t(this.counterSizeString, fileCount, humanReadableFileSize(bytes, this.base === 1024));\n    },\n    internalArrayValue: function internalArrayValue() {\n      return wrapInArray(this.internalValue);\n    },\n    internalValue: {\n      get: function get() {\n        return this.lazyValue;\n      },\n      set: function set(val) {\n        this.lazyValue = val;\n        this.$emit('change', this.lazyValue);\n      }\n    },\n    isDirty: function isDirty() {\n      return this.internalArrayValue.length > 0;\n    },\n    isLabelActive: function isLabelActive() {\n      return this.isDirty;\n    },\n    isMultiple: function isMultiple() {\n      return this.$attrs.hasOwnProperty('multiple');\n    },\n    text: function text() {\n      var _this = this;\n\n      if (!this.isDirty) return [this.placeholder];\n      return this.internalArrayValue.map(function (file) {\n        var _file$name = file.name,\n            name = _file$name === void 0 ? '' : _file$name,\n            _file$size = file.size,\n            size = _file$size === void 0 ? 0 : _file$size;\n\n        var truncatedText = _this.truncateText(name);\n\n        return !_this.showSize ? truncatedText : \"\".concat(truncatedText, \" (\").concat(humanReadableFileSize(size, _this.base === 1024), \")\");\n      });\n    },\n    base: function base() {\n      return typeof this.showSize !== 'boolean' ? this.showSize : undefined;\n    },\n    hasChips: function hasChips() {\n      return this.chips || this.smallChips;\n    }\n  },\n  watch: {\n    readonly: {\n      handler: function handler(v) {\n        if (v === true) consoleError('readonly is not supported on <v-file-input>', this);\n      },\n      immediate: true\n    },\n    value: function value(v) {\n      var value = this.isMultiple ? v : v ? [v] : [];\n\n      if (!deepEqual(value, this.$refs.input.files)) {\n        // When the input value is changed programatically, clear the\n        // internal input's value so that the `onInput` handler\n        // can be triggered again if the user re-selects the exact\n        // same file(s). Ideally, `input.files` should be\n        // manipulated directly but that property is readonly.\n        this.$refs.input.value = '';\n      }\n    }\n  },\n  methods: {\n    clearableCallback: function clearableCallback() {\n      this.internalValue = this.isMultiple ? [] : undefined;\n      this.$refs.input.value = '';\n    },\n    genChips: function genChips() {\n      var _this2 = this;\n\n      if (!this.isDirty) return [];\n      return this.text.map(function (text, index) {\n        return _this2.$createElement(VChip, {\n          props: {\n            small: _this2.smallChips\n          },\n          on: {\n            'click:close': function clickClose() {\n              var internalValue = _this2.internalValue;\n              internalValue.splice(index, 1);\n              _this2.internalValue = internalValue; // Trigger the watcher\n            }\n          }\n        }, [text]);\n      });\n    },\n    genInput: function genInput() {\n      var input = VTextField.options.methods.genInput.call(this); // We should not be setting value\n      // programmatically on the input\n      // when it is using type=\"file\"\n\n      delete input.data.domProps.value; // This solves an issue in Safari where\n      // nothing happens when adding a file\n      // do to the input event not firing\n      // https://github.com/vuetifyjs/vuetify/issues/7941\n\n      delete input.data.on.input;\n      input.data.on.change = this.onInput;\n      return [this.genSelections(), input];\n    },\n    genPrependSlot: function genPrependSlot() {\n      var _this3 = this;\n\n      if (!this.prependIcon) return null;\n      var icon = this.genIcon('prepend', function () {\n        _this3.$refs.input.click();\n      });\n      return this.genSlot('prepend', 'outer', [icon]);\n    },\n    genSelectionText: function genSelectionText() {\n      var length = this.text.length;\n      if (length < 2) return this.text;\n      if (this.showSize && !this.counter) return [this.computedCounterValue];\n      return [this.$vuetify.lang.t(this.counterString, length)];\n    },\n    genSelections: function genSelections() {\n      var _this4 = this;\n\n      var children = [];\n\n      if (this.isDirty && this.$scopedSlots.selection) {\n        this.internalArrayValue.forEach(function (file, index) {\n          if (!_this4.$scopedSlots.selection) return;\n          children.push(_this4.$scopedSlots.selection({\n            text: _this4.text[index],\n            file: file,\n            index: index\n          }));\n        });\n      } else {\n        children.push(this.hasChips && this.isDirty ? this.genChips() : this.genSelectionText());\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-file-input__text',\n        class: {\n          'v-file-input__text--placeholder': this.placeholder && !this.isDirty,\n          'v-file-input__text--chips': this.hasChips && !this.$scopedSlots.selection\n        }\n      }, children);\n    },\n    genTextFieldSlot: function genTextFieldSlot() {\n      var _this5 = this;\n\n      var node = VTextField.options.methods.genTextFieldSlot.call(this);\n      node.data.on = _objectSpread({}, node.data.on || {}, {\n        click: function click() {\n          return _this5.$refs.input.click();\n        }\n      });\n      return node;\n    },\n    onInput: function onInput(e) {\n      var files = _toConsumableArray(e.target.files || []);\n\n      this.internalValue = this.isMultiple ? files : files[0]; // Set initialValue here otherwise isFocused\n      // watcher in VTextField will emit a change\n      // event whenever the component is blurred\n\n      this.initialValue = this.internalValue;\n    },\n    onKeyDown: function onKeyDown(e) {\n      this.$emit('keydown', e);\n    },\n    truncateText: function truncateText(str) {\n      if (str.length < Number(this.truncateLength)) return str;\n      var charsKeepOneSide = Math.floor((Number(this.truncateLength) - 1) / 2);\n      return \"\".concat(str.slice(0, charsKeepOneSide), \"\\u2026\").concat(str.slice(str.length - charsKeepOneSide));\n    }\n  }\n});",{"version":3,"sources":["/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VFileInput/VFileInput.js"],"names":["VTextField","VChip","deepEqual","humanReadableFileSize","wrapInArray","consoleError","extend","name","model","prop","event","props","chips","Boolean","clearable","type","default","counterSizeString","String","counterString","placeholder","prependIcon","readonly","showSize","Number","validator","v","includes","smallChips","truncateLength","value","undefined","val","every","computed","classes","options","call","computedCounterValue","fileCount","isMultiple","lazyValue","length","File","$vuetify","lang","t","bytes","internalArrayValue","reduce","size","base","internalValue","get","set","$emit","isDirty","isLabelActive","$attrs","hasOwnProperty","text","map","file","truncatedText","truncateText","hasChips","watch","handler","immediate","$refs","input","files","methods","clearableCallback","genChips","index","$createElement","small","on","splice","genInput","data","domProps","change","onInput","genSelections","genPrependSlot","icon","genIcon","click","genSlot","genSelectionText","counter","children","$scopedSlots","selection","forEach","push","staticClass","class","genTextFieldSlot","node","e","target","initialValue","onKeyDown","str","charsKeepOneSide","Math","floor","slice"],"mappings":"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","sourcesContent":["// Styles\nimport \"../../../src/components/VFileInput/VFileInput.sass\"; // Extensions\n\nimport VTextField from '../VTextField'; // Components\n\nimport { VChip } from '../VChip'; // Utilities\n\nimport { deepEqual, humanReadableFileSize, wrapInArray } from '../../util/helpers';\nimport { consoleError } from '../../util/console';\nexport default VTextField.extend({\n  name: 'v-file-input',\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  props: {\n    chips: Boolean,\n    clearable: {\n      type: Boolean,\n      default: true\n    },\n    counterSizeString: {\n      type: String,\n      default: '$vuetify.fileInput.counterSize'\n    },\n    counterString: {\n      type: String,\n      default: '$vuetify.fileInput.counter'\n    },\n    placeholder: String,\n    prependIcon: {\n      type: String,\n      default: '$file'\n    },\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    showSize: {\n      type: [Boolean, Number],\n      default: false,\n      validator: v => {\n        return typeof v === 'boolean' || [1000, 1024].includes(v);\n      }\n    },\n    smallChips: Boolean,\n    truncateLength: {\n      type: [Number, String],\n      default: 22\n    },\n    type: {\n      type: String,\n      default: 'file'\n    },\n    value: {\n      default: undefined,\n      validator: val => {\n        return wrapInArray(val).every(v => v != null && typeof v === 'object');\n      }\n    }\n  },\n  computed: {\n    classes() {\n      return { ...VTextField.options.computed.classes.call(this),\n        'v-file-input': true\n      };\n    },\n\n    computedCounterValue() {\n      const fileCount = this.isMultiple && this.lazyValue ? this.lazyValue.length : this.lazyValue instanceof File ? 1 : 0;\n      if (!this.showSize) return this.$vuetify.lang.t(this.counterString, fileCount);\n      const bytes = this.internalArrayValue.reduce((bytes, {\n        size = 0\n      }) => {\n        return bytes + size;\n      }, 0);\n      return this.$vuetify.lang.t(this.counterSizeString, fileCount, humanReadableFileSize(bytes, this.base === 1024));\n    },\n\n    internalArrayValue() {\n      return wrapInArray(this.internalValue);\n    },\n\n    internalValue: {\n      get() {\n        return this.lazyValue;\n      },\n\n      set(val) {\n        this.lazyValue = val;\n        this.$emit('change', this.lazyValue);\n      }\n\n    },\n\n    isDirty() {\n      return this.internalArrayValue.length > 0;\n    },\n\n    isLabelActive() {\n      return this.isDirty;\n    },\n\n    isMultiple() {\n      return this.$attrs.hasOwnProperty('multiple');\n    },\n\n    text() {\n      if (!this.isDirty) return [this.placeholder];\n      return this.internalArrayValue.map(file => {\n        const {\n          name = '',\n          size = 0\n        } = file;\n        const truncatedText = this.truncateText(name);\n        return !this.showSize ? truncatedText : `${truncatedText} (${humanReadableFileSize(size, this.base === 1024)})`;\n      });\n    },\n\n    base() {\n      return typeof this.showSize !== 'boolean' ? this.showSize : undefined;\n    },\n\n    hasChips() {\n      return this.chips || this.smallChips;\n    }\n\n  },\n  watch: {\n    readonly: {\n      handler(v) {\n        if (v === true) consoleError('readonly is not supported on <v-file-input>', this);\n      },\n\n      immediate: true\n    },\n\n    value(v) {\n      const value = this.isMultiple ? v : v ? [v] : [];\n\n      if (!deepEqual(value, this.$refs.input.files)) {\n        // When the input value is changed programatically, clear the\n        // internal input's value so that the `onInput` handler\n        // can be triggered again if the user re-selects the exact\n        // same file(s). Ideally, `input.files` should be\n        // manipulated directly but that property is readonly.\n        this.$refs.input.value = '';\n      }\n    }\n\n  },\n  methods: {\n    clearableCallback() {\n      this.internalValue = this.isMultiple ? [] : undefined;\n      this.$refs.input.value = '';\n    },\n\n    genChips() {\n      if (!this.isDirty) return [];\n      return this.text.map((text, index) => this.$createElement(VChip, {\n        props: {\n          small: this.smallChips\n        },\n        on: {\n          'click:close': () => {\n            const internalValue = this.internalValue;\n            internalValue.splice(index, 1);\n            this.internalValue = internalValue; // Trigger the watcher\n          }\n        }\n      }, [text]));\n    },\n\n    genInput() {\n      const input = VTextField.options.methods.genInput.call(this); // We should not be setting value\n      // programmatically on the input\n      // when it is using type=\"file\"\n\n      delete input.data.domProps.value; // This solves an issue in Safari where\n      // nothing happens when adding a file\n      // do to the input event not firing\n      // https://github.com/vuetifyjs/vuetify/issues/7941\n\n      delete input.data.on.input;\n      input.data.on.change = this.onInput;\n      return [this.genSelections(), input];\n    },\n\n    genPrependSlot() {\n      if (!this.prependIcon) return null;\n      const icon = this.genIcon('prepend', () => {\n        this.$refs.input.click();\n      });\n      return this.genSlot('prepend', 'outer', [icon]);\n    },\n\n    genSelectionText() {\n      const length = this.text.length;\n      if (length < 2) return this.text;\n      if (this.showSize && !this.counter) return [this.computedCounterValue];\n      return [this.$vuetify.lang.t(this.counterString, length)];\n    },\n\n    genSelections() {\n      const children = [];\n\n      if (this.isDirty && this.$scopedSlots.selection) {\n        this.internalArrayValue.forEach((file, index) => {\n          if (!this.$scopedSlots.selection) return;\n          children.push(this.$scopedSlots.selection({\n            text: this.text[index],\n            file,\n            index\n          }));\n        });\n      } else {\n        children.push(this.hasChips && this.isDirty ? this.genChips() : this.genSelectionText());\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-file-input__text',\n        class: {\n          'v-file-input__text--placeholder': this.placeholder && !this.isDirty,\n          'v-file-input__text--chips': this.hasChips && !this.$scopedSlots.selection\n        }\n      }, children);\n    },\n\n    genTextFieldSlot() {\n      const node = VTextField.options.methods.genTextFieldSlot.call(this);\n      node.data.on = { ...(node.data.on || {}),\n        click: () => this.$refs.input.click()\n      };\n      return node;\n    },\n\n    onInput(e) {\n      const files = [...(e.target.files || [])];\n      this.internalValue = this.isMultiple ? files : files[0]; // Set initialValue here otherwise isFocused\n      // watcher in VTextField will emit a change\n      // event whenever the component is blurred\n\n      this.initialValue = this.internalValue;\n    },\n\n    onKeyDown(e) {\n      this.$emit('keydown', e);\n    },\n\n    truncateText(str) {\n      if (str.length < Number(this.truncateLength)) return str;\n      const charsKeepOneSide = Math.floor((Number(this.truncateLength) - 1) / 2);\n      return `${str.slice(0, charsKeepOneSide)}…${str.slice(str.length - charsKeepOneSide)}`;\n    }\n\n  }\n});\n//# sourceMappingURL=VFileInput.js.map"]}]}