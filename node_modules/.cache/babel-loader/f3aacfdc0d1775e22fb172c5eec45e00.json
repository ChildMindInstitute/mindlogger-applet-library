{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VWindow/VWindowItem.js","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VWindow/VWindowItem.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["// Mixins\nimport Bootable from \"../../mixins/bootable\";\nimport { factory as GroupableFactory } from \"../../mixins/groupable\"; // Directives\n\nimport Touch from \"../../directives/touch\"; // Utilities\n\nimport { convertToUnit } from \"../../util/helpers\";\nimport mixins from \"../../util/mixins\";\nvar baseMixins = mixins(Bootable, GroupableFactory('windowGroup', 'v-window-item', 'v-window'));\nexport default baseMixins.extend().extend().extend({\n  name: 'v-window-item',\n  directives: {\n    Touch: Touch\n  },\n  props: {\n    disabled: Boolean,\n    reverseTransition: {\n      type: [Boolean, String],\n      default: undefined\n    },\n    transition: {\n      type: [Boolean, String],\n      default: undefined\n    },\n    value: {\n      required: false\n    }\n  },\n  data: function data() {\n    return {\n      isActive: false,\n      inTransition: false\n    };\n  },\n  computed: {\n    classes: function classes() {\n      return this.groupClasses;\n    },\n    computedTransition: function computedTransition() {\n      if (!this.windowGroup.internalReverse) {\n        return typeof this.transition !== 'undefined' ? this.transition || '' : this.windowGroup.computedTransition;\n      }\n\n      return typeof this.reverseTransition !== 'undefined' ? this.reverseTransition || '' : this.windowGroup.computedTransition;\n    }\n  },\n  methods: {\n    genDefaultSlot: function genDefaultSlot() {\n      return this.$slots.default;\n    },\n    genWindowItem: function genWindowItem() {\n      return this.$createElement('div', {\n        staticClass: 'v-window-item',\n        class: this.classes,\n        directives: [{\n          name: 'show',\n          value: this.isActive\n        }],\n        on: this.$listeners\n      }, this.genDefaultSlot());\n    },\n    onAfterTransition: function onAfterTransition() {\n      if (!this.inTransition) {\n        return;\n      } // Finalize transition state.\n\n\n      this.inTransition = false;\n\n      if (this.windowGroup.transitionCount > 0) {\n        this.windowGroup.transitionCount--; // Remove container height if we are out of transition.\n\n        if (this.windowGroup.transitionCount === 0) {\n          this.windowGroup.transitionHeight = undefined;\n        }\n      }\n    },\n    onBeforeTransition: function onBeforeTransition() {\n      if (this.inTransition) {\n        return;\n      } // Initialize transition state here.\n\n\n      this.inTransition = true;\n\n      if (this.windowGroup.transitionCount === 0) {\n        // Set initial height for height transition.\n        this.windowGroup.transitionHeight = convertToUnit(this.windowGroup.$el.clientHeight);\n      }\n\n      this.windowGroup.transitionCount++;\n    },\n    onTransitionCancelled: function onTransitionCancelled() {\n      this.onAfterTransition(); // This should have the same path as normal transition end.\n    },\n    onEnter: function onEnter(el) {\n      var _this = this;\n\n      if (!this.inTransition) {\n        return;\n      }\n\n      this.$nextTick(function () {\n        // Do not set height if no transition or cancelled.\n        if (!_this.computedTransition || !_this.inTransition) {\n          return;\n        } // Set transition target height.\n\n\n        _this.windowGroup.transitionHeight = convertToUnit(el.clientHeight);\n      });\n    }\n  },\n  render: function render(h) {\n    var _this2 = this;\n\n    return h('transition', {\n      props: {\n        name: this.computedTransition\n      },\n      on: {\n        // Handlers for enter windows.\n        beforeEnter: this.onBeforeTransition,\n        afterEnter: this.onAfterTransition,\n        enterCancelled: this.onTransitionCancelled,\n        // Handlers for leave windows.\n        beforeLeave: this.onBeforeTransition,\n        afterLeave: this.onAfterTransition,\n        leaveCancelled: this.onTransitionCancelled,\n        // Enter handler for height transition.\n        enter: this.onEnter\n      }\n    }, this.showLazyContent(function () {\n      return [_this2.genWindowItem()];\n    }));\n  }\n});",{"version":3,"sources":["/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VWindow/VWindowItem.js"],"names":["Bootable","factory","GroupableFactory","Touch","convertToUnit","mixins","baseMixins","extend","name","directives","props","disabled","Boolean","reverseTransition","type","String","default","undefined","transition","value","required","data","isActive","inTransition","computed","classes","groupClasses","computedTransition","windowGroup","internalReverse","methods","genDefaultSlot","$slots","genWindowItem","$createElement","staticClass","class","on","$listeners","onAfterTransition","transitionCount","transitionHeight","onBeforeTransition","$el","clientHeight","onTransitionCancelled","onEnter","el","$nextTick","render","h","beforeEnter","afterEnter","enterCancelled","beforeLeave","afterLeave","leaveCancelled","enter","showLazyContent"],"mappings":"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","sourcesContent":["// Mixins\nimport Bootable from '../../mixins/bootable';\nimport { factory as GroupableFactory } from '../../mixins/groupable'; // Directives\n\nimport Touch from '../../directives/touch'; // Utilities\n\nimport { convertToUnit } from '../../util/helpers';\nimport mixins from '../../util/mixins';\nconst baseMixins = mixins(Bootable, GroupableFactory('windowGroup', 'v-window-item', 'v-window'));\nexport default baseMixins.extend().extend().extend({\n  name: 'v-window-item',\n  directives: {\n    Touch\n  },\n  props: {\n    disabled: Boolean,\n    reverseTransition: {\n      type: [Boolean, String],\n      default: undefined\n    },\n    transition: {\n      type: [Boolean, String],\n      default: undefined\n    },\n    value: {\n      required: false\n    }\n  },\n\n  data() {\n    return {\n      isActive: false,\n      inTransition: false\n    };\n  },\n\n  computed: {\n    classes() {\n      return this.groupClasses;\n    },\n\n    computedTransition() {\n      if (!this.windowGroup.internalReverse) {\n        return typeof this.transition !== 'undefined' ? this.transition || '' : this.windowGroup.computedTransition;\n      }\n\n      return typeof this.reverseTransition !== 'undefined' ? this.reverseTransition || '' : this.windowGroup.computedTransition;\n    }\n\n  },\n  methods: {\n    genDefaultSlot() {\n      return this.$slots.default;\n    },\n\n    genWindowItem() {\n      return this.$createElement('div', {\n        staticClass: 'v-window-item',\n        class: this.classes,\n        directives: [{\n          name: 'show',\n          value: this.isActive\n        }],\n        on: this.$listeners\n      }, this.genDefaultSlot());\n    },\n\n    onAfterTransition() {\n      if (!this.inTransition) {\n        return;\n      } // Finalize transition state.\n\n\n      this.inTransition = false;\n\n      if (this.windowGroup.transitionCount > 0) {\n        this.windowGroup.transitionCount--; // Remove container height if we are out of transition.\n\n        if (this.windowGroup.transitionCount === 0) {\n          this.windowGroup.transitionHeight = undefined;\n        }\n      }\n    },\n\n    onBeforeTransition() {\n      if (this.inTransition) {\n        return;\n      } // Initialize transition state here.\n\n\n      this.inTransition = true;\n\n      if (this.windowGroup.transitionCount === 0) {\n        // Set initial height for height transition.\n        this.windowGroup.transitionHeight = convertToUnit(this.windowGroup.$el.clientHeight);\n      }\n\n      this.windowGroup.transitionCount++;\n    },\n\n    onTransitionCancelled() {\n      this.onAfterTransition(); // This should have the same path as normal transition end.\n    },\n\n    onEnter(el) {\n      if (!this.inTransition) {\n        return;\n      }\n\n      this.$nextTick(() => {\n        // Do not set height if no transition or cancelled.\n        if (!this.computedTransition || !this.inTransition) {\n          return;\n        } // Set transition target height.\n\n\n        this.windowGroup.transitionHeight = convertToUnit(el.clientHeight);\n      });\n    }\n\n  },\n\n  render(h) {\n    return h('transition', {\n      props: {\n        name: this.computedTransition\n      },\n      on: {\n        // Handlers for enter windows.\n        beforeEnter: this.onBeforeTransition,\n        afterEnter: this.onAfterTransition,\n        enterCancelled: this.onTransitionCancelled,\n        // Handlers for leave windows.\n        beforeLeave: this.onBeforeTransition,\n        afterLeave: this.onAfterTransition,\n        leaveCancelled: this.onTransitionCancelled,\n        // Enter handler for height transition.\n        enter: this.onEnter\n      }\n    }, this.showLazyContent(() => [this.genWindowItem()]));\n  }\n\n});\n//# sourceMappingURL=VWindowItem.js.map"]}]}