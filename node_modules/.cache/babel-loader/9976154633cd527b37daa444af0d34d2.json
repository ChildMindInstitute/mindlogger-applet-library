{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/services/presets/index.js","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/services/presets/index.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectWithoutProperties from \"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@babel/runtime-corejs2/helpers/esm/inherits\";\n// Preset\nimport { preset as Preset } from \"../../presets/default\"; // Utilities\n\nimport { consoleWarn } from \"../../util/console\";\nimport { mergeDeep } from \"../../util/helpers\";\nimport { Service } from \"../service\";\nexport var Presets =\n/*#__PURE__*/\nfunction (_Service) {\n  _inherits(Presets, _Service);\n\n  function Presets(parentPreset, parent) {\n    var _this;\n\n    _classCallCheck(this, Presets);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Presets).call(this)); // The default preset\n\n    var defaultPreset = mergeDeep({}, Preset); // The user provided preset\n\n    var userPreset = parent.userPreset; // The user provided global preset\n\n    var _userPreset$preset = userPreset.preset,\n        globalPreset = _userPreset$preset === void 0 ? {} : _userPreset$preset,\n        preset = _objectWithoutProperties(userPreset, [\"preset\"]);\n\n    if (globalPreset.preset != null) {\n      consoleWarn('Global presets do not support the **preset** option, it can be safely omitted');\n    }\n\n    parent.preset = mergeDeep(mergeDeep(defaultPreset, globalPreset), preset);\n    return _this;\n  }\n\n  return Presets;\n}(Service);\nPresets.property = 'presets';",{"version":3,"sources":["/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/services/presets/index.js"],"names":["preset","Preset","consoleWarn","mergeDeep","Service","Presets","parentPreset","parent","defaultPreset","userPreset","globalPreset","property"],"mappings":";;;;;AAAA;AACA,SAASA,MAAM,IAAIC,MAAnB,gC,CAA0D;;AAE1D,SAASC,WAAT;AACA,SAASC,SAAT;AACA,SAASC,OAAT;AACA,WAAaC,OAAb;AAAA;AAAA;AAAA;;AACE,mBAAYC,YAAZ,EAA0BC,MAA1B,EAAkC;AAAA;;AAAA;;AAChC,kFADgC,CACvB;;AAET,QAAMC,aAAa,GAAGL,SAAS,CAAC,EAAD,EAAKF,MAAL,CAA/B,CAHgC,CAGa;;AAHb,QAM9BQ,UAN8B,GAO5BF,MAP4B,CAM9BE,UAN8B,EAOpB;;AAPoB,6BAY5BA,UAZ4B,CAU9BT,MAV8B;AAAA,QAUtBU,YAVsB,mCAUP,EAVO;AAAA,QAW3BV,MAX2B,4BAY5BS,UAZ4B;;AAchC,QAAIC,YAAY,CAACV,MAAb,IAAuB,IAA3B,EAAiC;AAC/BE,MAAAA,WAAW,CAAC,+EAAD,CAAX;AACD;;AAEDK,IAAAA,MAAM,CAACP,MAAP,GAAgBG,SAAS,CAACA,SAAS,CAACK,aAAD,EAAgBE,YAAhB,CAAV,EAAyCV,MAAzC,CAAzB;AAlBgC;AAmBjC;;AApBH;AAAA,EAA6BI,OAA7B;AAuBAC,OAAO,CAACM,QAAR,GAAmB,SAAnB","sourcesContent":["// Preset\nimport { preset as Preset } from '../../presets/default'; // Utilities\n\nimport { consoleWarn } from '../../util/console';\nimport { mergeDeep } from '../../util/helpers';\nimport { Service } from '../service';\nexport class Presets extends Service {\n  constructor(parentPreset, parent) {\n    super(); // The default preset\n\n    const defaultPreset = mergeDeep({}, Preset); // The user provided preset\n\n    const {\n      userPreset\n    } = parent; // The user provided global preset\n\n    const {\n      preset: globalPreset = {},\n      ...preset\n    } = userPreset;\n\n    if (globalPreset.preset != null) {\n      consoleWarn('Global presets do not support the **preset** option, it can be safely omitted');\n    }\n\n    parent.preset = mergeDeep(mergeDeep(defaultPreset, globalPreset), preset);\n  }\n\n}\nPresets.property = 'presets';\n//# sourceMappingURL=index.js.map"]}]}