{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VBottomNavigation/VBottomNavigation.js","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VBottomNavigation/VBottomNavigation.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.string.fixed\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Styles\nimport \"../../../src/components/VBottomNavigation/VBottomNavigation.sass\"; // Mixins\n\nimport Applicationable from \"../../mixins/applicationable\";\nimport ButtonGroup from \"../../mixins/button-group\";\nimport Colorable from \"../../mixins/colorable\";\nimport Measurable from \"../../mixins/measurable\";\nimport Proxyable from \"../../mixins/proxyable\";\nimport Scrollable from \"../../mixins/scrollable\";\nimport Themeable from \"../../mixins/themeable\";\nimport { factory as ToggleableFactory } from \"../../mixins/toggleable\"; // Utilities\n\nimport mixins from \"../../util/mixins\";\nimport { breaking } from \"../../util/console\";\nexport default mixins(Applicationable('bottom', ['height', 'inputValue']), Colorable, Measurable, ToggleableFactory('inputValue'), Proxyable, Scrollable, Themeable\n/* @vue/component */\n).extend({\n  name: 'v-bottom-navigation',\n  props: {\n    activeClass: {\n      type: String,\n      default: 'v-btn--active'\n    },\n    backgroundColor: String,\n    grow: Boolean,\n    height: {\n      type: [Number, String],\n      default: 56\n    },\n    hideOnScroll: Boolean,\n    horizontal: Boolean,\n    inputValue: {\n      type: Boolean,\n      default: true\n    },\n    mandatory: Boolean,\n    shift: Boolean\n  },\n  data: function data() {\n    return {\n      isActive: this.inputValue\n    };\n  },\n  computed: {\n    canScroll: function canScroll() {\n      return Scrollable.options.computed.canScroll.call(this) && (this.hideOnScroll || !this.inputValue);\n    },\n    classes: function classes() {\n      return {\n        'v-bottom-navigation--absolute': this.absolute,\n        'v-bottom-navigation--grow': this.grow,\n        'v-bottom-navigation--fixed': !this.absolute && (this.app || this.fixed),\n        'v-bottom-navigation--horizontal': this.horizontal,\n        'v-bottom-navigation--shift': this.shift\n      };\n    },\n    styles: function styles() {\n      return _objectSpread({}, this.measurableStyles, {\n        transform: this.isActive ? 'none' : 'translateY(100%)'\n      });\n    }\n  },\n  created: function created() {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('active')) {\n      breaking('active.sync', 'value or v-model', this);\n    }\n  },\n  methods: {\n    thresholdMet: function thresholdMet() {\n      this.isActive = !this.isScrollingUp;\n      this.$emit('update:input-value', this.isActive);\n    },\n    updateApplication: function updateApplication() {\n      return this.$el ? this.$el.clientHeight : 0;\n    },\n    updateValue: function updateValue(val) {\n      this.$emit('change', val);\n    }\n  },\n  render: function render(h) {\n    var data = this.setBackgroundColor(this.backgroundColor, {\n      staticClass: 'v-bottom-navigation',\n      class: this.classes,\n      style: this.styles,\n      props: {\n        activeClass: this.activeClass,\n        mandatory: Boolean(this.mandatory || this.value !== undefined),\n        value: this.internalValue\n      },\n      on: {\n        change: this.updateValue\n      }\n    });\n\n    if (this.canScroll) {\n      data.directives = data.directives || [];\n      data.directives.push({\n        arg: this.scrollTarget,\n        name: 'scroll',\n        value: this.onScroll\n      });\n    }\n\n    return h(ButtonGroup, this.setTextColor(this.color, data), this.$slots.default);\n  }\n});",{"version":3,"sources":["/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VBottomNavigation/VBottomNavigation.js"],"names":["Applicationable","ButtonGroup","Colorable","Measurable","Proxyable","Scrollable","Themeable","factory","ToggleableFactory","mixins","breaking","extend","name","props","activeClass","type","String","default","backgroundColor","grow","Boolean","height","Number","hideOnScroll","horizontal","inputValue","mandatory","shift","data","isActive","computed","canScroll","options","call","classes","absolute","app","fixed","styles","measurableStyles","transform","created","$attrs","hasOwnProperty","methods","thresholdMet","isScrollingUp","$emit","updateApplication","$el","clientHeight","updateValue","val","render","h","setBackgroundColor","staticClass","class","style","value","undefined","internalValue","on","change","directives","push","arg","scrollTarget","onScroll","setTextColor","color","$slots"],"mappings":"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","sourcesContent":["// Styles\nimport \"../../../src/components/VBottomNavigation/VBottomNavigation.sass\"; // Mixins\n\nimport Applicationable from '../../mixins/applicationable';\nimport ButtonGroup from '../../mixins/button-group';\nimport Colorable from '../../mixins/colorable';\nimport Measurable from '../../mixins/measurable';\nimport Proxyable from '../../mixins/proxyable';\nimport Scrollable from '../../mixins/scrollable';\nimport Themeable from '../../mixins/themeable';\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'; // Utilities\n\nimport mixins from '../../util/mixins';\nimport { breaking } from '../../util/console';\nexport default mixins(Applicationable('bottom', ['height', 'inputValue']), Colorable, Measurable, ToggleableFactory('inputValue'), Proxyable, Scrollable, Themeable\n/* @vue/component */\n).extend({\n  name: 'v-bottom-navigation',\n  props: {\n    activeClass: {\n      type: String,\n      default: 'v-btn--active'\n    },\n    backgroundColor: String,\n    grow: Boolean,\n    height: {\n      type: [Number, String],\n      default: 56\n    },\n    hideOnScroll: Boolean,\n    horizontal: Boolean,\n    inputValue: {\n      type: Boolean,\n      default: true\n    },\n    mandatory: Boolean,\n    shift: Boolean\n  },\n\n  data() {\n    return {\n      isActive: this.inputValue\n    };\n  },\n\n  computed: {\n    canScroll() {\n      return Scrollable.options.computed.canScroll.call(this) && (this.hideOnScroll || !this.inputValue);\n    },\n\n    classes() {\n      return {\n        'v-bottom-navigation--absolute': this.absolute,\n        'v-bottom-navigation--grow': this.grow,\n        'v-bottom-navigation--fixed': !this.absolute && (this.app || this.fixed),\n        'v-bottom-navigation--horizontal': this.horizontal,\n        'v-bottom-navigation--shift': this.shift\n      };\n    },\n\n    styles() {\n      return { ...this.measurableStyles,\n        transform: this.isActive ? 'none' : 'translateY(100%)'\n      };\n    }\n\n  },\n\n  created() {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('active')) {\n      breaking('active.sync', 'value or v-model', this);\n    }\n  },\n\n  methods: {\n    thresholdMet() {\n      this.isActive = !this.isScrollingUp;\n      this.$emit('update:input-value', this.isActive);\n    },\n\n    updateApplication() {\n      return this.$el ? this.$el.clientHeight : 0;\n    },\n\n    updateValue(val) {\n      this.$emit('change', val);\n    }\n\n  },\n\n  render(h) {\n    const data = this.setBackgroundColor(this.backgroundColor, {\n      staticClass: 'v-bottom-navigation',\n      class: this.classes,\n      style: this.styles,\n      props: {\n        activeClass: this.activeClass,\n        mandatory: Boolean(this.mandatory || this.value !== undefined),\n        value: this.internalValue\n      },\n      on: {\n        change: this.updateValue\n      }\n    });\n\n    if (this.canScroll) {\n      data.directives = data.directives || [];\n      data.directives.push({\n        arg: this.scrollTarget,\n        name: 'scroll',\n        value: this.onScroll\n      });\n    }\n\n    return h(ButtonGroup, this.setTextColor(this.color, data), this.$slots.default);\n  }\n\n});\n//# sourceMappingURL=VBottomNavigation.js.map"]}]}