{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/eslint-loader/index.js??ref--13-0!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/src/router/index.js","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/src/router/index.js","mtime":1617365331000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Vue from \"vue\";\nimport Router from \"vue-router\";\nimport Login from \"../pages/Login\";\nimport Dashboard from \"../pages/Dashboard\";\nimport LibrarySearch from \"../pages/LibrarySearch\";\nimport store from \"../state\";\nimport { getLanguageCode } from \"../plugins/language\";\nimport _ from \"lodash\";\nVue.use(Router);\nvar router = new Router({\n  routes: [{\n    path: \"/login\",\n    name: \"Login\",\n    component: Login,\n    meta: {\n      guest: true\n    }\n  }, {\n    path: \"/librarySearch\",\n    name: \"LibrarySearch\",\n    component: LibrarySearch\n  }, {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    component: Dashboard,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: \"/\",\n    redirect: \"/login\"\n  }]\n});\nrouter.beforeEach(function (to, from, next) {\n  var isLoggedIn = !_.isEmpty(store.state.auth);\n  var isPrivatePage = to.matched.some(function (record) {\n    return record.meta.requiresAuth;\n  });\n  var isGuestPage = to.matched.some(function (record) {\n    return record.meta.guest;\n  });\n  var lang = getLanguageCode(from.query.lang || store.state.currentLanguage || 'en'); // Redirect unauthenticated users to the login page if they are trying to\n  // access a page that requires authentication.\n\n  if ((isPrivatePage || !to.matched.length) && !isLoggedIn) {\n    return next({\n      path: \"/login\",\n      query: {\n        nextUrl: to.fullPath,\n        lang: lang\n      }\n    });\n  } // Prevent users from accessing the login page if they are already\n  // authenticated.\n\n\n  if ((isGuestPage || !to.matched.length) && isLoggedIn) {\n    return next({\n      path: \"/dashboard\",\n      query: {\n        lang: lang\n      }\n    });\n  } // Evaluates to true if the lang parameter is set to just 'en' instead of\n  // 'en_US'.\n\n\n  var isShortLangCode = to.query.lang && to.query.lang.length < 5; // When navigating to a page, make sure that the current language is persisted\n  // in the URL.\n\n  if (to && !to.query.lang || isShortLangCode) {\n    return next(_objectSpread({}, to, {\n      path: to.path,\n      query: _objectSpread({}, to.query, {\n        lang: lang\n      }),\n      params: to.params\n    }));\n  }\n\n  return next();\n});\nexport default router;",{"version":3,"sources":["/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/src/router/index.js"],"names":["Vue","Router","Login","Dashboard","LibrarySearch","store","getLanguageCode","_","use","router","routes","path","name","component","meta","guest","requiresAuth","redirect","beforeEach","to","from","next","isLoggedIn","isEmpty","state","auth","isPrivatePage","matched","some","record","isGuestPage","lang","query","currentLanguage","length","nextUrl","fullPath","isShortLangCode","params"],"mappings":"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","sourcesContent":["import Vue from \"vue\";\nimport Router from \"vue-router\";\nimport Login from \"../pages/Login\";\nimport Dashboard from \"../pages/Dashboard\";\nimport LibrarySearch from \"../pages/LibrarySearch\";\nimport store from \"../state\";\nimport { getLanguageCode } from '../plugins/language';\nimport _ from \"lodash\";\n\nVue.use(Router);\n\nlet router = new Router({\n  routes: [\n    {\n      path: \"/login\",\n      name: \"Login\",\n      component: Login,\n      meta: {\n        guest: true,\n      },\n    },\n    {\n      path: \"/librarySearch\",\n      name: \"LibrarySearch\",\n      component: LibrarySearch,\n    },\n    {\n      path: \"/dashboard\",\n      name: \"Dashboard\",\n      component: Dashboard,\n      meta: {\n        requiresAuth: true,\n      },\n    },\n    {\n      path: \"/\",\n      redirect: \"/login\",\n    },\n  ],\n});\n\nrouter.beforeEach((to, from, next) => {\n  const isLoggedIn = !_.isEmpty(store.state.auth);\n  const isPrivatePage = to.matched.some((record) => record.meta.requiresAuth);\n  const isGuestPage = to.matched.some((record) => record.meta.guest);\n  const lang = getLanguageCode(\n    from.query.lang || store.state.currentLanguage || 'en'\n  );\n\n  // Redirect unauthenticated users to the login page if they are trying to\n  // access a page that requires authentication.\n  if ( (isPrivatePage || !to.matched.length) && !isLoggedIn) {\n    return next({\n      path: \"/login\",\n      query: { nextUrl: to.fullPath, lang },\n    });\n  } \n\n  // Prevent users from accessing the login page if they are already\n  // authenticated.\n  if ( (isGuestPage || !to.matched.length) && isLoggedIn) {\n    return next({ path: \"/dashboard\", query: { lang }});\n  } \n\n  // Evaluates to true if the lang parameter is set to just 'en' instead of\n  // 'en_US'.\n  const isShortLangCode =  to.query.lang && to.query.lang.length < 5;\n  \n  // When navigating to a page, make sure that the current language is persisted\n  // in the URL.\n  if (to && !to.query.lang || isShortLangCode) {\n    return next({\n      ...to,\n      path: to.path,\n      query: { ...to.query, lang },\n      params: to.params,\n    });\n  } \n  return next();\n});\n\nexport default router;\n"]}]}