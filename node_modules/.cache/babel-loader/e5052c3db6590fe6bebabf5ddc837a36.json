{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VOverflowBtn/VOverflowBtn.js","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VOverflowBtn/VOverflowBtn.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find\";\nimport _defineProperty from \"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Styles\nimport \"../../../src/components/VOverflowBtn/VOverflowBtn.sass\"; // Extensions\n\nimport VSelect from \"../VSelect/VSelect\";\nimport VAutocomplete from \"../VAutocomplete\";\nimport VTextField from \"../VTextField/VTextField\"; // Components\n\nimport VBtn from \"../VBtn\"; // Utilities\n\nimport { consoleWarn } from \"../../util/console\";\n/* @vue/component */\n\nexport default VAutocomplete.extend({\n  name: 'v-overflow-btn',\n  props: {\n    editable: Boolean,\n    segmented: Boolean\n  },\n  computed: {\n    classes: function classes() {\n      return _objectSpread({}, VAutocomplete.options.computed.classes.call(this), {\n        'v-overflow-btn': true,\n        'v-overflow-btn--segmented': this.segmented,\n        'v-overflow-btn--editable': this.editable\n      });\n    },\n    isAnyValueAllowed: function isAnyValueAllowed() {\n      return this.editable || VAutocomplete.options.computed.isAnyValueAllowed.call(this);\n    },\n    isSingle: function isSingle() {\n      return true;\n    },\n    computedItems: function computedItems() {\n      return this.segmented ? this.allItems : this.filteredItems;\n    }\n  },\n  methods: {\n    genSelections: function genSelections() {\n      return this.editable ? VAutocomplete.options.methods.genSelections.call(this) : VSelect.options.methods.genSelections.call(this); // Override v-autocomplete's override\n    },\n    genCommaSelection: function genCommaSelection(item, index, last) {\n      return this.segmented ? this.genSegmentedBtn(item) : VSelect.options.methods.genCommaSelection.call(this, item, index, last);\n    },\n    genInput: function genInput() {\n      var input = VTextField.options.methods.genInput.call(this);\n      input.data = input.data || {};\n      input.data.domProps.value = this.editable ? this.internalSearch : '';\n      input.data.attrs.readonly = !this.isAnyValueAllowed;\n      return input;\n    },\n    genLabel: function genLabel() {\n      if (this.editable && this.isFocused) return null;\n      var label = VTextField.options.methods.genLabel.call(this);\n      if (!label) return label;\n      label.data = label.data || {}; // Reset previously set styles from parent\n\n      label.data.style = {};\n      return label;\n    },\n    genSegmentedBtn: function genSegmentedBtn(item) {\n      var _this = this;\n\n      var itemValue = this.getValue(item);\n      var itemObj = this.computedItems.find(function (i) {\n        return _this.getValue(i) === itemValue;\n      }) || item;\n\n      if (!itemObj.text || !itemObj.callback) {\n        consoleWarn('When using \\'segmented\\' prop without a selection slot, items must contain both a text and callback property', this);\n        return null;\n      }\n\n      return this.$createElement(VBtn, {\n        props: {\n          text: true\n        },\n        on: {\n          click: function click(e) {\n            e.stopPropagation();\n            itemObj.callback(e);\n          }\n        }\n      }, [itemObj.text]);\n    },\n    updateValue: function updateValue(val) {\n      if (val) {\n        this.initialValue = this.lazyValue;\n      } else if (this.initialValue !== this.lazyValue) {\n        this.$emit('change', this.lazyValue);\n      }\n    }\n  }\n});",{"version":3,"sources":["/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VOverflowBtn/VOverflowBtn.js"],"names":["VSelect","VAutocomplete","VTextField","VBtn","consoleWarn","extend","name","props","editable","Boolean","segmented","computed","classes","options","call","isAnyValueAllowed","isSingle","computedItems","allItems","filteredItems","methods","genSelections","genCommaSelection","item","index","last","genSegmentedBtn","genInput","input","data","domProps","value","internalSearch","attrs","readonly","genLabel","isFocused","label","style","itemValue","getValue","itemObj","find","i","text","callback","$createElement","on","click","e","stopPropagation","updateValue","val","initialValue","lazyValue","$emit"],"mappings":"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","sourcesContent":["// Styles\nimport \"../../../src/components/VOverflowBtn/VOverflowBtn.sass\"; // Extensions\n\nimport VSelect from '../VSelect/VSelect';\nimport VAutocomplete from '../VAutocomplete';\nimport VTextField from '../VTextField/VTextField'; // Components\n\nimport VBtn from '../VBtn'; // Utilities\n\nimport { consoleWarn } from '../../util/console';\n/* @vue/component */\n\nexport default VAutocomplete.extend({\n  name: 'v-overflow-btn',\n  props: {\n    editable: Boolean,\n    segmented: Boolean\n  },\n  computed: {\n    classes() {\n      return { ...VAutocomplete.options.computed.classes.call(this),\n        'v-overflow-btn': true,\n        'v-overflow-btn--segmented': this.segmented,\n        'v-overflow-btn--editable': this.editable\n      };\n    },\n\n    isAnyValueAllowed() {\n      return this.editable || VAutocomplete.options.computed.isAnyValueAllowed.call(this);\n    },\n\n    isSingle() {\n      return true;\n    },\n\n    computedItems() {\n      return this.segmented ? this.allItems : this.filteredItems;\n    }\n\n  },\n  methods: {\n    genSelections() {\n      return this.editable ? VAutocomplete.options.methods.genSelections.call(this) : VSelect.options.methods.genSelections.call(this); // Override v-autocomplete's override\n    },\n\n    genCommaSelection(item, index, last) {\n      return this.segmented ? this.genSegmentedBtn(item) : VSelect.options.methods.genCommaSelection.call(this, item, index, last);\n    },\n\n    genInput() {\n      const input = VTextField.options.methods.genInput.call(this);\n      input.data = input.data || {};\n      input.data.domProps.value = this.editable ? this.internalSearch : '';\n      input.data.attrs.readonly = !this.isAnyValueAllowed;\n      return input;\n    },\n\n    genLabel() {\n      if (this.editable && this.isFocused) return null;\n      const label = VTextField.options.methods.genLabel.call(this);\n      if (!label) return label;\n      label.data = label.data || {}; // Reset previously set styles from parent\n\n      label.data.style = {};\n      return label;\n    },\n\n    genSegmentedBtn(item) {\n      const itemValue = this.getValue(item);\n      const itemObj = this.computedItems.find(i => this.getValue(i) === itemValue) || item;\n\n      if (!itemObj.text || !itemObj.callback) {\n        consoleWarn('When using \\'segmented\\' prop without a selection slot, items must contain both a text and callback property', this);\n        return null;\n      }\n\n      return this.$createElement(VBtn, {\n        props: {\n          text: true\n        },\n        on: {\n          click(e) {\n            e.stopPropagation();\n            itemObj.callback(e);\n          }\n\n        }\n      }, [itemObj.text]);\n    },\n\n    updateValue(val) {\n      if (val) {\n        this.initialValue = this.lazyValue;\n      } else if (this.initialValue !== this.lazyValue) {\n        this.$emit('change', this.lazyValue);\n      }\n    }\n\n  }\n});\n//# sourceMappingURL=VOverflowBtn.js.map"]}]}