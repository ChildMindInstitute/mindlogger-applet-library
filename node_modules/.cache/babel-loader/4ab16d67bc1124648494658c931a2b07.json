{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VTreeview/VTreeviewNode.js","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VTreeview/VTreeviewNode.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _toConsumableArray from \"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.number.constructor\";\nimport _defineProperty from \"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Components\nimport { VExpandTransition } from \"../transitions\";\nimport { VIcon } from \"../VIcon\"; // Mixins\n\nimport { inject as RegistrableInject } from \"../../mixins/registrable\";\nimport Colorable from \"../../mixins/colorable\"; // Utils\n\nimport mixins from \"../../util/mixins\";\nimport { getObjectValueByPath, createRange } from \"../../util/helpers\";\nvar baseMixins = mixins(Colorable, RegistrableInject('treeview'));\nexport var VTreeviewNodeProps = {\n  activatable: Boolean,\n  activeClass: {\n    type: String,\n    default: 'v-treeview-node--active'\n  },\n  color: {\n    type: String,\n    default: 'primary'\n  },\n  expandIcon: {\n    type: String,\n    default: '$subgroup'\n  },\n  indeterminateIcon: {\n    type: String,\n    default: '$checkboxIndeterminate'\n  },\n  itemChildren: {\n    type: String,\n    default: 'children'\n  },\n  itemDisabled: {\n    type: String,\n    default: 'disabled'\n  },\n  itemKey: {\n    type: String,\n    default: 'id'\n  },\n  itemText: {\n    type: String,\n    default: 'name'\n  },\n  loadChildren: Function,\n  loadingIcon: {\n    type: String,\n    default: '$loading'\n  },\n  offIcon: {\n    type: String,\n    default: '$checkboxOff'\n  },\n  onIcon: {\n    type: String,\n    default: '$checkboxOn'\n  },\n  openOnClick: Boolean,\n  rounded: Boolean,\n  selectable: Boolean,\n  selectedColor: {\n    type: String,\n    default: 'accent'\n  },\n  shaped: Boolean,\n  transition: Boolean,\n  selectionType: {\n    type: String,\n    default: 'leaf',\n    validator: function validator(v) {\n      return ['leaf', 'independent'].includes(v);\n    }\n  }\n};\n/* @vue/component */\n\nvar VTreeviewNode = baseMixins.extend().extend({\n  name: 'v-treeview-node',\n  inject: {\n    treeview: {\n      default: null\n    }\n  },\n  props: _objectSpread({\n    level: Number,\n    item: {\n      type: Object,\n      default: function _default() {\n        return null;\n      }\n    },\n    parentIsDisabled: Boolean\n  }, VTreeviewNodeProps),\n  data: function data() {\n    return {\n      hasLoaded: false,\n      isActive: false,\n      isIndeterminate: false,\n      isLoading: false,\n      isOpen: false,\n      isSelected: false\n    };\n  },\n  computed: {\n    disabled: function disabled() {\n      return getObjectValueByPath(this.item, this.itemDisabled) || this.parentIsDisabled && this.selectionType === 'leaf';\n    },\n    key: function key() {\n      return getObjectValueByPath(this.item, this.itemKey);\n    },\n    children: function children() {\n      return getObjectValueByPath(this.item, this.itemChildren);\n    },\n    text: function text() {\n      return getObjectValueByPath(this.item, this.itemText);\n    },\n    scopedProps: function scopedProps() {\n      return {\n        item: this.item,\n        leaf: !this.children,\n        selected: this.isSelected,\n        indeterminate: this.isIndeterminate,\n        active: this.isActive,\n        open: this.isOpen\n      };\n    },\n    computedIcon: function computedIcon() {\n      if (this.isIndeterminate) return this.indeterminateIcon;else if (this.isSelected) return this.onIcon;else return this.offIcon;\n    },\n    hasChildren: function hasChildren() {\n      return !!this.children && (!!this.children.length || !!this.loadChildren);\n    }\n  },\n  created: function created() {\n    this.treeview.register(this);\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.treeview.unregister(this);\n  },\n  methods: {\n    checkChildren: function checkChildren() {\n      var _this = this;\n\n      return new Promise(function (resolve) {\n        // TODO: Potential issue with always trying\n        // to load children if response is empty?\n        if (!_this.children || _this.children.length || !_this.loadChildren || _this.hasLoaded) return resolve();\n        _this.isLoading = true;\n        resolve(_this.loadChildren(_this.item));\n      }).then(function () {\n        _this.isLoading = false;\n        _this.hasLoaded = true;\n      });\n    },\n    open: function open() {\n      this.isOpen = !this.isOpen;\n      this.treeview.updateOpen(this.key, this.isOpen);\n      this.treeview.emitOpen();\n    },\n    genLabel: function genLabel() {\n      var children = [];\n      if (this.$scopedSlots.label) children.push(this.$scopedSlots.label(this.scopedProps));else children.push(this.text);\n      return this.$createElement('div', {\n        slot: 'label',\n        staticClass: 'v-treeview-node__label'\n      }, children);\n    },\n    genPrependSlot: function genPrependSlot() {\n      if (!this.$scopedSlots.prepend) return null;\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__prepend'\n      }, this.$scopedSlots.prepend(this.scopedProps));\n    },\n    genAppendSlot: function genAppendSlot() {\n      if (!this.$scopedSlots.append) return null;\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__append'\n      }, this.$scopedSlots.append(this.scopedProps));\n    },\n    genContent: function genContent() {\n      var children = [this.genPrependSlot(), this.genLabel(), this.genAppendSlot()];\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__content'\n      }, children);\n    },\n    genToggle: function genToggle() {\n      var _this2 = this;\n\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__toggle',\n        class: {\n          'v-treeview-node__toggle--open': this.isOpen,\n          'v-treeview-node__toggle--loading': this.isLoading\n        },\n        slot: 'prepend',\n        on: {\n          click: function click(e) {\n            e.stopPropagation();\n            if (_this2.isLoading) return;\n\n            _this2.checkChildren().then(function () {\n              return _this2.open();\n            });\n          }\n        }\n      }, [this.isLoading ? this.loadingIcon : this.expandIcon]);\n    },\n    genCheckbox: function genCheckbox() {\n      var _this3 = this;\n\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__checkbox',\n        props: {\n          color: this.isSelected || this.isIndeterminate ? this.selectedColor : undefined,\n          disabled: this.disabled\n        },\n        on: {\n          click: function click(e) {\n            e.stopPropagation();\n            if (_this3.isLoading) return;\n\n            _this3.checkChildren().then(function () {\n              // We nextTick here so that items watch in VTreeview has a chance to run first\n              _this3.$nextTick(function () {\n                _this3.isSelected = !_this3.isSelected;\n                _this3.isIndeterminate = false;\n\n                _this3.treeview.updateSelected(_this3.key, _this3.isSelected);\n\n                _this3.treeview.emitSelected();\n              });\n            });\n          }\n        }\n      }, [this.computedIcon]);\n    },\n    genLevel: function genLevel(level) {\n      var _this4 = this;\n\n      return createRange(level).map(function () {\n        return _this4.$createElement('div', {\n          staticClass: 'v-treeview-node__level'\n        });\n      });\n    },\n    genNode: function genNode() {\n      var _this5 = this;\n\n      var children = [this.genContent()];\n      if (this.selectable) children.unshift(this.genCheckbox());\n\n      if (this.hasChildren) {\n        children.unshift(this.genToggle());\n      } else {\n        children.unshift.apply(children, _toConsumableArray(this.genLevel(1)));\n      }\n\n      children.unshift.apply(children, _toConsumableArray(this.genLevel(this.level)));\n      return this.$createElement('div', this.setTextColor(this.isActive && this.color, {\n        staticClass: 'v-treeview-node__root',\n        class: _defineProperty({}, this.activeClass, this.isActive),\n        on: {\n          click: function click() {\n            if (_this5.openOnClick && _this5.hasChildren) {\n              _this5.checkChildren().then(_this5.open);\n            } else if (_this5.activatable && !_this5.disabled) {\n              _this5.isActive = !_this5.isActive;\n\n              _this5.treeview.updateActive(_this5.key, _this5.isActive);\n\n              _this5.treeview.emitActive();\n            }\n          }\n        }\n      }), children);\n    },\n    genChild: function genChild(item, parentIsDisabled) {\n      return this.$createElement(VTreeviewNode, {\n        key: getObjectValueByPath(item, this.itemKey),\n        props: {\n          activatable: this.activatable,\n          activeClass: this.activeClass,\n          item: item,\n          selectable: this.selectable,\n          selectedColor: this.selectedColor,\n          color: this.color,\n          expandIcon: this.expandIcon,\n          indeterminateIcon: this.indeterminateIcon,\n          offIcon: this.offIcon,\n          onIcon: this.onIcon,\n          loadingIcon: this.loadingIcon,\n          itemKey: this.itemKey,\n          itemText: this.itemText,\n          itemDisabled: this.itemDisabled,\n          itemChildren: this.itemChildren,\n          loadChildren: this.loadChildren,\n          transition: this.transition,\n          openOnClick: this.openOnClick,\n          rounded: this.rounded,\n          shaped: this.shaped,\n          level: this.level + 1,\n          selectionType: this.selectionType,\n          parentIsDisabled: parentIsDisabled\n        },\n        scopedSlots: this.$scopedSlots\n      });\n    },\n    genChildrenWrapper: function genChildrenWrapper() {\n      var _this6 = this;\n\n      if (!this.isOpen || !this.children) return null;\n      var children = [this.children.map(function (c) {\n        return _this6.genChild(c, _this6.disabled);\n      })];\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__children'\n      }, children);\n    },\n    genTransition: function genTransition() {\n      return this.$createElement(VExpandTransition, [this.genChildrenWrapper()]);\n    }\n  },\n  render: function render(h) {\n    var children = [this.genNode()];\n    if (this.transition) children.push(this.genTransition());else children.push(this.genChildrenWrapper());\n    return h('div', {\n      staticClass: 'v-treeview-node',\n      class: {\n        'v-treeview-node--leaf': !this.hasChildren,\n        'v-treeview-node--click': this.openOnClick,\n        'v-treeview-node--disabled': this.disabled,\n        'v-treeview-node--rounded': this.rounded,\n        'v-treeview-node--shaped': this.shaped,\n        'v-treeview-node--selected': this.isSelected,\n        'v-treeview-node--excluded': this.treeview.isExcluded(this.key)\n      },\n      attrs: {\n        'aria-expanded': String(this.isOpen)\n      }\n    }, children);\n  }\n});\nexport default VTreeviewNode;",{"version":3,"sources":["/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify/lib/components/VTreeview/VTreeviewNode.js"],"names":["VExpandTransition","VIcon","inject","RegistrableInject","Colorable","mixins","getObjectValueByPath","createRange","baseMixins","VTreeviewNodeProps","activatable","Boolean","activeClass","type","String","default","color","expandIcon","indeterminateIcon","itemChildren","itemDisabled","itemKey","itemText","loadChildren","Function","loadingIcon","offIcon","onIcon","openOnClick","rounded","selectable","selectedColor","shaped","transition","selectionType","validator","v","includes","VTreeviewNode","extend","name","treeview","props","level","Number","item","Object","parentIsDisabled","data","hasLoaded","isActive","isIndeterminate","isLoading","isOpen","isSelected","computed","disabled","key","children","text","scopedProps","leaf","selected","indeterminate","active","open","computedIcon","hasChildren","length","created","register","beforeDestroy","unregister","methods","checkChildren","Promise","resolve","then","updateOpen","emitOpen","genLabel","$scopedSlots","label","push","$createElement","slot","staticClass","genPrependSlot","prepend","genAppendSlot","append","genContent","genToggle","class","on","click","e","stopPropagation","genCheckbox","undefined","$nextTick","updateSelected","emitSelected","genLevel","map","genNode","unshift","setTextColor","updateActive","emitActive","genChild","scopedSlots","genChildrenWrapper","c","genTransition","render","h","isExcluded","attrs"],"mappings":"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","sourcesContent":["// Components\nimport { VExpandTransition } from '../transitions';\nimport { VIcon } from '../VIcon'; // Mixins\n\nimport { inject as RegistrableInject } from '../../mixins/registrable';\nimport Colorable from '../../mixins/colorable'; // Utils\n\nimport mixins from '../../util/mixins';\nimport { getObjectValueByPath, createRange } from '../../util/helpers';\nconst baseMixins = mixins(Colorable, RegistrableInject('treeview'));\nexport const VTreeviewNodeProps = {\n  activatable: Boolean,\n  activeClass: {\n    type: String,\n    default: 'v-treeview-node--active'\n  },\n  color: {\n    type: String,\n    default: 'primary'\n  },\n  expandIcon: {\n    type: String,\n    default: '$subgroup'\n  },\n  indeterminateIcon: {\n    type: String,\n    default: '$checkboxIndeterminate'\n  },\n  itemChildren: {\n    type: String,\n    default: 'children'\n  },\n  itemDisabled: {\n    type: String,\n    default: 'disabled'\n  },\n  itemKey: {\n    type: String,\n    default: 'id'\n  },\n  itemText: {\n    type: String,\n    default: 'name'\n  },\n  loadChildren: Function,\n  loadingIcon: {\n    type: String,\n    default: '$loading'\n  },\n  offIcon: {\n    type: String,\n    default: '$checkboxOff'\n  },\n  onIcon: {\n    type: String,\n    default: '$checkboxOn'\n  },\n  openOnClick: Boolean,\n  rounded: Boolean,\n  selectable: Boolean,\n  selectedColor: {\n    type: String,\n    default: 'accent'\n  },\n  shaped: Boolean,\n  transition: Boolean,\n  selectionType: {\n    type: String,\n    default: 'leaf',\n    validator: v => ['leaf', 'independent'].includes(v)\n  }\n};\n/* @vue/component */\n\nconst VTreeviewNode = baseMixins.extend().extend({\n  name: 'v-treeview-node',\n  inject: {\n    treeview: {\n      default: null\n    }\n  },\n  props: {\n    level: Number,\n    item: {\n      type: Object,\n      default: () => null\n    },\n    parentIsDisabled: Boolean,\n    ...VTreeviewNodeProps\n  },\n  data: () => ({\n    hasLoaded: false,\n    isActive: false,\n    isIndeterminate: false,\n    isLoading: false,\n    isOpen: false,\n    isSelected: false\n  }),\n  computed: {\n    disabled() {\n      return getObjectValueByPath(this.item, this.itemDisabled) || this.parentIsDisabled && this.selectionType === 'leaf';\n    },\n\n    key() {\n      return getObjectValueByPath(this.item, this.itemKey);\n    },\n\n    children() {\n      return getObjectValueByPath(this.item, this.itemChildren);\n    },\n\n    text() {\n      return getObjectValueByPath(this.item, this.itemText);\n    },\n\n    scopedProps() {\n      return {\n        item: this.item,\n        leaf: !this.children,\n        selected: this.isSelected,\n        indeterminate: this.isIndeterminate,\n        active: this.isActive,\n        open: this.isOpen\n      };\n    },\n\n    computedIcon() {\n      if (this.isIndeterminate) return this.indeterminateIcon;else if (this.isSelected) return this.onIcon;else return this.offIcon;\n    },\n\n    hasChildren() {\n      return !!this.children && (!!this.children.length || !!this.loadChildren);\n    }\n\n  },\n\n  created() {\n    this.treeview.register(this);\n  },\n\n  beforeDestroy() {\n    this.treeview.unregister(this);\n  },\n\n  methods: {\n    checkChildren() {\n      return new Promise(resolve => {\n        // TODO: Potential issue with always trying\n        // to load children if response is empty?\n        if (!this.children || this.children.length || !this.loadChildren || this.hasLoaded) return resolve();\n        this.isLoading = true;\n        resolve(this.loadChildren(this.item));\n      }).then(() => {\n        this.isLoading = false;\n        this.hasLoaded = true;\n      });\n    },\n\n    open() {\n      this.isOpen = !this.isOpen;\n      this.treeview.updateOpen(this.key, this.isOpen);\n      this.treeview.emitOpen();\n    },\n\n    genLabel() {\n      const children = [];\n      if (this.$scopedSlots.label) children.push(this.$scopedSlots.label(this.scopedProps));else children.push(this.text);\n      return this.$createElement('div', {\n        slot: 'label',\n        staticClass: 'v-treeview-node__label'\n      }, children);\n    },\n\n    genPrependSlot() {\n      if (!this.$scopedSlots.prepend) return null;\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__prepend'\n      }, this.$scopedSlots.prepend(this.scopedProps));\n    },\n\n    genAppendSlot() {\n      if (!this.$scopedSlots.append) return null;\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__append'\n      }, this.$scopedSlots.append(this.scopedProps));\n    },\n\n    genContent() {\n      const children = [this.genPrependSlot(), this.genLabel(), this.genAppendSlot()];\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__content'\n      }, children);\n    },\n\n    genToggle() {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__toggle',\n        class: {\n          'v-treeview-node__toggle--open': this.isOpen,\n          'v-treeview-node__toggle--loading': this.isLoading\n        },\n        slot: 'prepend',\n        on: {\n          click: e => {\n            e.stopPropagation();\n            if (this.isLoading) return;\n            this.checkChildren().then(() => this.open());\n          }\n        }\n      }, [this.isLoading ? this.loadingIcon : this.expandIcon]);\n    },\n\n    genCheckbox() {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__checkbox',\n        props: {\n          color: this.isSelected || this.isIndeterminate ? this.selectedColor : undefined,\n          disabled: this.disabled\n        },\n        on: {\n          click: e => {\n            e.stopPropagation();\n            if (this.isLoading) return;\n            this.checkChildren().then(() => {\n              // We nextTick here so that items watch in VTreeview has a chance to run first\n              this.$nextTick(() => {\n                this.isSelected = !this.isSelected;\n                this.isIndeterminate = false;\n                this.treeview.updateSelected(this.key, this.isSelected);\n                this.treeview.emitSelected();\n              });\n            });\n          }\n        }\n      }, [this.computedIcon]);\n    },\n\n    genLevel(level) {\n      return createRange(level).map(() => this.$createElement('div', {\n        staticClass: 'v-treeview-node__level'\n      }));\n    },\n\n    genNode() {\n      const children = [this.genContent()];\n      if (this.selectable) children.unshift(this.genCheckbox());\n\n      if (this.hasChildren) {\n        children.unshift(this.genToggle());\n      } else {\n        children.unshift(...this.genLevel(1));\n      }\n\n      children.unshift(...this.genLevel(this.level));\n      return this.$createElement('div', this.setTextColor(this.isActive && this.color, {\n        staticClass: 'v-treeview-node__root',\n        class: {\n          [this.activeClass]: this.isActive\n        },\n        on: {\n          click: () => {\n            if (this.openOnClick && this.hasChildren) {\n              this.checkChildren().then(this.open);\n            } else if (this.activatable && !this.disabled) {\n              this.isActive = !this.isActive;\n              this.treeview.updateActive(this.key, this.isActive);\n              this.treeview.emitActive();\n            }\n          }\n        }\n      }), children);\n    },\n\n    genChild(item, parentIsDisabled) {\n      return this.$createElement(VTreeviewNode, {\n        key: getObjectValueByPath(item, this.itemKey),\n        props: {\n          activatable: this.activatable,\n          activeClass: this.activeClass,\n          item,\n          selectable: this.selectable,\n          selectedColor: this.selectedColor,\n          color: this.color,\n          expandIcon: this.expandIcon,\n          indeterminateIcon: this.indeterminateIcon,\n          offIcon: this.offIcon,\n          onIcon: this.onIcon,\n          loadingIcon: this.loadingIcon,\n          itemKey: this.itemKey,\n          itemText: this.itemText,\n          itemDisabled: this.itemDisabled,\n          itemChildren: this.itemChildren,\n          loadChildren: this.loadChildren,\n          transition: this.transition,\n          openOnClick: this.openOnClick,\n          rounded: this.rounded,\n          shaped: this.shaped,\n          level: this.level + 1,\n          selectionType: this.selectionType,\n          parentIsDisabled\n        },\n        scopedSlots: this.$scopedSlots\n      });\n    },\n\n    genChildrenWrapper() {\n      if (!this.isOpen || !this.children) return null;\n      const children = [this.children.map(c => this.genChild(c, this.disabled))];\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__children'\n      }, children);\n    },\n\n    genTransition() {\n      return this.$createElement(VExpandTransition, [this.genChildrenWrapper()]);\n    }\n\n  },\n\n  render(h) {\n    const children = [this.genNode()];\n    if (this.transition) children.push(this.genTransition());else children.push(this.genChildrenWrapper());\n    return h('div', {\n      staticClass: 'v-treeview-node',\n      class: {\n        'v-treeview-node--leaf': !this.hasChildren,\n        'v-treeview-node--click': this.openOnClick,\n        'v-treeview-node--disabled': this.disabled,\n        'v-treeview-node--rounded': this.rounded,\n        'v-treeview-node--shaped': this.shaped,\n        'v-treeview-node--selected': this.isSelected,\n        'v-treeview-node--excluded': this.treeview.isExcluded(this.key)\n      },\n      attrs: {\n        'aria-expanded': String(this.isOpen)\n      }\n    }, children);\n  }\n\n});\nexport default VTreeviewNode;\n//# sourceMappingURL=VTreeviewNode.js.map"]}]}