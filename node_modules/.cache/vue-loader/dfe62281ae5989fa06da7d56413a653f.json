{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/dayspan-vuetify-2/src/components/CalendarEventTime.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/dayspan-vuetify-2/src/components/CalendarEventTime.vue","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { Day, Constants, CalendarEvent, Calendar, Functions as fn } from 'dayspan'\r\n\r\nexport default {\r\n\r\n    name: 'dsCalendarEventTime',\r\n\r\n    props:\r\n        {\r\n            calendarEvent:\r\n                {\r\n                    required: true,\r\n                    type: CalendarEvent\r\n                },\r\n\r\n            calendar:\r\n                {\r\n                    required: true,\r\n                    type: Calendar\r\n                },\r\n\r\n            popoverProps:\r\n                {\r\n                    validate (x) {\r\n                        return this.$dsValidate(x, 'popoverProps')\r\n                    },\r\n                    default () {\r\n                        return this.$dsDefaults().popoverProps\r\n                    }\r\n                },\r\n\r\n            isPlaceholderWithDay:\r\n                {\r\n                    type: Day\r\n                }\r\n        },\r\n\r\n    computed:\r\n        {\r\n            style () {\r\n                return this.isPlaceholderWithDay ?\r\n                    this.$dayspan.getStylePlaceholderTimed(this.details, this.calendarEvent, this.isPlaceholderWithDay) :\r\n                    this.$dayspan.getStyleTimed(this.details, this.calendarEvent)\r\n            },\r\n\r\n            showName () {\r\n                return this.calendarEvent.starting || (\r\n                    this.calendar &&\r\n                    !this.calendar.span.contains(this.calendarEvent.time.start)\r\n                )\r\n            },\r\n\r\n            hasPopover () {\r\n                return !!this.$scopedSlots.eventPopover\r\n            },\r\n\r\n            hasIcon () {\r\n                return !!(this.$dayspan.supports.icon && this.details.icon)\r\n            },\r\n\r\n            contentClass () {\r\n                return this.$dayspan.fullscreenPopovers ? 'ds-fullscreen' : ''\r\n            },\r\n\r\n            details () {\r\n                return this.calendarEvent.event.data\r\n            }\r\n        },\r\n\r\n    data: vm => ({\r\n        menu: false\r\n    }),\r\n\r\n    methods:\r\n        {\r\n            close () {\r\n                this.menu = false\r\n            },\r\n\r\n            edit () {\r\n                if (this.handlesEvents()) {\r\n                    this.$emit('edit', this.calendarEvent)\r\n                }\r\n            },\r\n\r\n            editCheck ($event) {\r\n                if (this.handlesEvents($event)) {\r\n                    if (!this.hasPopover) {\r\n                        this.edit()\r\n                    } else {\r\n                        this.menu = !this.menu\r\n                    }\r\n                }\r\n            },\r\n\r\n            mouseEnterEvent ($event) {\r\n                if (this.handlesEvents($event)) {\r\n                    this.$emit('mouse-enter-event', this.getEvent('mouse-enter-event', $event))\r\n                }\r\n            },\r\n\r\n            mouseLeaveEvent ($event) {\r\n                if (this.handlesEvents($event)) {\r\n                    this.$emit('mouse-leave-event', this.getEvent('mouse-leave-event', $event))\r\n                }\r\n            },\r\n\r\n            mouseDownEvent ($event) {\r\n                if (this.handlesEvents($event)) {\r\n                    this.$emit('mouse-down-event', this.getEvent('mouse-down-event', $event))\r\n                }\r\n            },\r\n\r\n            mouseUpEvent ($event) {\r\n                if (this.handlesEvents($event)) {\r\n                    this.$emit('mouse-up-event', this.getEvent('mouse-up-event', $event))\r\n                }\r\n            },\r\n\r\n            handlesEvents ($event) {\r\n                var handles = !this.isPlaceholderWithDay\r\n\r\n                if (handles && $event) {\r\n                    $event.stopPropagation()\r\n                }\r\n\r\n                return handles\r\n            },\r\n\r\n            getEvent (type, $event, extra = {}) {\r\n                return fn.extend({\r\n\r\n                    type: type,\r\n                    calendarEvent: this.calendarEvent,\r\n                    calendar: this.calendar,\r\n                    details: this.details,\r\n                    offset: this.getRelativeTimeAt($event),\r\n                    left: $event.button === 0,\r\n                    right: $event.button === 1,\r\n                    handled: false,\r\n                    $event: $event,\r\n                    $vm: this,\r\n                    $element: this.$el\r\n\r\n                }, extra)\r\n            },\r\n\r\n            getRelativeTimeAt ($event) {\r\n                var bounds = this.$el.getBoundingClientRect()\r\n                var y = ($event.clientY - bounds.y) / this.$dayspan.dayHeight\r\n                var millis = y * Constants.MILLIS_IN_DAY\r\n\r\n                return millis\r\n            }\r\n        }\r\n}\r\n",{"version":3,"sources":["CalendarEventTime.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"CalendarEventTime.vue","sourceRoot":"node_modules/dayspan-vuetify-2/src/components","sourcesContent":["<template>\r\n    <div class=\"ds-calendar-event\"\r\n         :content-class=\"contentClass\"\r\n         :style=\"style\">\r\n        <v-menu\r\n                :disabled=\"!hasPopover\"\r\n                v-model=\"menu\"\r\n                v-bind=\"popoverProps\">\r\n            <template v-slot:activator=\"{ on }\">\r\n                <div class=\"ds-calendar-event-span\"\r\n                     v-on=\"on\"\r\n                     @click=\"editCheck\"\r\n                     @mouseenter=\"mouseEnterEvent\"\r\n                     @mouseleave=\"mouseLeaveEvent\"\r\n                     @mousedown=\"mouseDownEvent\"\r\n                     @mouseup=\"mouseUpEvent\">\r\n                <span v-if=\"showName\">\r\n                    <slot name=\"eventTimeTitle\" v-bind=\"{calendarEvent, details}\">\r\n                        <v-icon class=\"ds-ev-icon\"\r\n                                v-if=\"hasIcon\"\r\n                                size=\"14\"\r\n                                :style=\"{color: details.forecolor}\">\r\n                            {{ details.icon }}\r\n                        </v-icon>\r\n                        <strong class=\"ds-ev-title\">{{ details.title }}</strong>\r\n                        <span class=\"ds-ev-description\">{{ details.description }}</span>\r\n                    </slot>\r\n                </span>\r\n                    <span v-else>\r\n                    <slot name=\"eventTimeEmpty\" v-bind=\"{calendarEvent, details}\"></slot>\r\n                </span>\r\n                </div>\r\n            </template>\r\n            <slot name=\"eventPopover\" v-bind=\"{calendarEvent, calendar, edit, details, close}\"></slot>\r\n        </v-menu>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { Day, Constants, CalendarEvent, Calendar, Functions as fn } from 'dayspan'\r\n\r\nexport default {\r\n\r\n    name: 'dsCalendarEventTime',\r\n\r\n    props:\r\n        {\r\n            calendarEvent:\r\n                {\r\n                    required: true,\r\n                    type: CalendarEvent\r\n                },\r\n\r\n            calendar:\r\n                {\r\n                    required: true,\r\n                    type: Calendar\r\n                },\r\n\r\n            popoverProps:\r\n                {\r\n                    validate (x) {\r\n                        return this.$dsValidate(x, 'popoverProps')\r\n                    },\r\n                    default () {\r\n                        return this.$dsDefaults().popoverProps\r\n                    }\r\n                },\r\n\r\n            isPlaceholderWithDay:\r\n                {\r\n                    type: Day\r\n                }\r\n        },\r\n\r\n    computed:\r\n        {\r\n            style () {\r\n                return this.isPlaceholderWithDay ?\r\n                    this.$dayspan.getStylePlaceholderTimed(this.details, this.calendarEvent, this.isPlaceholderWithDay) :\r\n                    this.$dayspan.getStyleTimed(this.details, this.calendarEvent)\r\n            },\r\n\r\n            showName () {\r\n                return this.calendarEvent.starting || (\r\n                    this.calendar &&\r\n                    !this.calendar.span.contains(this.calendarEvent.time.start)\r\n                )\r\n            },\r\n\r\n            hasPopover () {\r\n                return !!this.$scopedSlots.eventPopover\r\n            },\r\n\r\n            hasIcon () {\r\n                return !!(this.$dayspan.supports.icon && this.details.icon)\r\n            },\r\n\r\n            contentClass () {\r\n                return this.$dayspan.fullscreenPopovers ? 'ds-fullscreen' : ''\r\n            },\r\n\r\n            details () {\r\n                return this.calendarEvent.event.data\r\n            }\r\n        },\r\n\r\n    data: vm => ({\r\n        menu: false\r\n    }),\r\n\r\n    methods:\r\n        {\r\n            close () {\r\n                this.menu = false\r\n            },\r\n\r\n            edit () {\r\n                if (this.handlesEvents()) {\r\n                    this.$emit('edit', this.calendarEvent)\r\n                }\r\n            },\r\n\r\n            editCheck ($event) {\r\n                if (this.handlesEvents($event)) {\r\n                    if (!this.hasPopover) {\r\n                        this.edit()\r\n                    } else {\r\n                        this.menu = !this.menu\r\n                    }\r\n                }\r\n            },\r\n\r\n            mouseEnterEvent ($event) {\r\n                if (this.handlesEvents($event)) {\r\n                    this.$emit('mouse-enter-event', this.getEvent('mouse-enter-event', $event))\r\n                }\r\n            },\r\n\r\n            mouseLeaveEvent ($event) {\r\n                if (this.handlesEvents($event)) {\r\n                    this.$emit('mouse-leave-event', this.getEvent('mouse-leave-event', $event))\r\n                }\r\n            },\r\n\r\n            mouseDownEvent ($event) {\r\n                if (this.handlesEvents($event)) {\r\n                    this.$emit('mouse-down-event', this.getEvent('mouse-down-event', $event))\r\n                }\r\n            },\r\n\r\n            mouseUpEvent ($event) {\r\n                if (this.handlesEvents($event)) {\r\n                    this.$emit('mouse-up-event', this.getEvent('mouse-up-event', $event))\r\n                }\r\n            },\r\n\r\n            handlesEvents ($event) {\r\n                var handles = !this.isPlaceholderWithDay\r\n\r\n                if (handles && $event) {\r\n                    $event.stopPropagation()\r\n                }\r\n\r\n                return handles\r\n            },\r\n\r\n            getEvent (type, $event, extra = {}) {\r\n                return fn.extend({\r\n\r\n                    type: type,\r\n                    calendarEvent: this.calendarEvent,\r\n                    calendar: this.calendar,\r\n                    details: this.details,\r\n                    offset: this.getRelativeTimeAt($event),\r\n                    left: $event.button === 0,\r\n                    right: $event.button === 1,\r\n                    handled: false,\r\n                    $event: $event,\r\n                    $vm: this,\r\n                    $element: this.$el\r\n\r\n                }, extra)\r\n            },\r\n\r\n            getRelativeTimeAt ($event) {\r\n                var bounds = this.$el.getBoundingClientRect()\r\n                var y = ($event.clientY - bounds.y) / this.$dayspan.dayHeight\r\n                var millis = y * Constants.MILLIS_IN_DAY\r\n\r\n                return millis\r\n            }\r\n        }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n\r\n    .ds-calendar-event-menu {\r\n        width: 100%;\r\n    }\r\n\r\n    .ds-calendar-event {\r\n        margin: 1px;\r\n        color: white;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n        padding-left: 0.5em;\r\n        font-size: 12px;\r\n        cursor: pointer;\r\n        position: absolute;\r\n        right: 0px;\r\n        user-select: none;\r\n        border-radius: 2px;\r\n        pointer-events: none;\r\n\r\n        .v-menu__activator {\r\n            align-items: end;\r\n        }\r\n\r\n        .ds-calendar-event-span {\r\n            width: 100%;\r\n            height: 100%;\r\n            pointer-events: all;\r\n        }\r\n    }\r\n\r\n</style>\r\n"]}]}