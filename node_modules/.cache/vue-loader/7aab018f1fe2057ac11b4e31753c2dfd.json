{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/src/components/Login/LoginForm.vue?vue&type=template&id=1797a707&scoped=true&","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/src/components/Login/LoginForm.vue","mtime":1617363134000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"v-card\",\n        { staticClass: \"elevation-12\" },\n        [\n          _c(\n            \"v-toolbar\",\n            { attrs: { color: \"primary\", dark: \"\", flat: \"\" } },\n            [_c(\"v-toolbar-title\", [_vm._v(_vm._s(_vm.$t(\"login\")) + \" \")])],\n            1\n          ),\n          _c(\n            \"v-card-text\",\n            [\n              _c(\"p\", [\n                _vm._v(\n                  \"\\n        \" + _vm._s(_vm.$t(\"logIntoAccount\")) + \"\\n      \"\n                )\n              ]),\n              _c(\n                \"v-form\",\n                { ref: \"form\", attrs: { \"lazy-validation\": \"\" } },\n                [\n                  _c(\"v-text-field\", {\n                    attrs: {\n                      label: _vm.$t(\"login\"),\n                      \"prepend-icon\": \"mdi-account\"\n                    },\n                    model: {\n                      value: _vm.email,\n                      callback: function($$v) {\n                        _vm.email = $$v\n                      },\n                      expression: \"email\"\n                    }\n                  }),\n                  _c(\"v-text-field\", {\n                    attrs: {\n                      rules: _vm.passwordRules,\n                      label: _vm.$t(\"password\"),\n                      type: \"password\",\n                      \"prepend-icon\": \"lock\"\n                    },\n                    model: {\n                      value: _vm.password,\n                      callback: function($$v) {\n                        _vm.password = $$v\n                      },\n                      expression: \"password\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm.error\n                ? _c(\"div\", { staticClass: \"error\" }, [\n                    _vm._v(\"\\n        \" + _vm._s(_vm.error) + \"\\n      \")\n                  ])\n                : _vm._e(),\n              _c(\n                \"v-row\",\n                { attrs: { align: \"center\" } },\n                [\n                  _c(\n                    \"v-col\",\n                    { attrs: { cols: \"auto\" } },\n                    [\n                      _c(\n                        \"v-btn\",\n                        {\n                          attrs: { color: \"primary\" },\n                          on: { click: _vm.login }\n                        },\n                        [\n                          _vm._v(\n                            \"\\n            \" +\n                              _vm._s(_vm.$t(\"login\")) +\n                              \"\\n          \"\n                          )\n                        ]\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"v-col\",\n                    { attrs: { cols: \"4\" } },\n                    [\n                      _c(\"v-select\", {\n                        attrs: {\n                          items: _vm.languages,\n                          label: _vm.$t(\"selectLanguage\"),\n                          \"item-text\": \"label\",\n                          \"item-value\": \"value\",\n                          \"hide-details\": \"\",\n                          \"single-line\": \"\",\n                          outlined: \"\",\n                          dense: \"\"\n                        },\n                        on: { change: _vm.onLanguageChange },\n                        model: {\n                          value: _vm.currentLanguage,\n                          callback: function($$v) {\n                            _vm.currentLanguage = $$v\n                          },\n                          expression: \"currentLanguage\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}