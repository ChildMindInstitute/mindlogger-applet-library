{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/src/services/Api/api.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/src/services/Api/api.vue","mtime":1617593780000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n/**\n * Admin-panel API routes\n */\nimport axios from \"axios\";\nimport store from '../../state';\n\nconst signIn = ({ apiHost, user, password }) =>\n  axios({\n    method: \"get\",\n    url: `${apiHost}/user/authentication`,\n    headers: { \"Girder-Authorization\": `Basic ${btoa(`${user}:${password}`)}` },\n    params: {\n      lang: store.state.currentLanguage.substr(0, 2),\n    },\n  });\n\nconst signUp = ({ apiHost, body }) =>\n  axios({\n    method: \"post\",\n    url: `${apiHost}/user`,\n    params: {\n      ...body,\n      admin: true,\n    },\n  });\n\nconst resetPassword = ({ apiHost, body }) =>\n  axios({\n    method: \"put\",\n    url: `${apiHost}/user/password/temporary`,\n    params: {\n      ...body,\n    },\n  });\n\nconst getUserDetails = ({ apiHost, token }) =>\n  axios({\n    method: \"get\",\n    url: `${apiHost}/user/me`,\n    headers: {\n      \"Girder-Token\": token,\n    },\n  });\n\nconst getPublishedApplets = ({ apiHost }) =>\n  axios({\n    method: \"get\",\n    url: `${apiHost}/library/applets`,\n  });\n\nconst addAppletsToBasket = ({ apiHost, data }) =>\n  axios({\n    method: \"post\",\n    url: `${apiHost}/user`,\n    data,\n  });\n\nconst getAppletContent = ({ apiHost, libraryId }) =>\n  axios({\n    method: \"get\",\n    url: `${apiHost}/library/applet/content?libraryId=${libraryId}`,\n  });\n\nconst updateRegistration = ({ apiHost, token, groupId, open }) =>\n  axios({\n    method: \"PUT\",\n    url: `${apiHost}/group/${groupId}?openRegistration=${open}`,\n    headers: {\n      \"Girder-Token\": token,\n    },\n  });\n\nconst getUsersData = ({ apiHost, token, appletId, options }) =>\n  axios({\n    method: \"GET\",\n    url: `${apiHost}/applet/${appletId}/data`,\n    headers: {\n      \"Girder-Token\": token,\n    },\n    params: options,\n  });\n\nexport default {\n  signIn,\n  signUp,\n  addAppletsToBasket,\n  getUserDetails,\n  resetPassword,\n  updateRegistration,\n  getPublishedApplets,\n  getAppletContent,\n  getUsersData,\n}\n",{"version":3,"sources":["api.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"api.vue","sourceRoot":"src/services/Api","sourcesContent":["<script>\n/**\n * Admin-panel API routes\n */\nimport axios from \"axios\";\nimport store from '../../state';\n\nconst signIn = ({ apiHost, user, password }) =>\n  axios({\n    method: \"get\",\n    url: `${apiHost}/user/authentication`,\n    headers: { \"Girder-Authorization\": `Basic ${btoa(`${user}:${password}`)}` },\n    params: {\n      lang: store.state.currentLanguage.substr(0, 2),\n    },\n  });\n\nconst signUp = ({ apiHost, body }) =>\n  axios({\n    method: \"post\",\n    url: `${apiHost}/user`,\n    params: {\n      ...body,\n      admin: true,\n    },\n  });\n\nconst resetPassword = ({ apiHost, body }) =>\n  axios({\n    method: \"put\",\n    url: `${apiHost}/user/password/temporary`,\n    params: {\n      ...body,\n    },\n  });\n\nconst getUserDetails = ({ apiHost, token }) =>\n  axios({\n    method: \"get\",\n    url: `${apiHost}/user/me`,\n    headers: {\n      \"Girder-Token\": token,\n    },\n  });\n\nconst getPublishedApplets = ({ apiHost }) =>\n  axios({\n    method: \"get\",\n    url: `${apiHost}/library/applets`,\n  });\n\nconst addAppletsToBasket = ({ apiHost, data }) =>\n  axios({\n    method: \"post\",\n    url: `${apiHost}/user`,\n    data,\n  });\n\nconst getAppletContent = ({ apiHost, libraryId }) =>\n  axios({\n    method: \"get\",\n    url: `${apiHost}/library/applet/content?libraryId=${libraryId}`,\n  });\n\nconst updateRegistration = ({ apiHost, token, groupId, open }) =>\n  axios({\n    method: \"PUT\",\n    url: `${apiHost}/group/${groupId}?openRegistration=${open}`,\n    headers: {\n      \"Girder-Token\": token,\n    },\n  });\n\nconst getUsersData = ({ apiHost, token, appletId, options }) =>\n  axios({\n    method: \"GET\",\n    url: `${apiHost}/applet/${appletId}/data`,\n    headers: {\n      \"Girder-Token\": token,\n    },\n    params: options,\n  });\n\nexport default {\n  signIn,\n  signUp,\n  addAppletsToBasket,\n  getUserDetails,\n  resetPassword,\n  updateRegistration,\n  getPublishedApplets,\n  getAppletContent,\n  getUsersData,\n}\n</script>\n"]}]}