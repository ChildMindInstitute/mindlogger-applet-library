{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/dayspan-vuetify-2/src/components/ScheduleActions.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/dayspan-vuetify-2/src/components/ScheduleActions.vue","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { Day, Time, Schedule, Calendar, CalendarEvent, Functions as fn } from 'dayspan'\r\n\r\nexport default {\r\n\r\n    name: 'dsScheduleActions',\r\n\r\n    props:\r\n        {\r\n            schedule:\r\n                {\r\n                    required: true,\r\n                    type: Schedule\r\n                },\r\n\r\n            calendarEvent:\r\n                {\r\n                    required: true,\r\n                    type: CalendarEvent\r\n                },\r\n\r\n            calendar:\r\n                {\r\n                    type: Calendar\r\n                },\r\n\r\n            labels:\r\n                {\r\n                    validate (x) {\r\n                        return this.$dsValidate(x, 'labels')\r\n                    },\r\n                    default () {\r\n                        return this.$dsDefaults().labels\r\n                    }\r\n                },\r\n\r\n            allowRemove:\r\n                {\r\n                    type: Boolean,\r\n                    default () {\r\n                        return this.$dsDefaults().allowRemove\r\n                    }\r\n                },\r\n\r\n            allowExclude:\r\n                {\r\n                    type: Boolean,\r\n                    default () {\r\n                        return this.$dsDefaults().allowExclude\r\n                    }\r\n                },\r\n\r\n            allowCancel:\r\n                {\r\n                    type: Boolean,\r\n                    default () {\r\n                        return this.$dsDefaults().allowCancel\r\n                    }\r\n                },\r\n\r\n            allowUncancel:\r\n                {\r\n                    type: Boolean,\r\n                    default () {\r\n                        return this.$dsDefaults().allowUncancel\r\n                    }\r\n                },\r\n\r\n            allowMove:\r\n                {\r\n                    type: Boolean,\r\n                    default () {\r\n                        return this.$dsDefaults().allowMove\r\n                    }\r\n                },\r\n\r\n            allowInclude:\r\n                {\r\n                    type: Boolean,\r\n                    default () {\r\n                        return this.$dsDefaults().allowInclude\r\n                    }\r\n                },\r\n\r\n            allowSetStart:\r\n                {\r\n                    type: Boolean,\r\n                    default () {\r\n                        return this.$dsDefaults().allowSetStart\r\n                    }\r\n                },\r\n\r\n            allowSetEnd:\r\n                {\r\n                    type: Boolean,\r\n                    default () {\r\n                        return this.$dsDefaults().allowSetEnd\r\n                    }\r\n                }\r\n        },\r\n\r\n    data: vm => ({\r\n        movingDate: false,\r\n        movingTime: false,\r\n        includingDate: false,\r\n        includingTime: false,\r\n        targetDate: null,\r\n        targetTime: null\r\n    }),\r\n\r\n    computed:\r\n        {\r\n            repeats () {\r\n                return !this.schedule.isSingleEvent()\r\n            },\r\n            event () {\r\n                return this.calendarEvent.event\r\n            },\r\n            canRemove () {\r\n                return this.allowRemove\r\n            },\r\n            canExclude () {\r\n                return this.allowExclude && this.repeats\r\n            },\r\n            canCancel () {\r\n                return this.allowCancel && !this.calendarEvent.cancelled\r\n            },\r\n            canUncancel () {\r\n                return this.allowUncancel && this.calendarEvent.cancelled\r\n            },\r\n            canMove () {\r\n                return this.allowMove\r\n            },\r\n            canInclude () {\r\n                return this.allowInclude\r\n            },\r\n            canSetStart () {\r\n                return this.allowSetStart\r\n            },\r\n            canSetEnd () {\r\n                return this.allowSetEnd\r\n            },\r\n            moving () {\r\n                return this.movingDate || this.movingTime\r\n            },\r\n            including () {\r\n                return this.includingDate || this.includingTime\r\n            }\r\n        },\r\n\r\n    methods:\r\n        {\r\n            remove () {\r\n                this.$dayspan.getPermission('actionRemove', () => {\r\n                    var ev = this.getEvent('remove')\r\n\r\n                    this.$emit('remove', ev)\r\n\r\n                    if (!ev.handled && ev.calendar) {\r\n                        ev.calendar.removeEvent(ev.event)\r\n                        ev.handled = true\r\n                    }\r\n\r\n                    this.$emit('finish', ev)\r\n\r\n                    this.$emit('event-remove', ev.event)\r\n                })\r\n            },\r\n\r\n            exclude () {\r\n                this.$dayspan.getPermission('actionExclude', () => {\r\n                    var ev = this.getEvent('exclude')\r\n\r\n                    this.$emit('exclude', ev)\r\n\r\n                    if (!ev.handled && ev.calendarEvent) {\r\n                        ev.calendarEvent.exclude()\r\n                        ev.refresh && ev.calendar && ev.calendar.refreshEvents()\r\n                        ev.handled = true\r\n                    }\r\n\r\n                    this.$emit('finish', ev)\r\n\r\n                    this.$emit('event-update', ev.event)\r\n                })\r\n            },\r\n\r\n            cancel () {\r\n                this.$dayspan.getPermission('actionCancel', () => {\r\n                    var ev = this.getEvent('cancel')\r\n\r\n                    this.$emit('cancel', ev)\r\n\r\n                    if (!ev.handled && ev.calendarEvent) {\r\n                        ev.calendarEvent.cancel(true)\r\n                        ev.refresh && ev.calendar && ev.calendar.refreshEvents()\r\n                        ev.handled = true\r\n                    }\r\n\r\n                    this.$emit('finish', ev)\r\n\r\n                    this.$emit('event-update', ev.event)\r\n                })\r\n            },\r\n\r\n            uncancel () {\r\n                this.$dayspan.getPermission('actionUncancel', () => {\r\n                    var ev = this.getEvent('uncancel')\r\n\r\n                    this.$emit('uncancel', ev)\r\n\r\n                    if (!ev.handled && ev.calendarEvent) {\r\n                        ev.calendarEvent.cancel(false)\r\n                        ev.refresh && ev.calendar && ev.calendar.refreshEvents()\r\n                        ev.handled = true\r\n                    }\r\n\r\n                    this.$emit('finish', ev)\r\n\r\n                    this.$emit('event-update', ev.event)\r\n                })\r\n            },\r\n\r\n            setStart () {\r\n                this.$dayspan.getPermission('actionSetStart', () => {\r\n                    var ev = this.getEvent('set-start')\r\n\r\n                    this.$emit('set-start', ev)\r\n\r\n                    if (!ev.handled && ev.calendarEvent) {\r\n                        ev.calendarEvent.schedule.start = ev.calendarEvent.day.start()\r\n                        ev.refresh && ev.calendar && ev.calendar.refreshEvents()\r\n                        ev.handled = true\r\n                    }\r\n\r\n                    this.$emit('finish', ev)\r\n\r\n                    this.$emit('event-update', ev.event)\r\n                })\r\n            },\r\n\r\n            setEnd () {\r\n                this.$dayspan.getPermission('actionSetEnd', () => {\r\n                    var ev = this.getEvent('set-end')\r\n\r\n                    this.$emit('set-end', ev)\r\n\r\n                    if (!ev.handled && ev.calendarEvent) {\r\n                        ev.calendarEvent.schedule.end = ev.calendarEvent.day.end()\r\n                        ev.refresh && ev.calendar && ev.calendar.refreshEvents()\r\n                        ev.handled = true\r\n                    }\r\n\r\n                    this.$emit('finish', ev)\r\n\r\n                    this.$emit('event-update', ev.event)\r\n                })\r\n            },\r\n\r\n            getTarget () {\r\n                if (!this.targetDate) {\r\n                    return null\r\n                }\r\n\r\n                var target = Day.parse(this.targetDate)\r\n\r\n                if (target && this.targetTime) {\r\n                    var time = Time.parse(this.targetTime)\r\n\r\n                    if (time) {\r\n                        target = target.withTime(time)\r\n                    }\r\n                }\r\n\r\n                return target\r\n            },\r\n\r\n            setTarget () {\r\n                this.targetDate = this.calendarEvent.start.format('YYYY-MM-DD')\r\n                this.targetTime = this.calendarEvent.start.format('HH:mm')\r\n            },\r\n\r\n            moveStart () {\r\n                this.setTarget()\r\n                this.movingDate = true\r\n            },\r\n\r\n            moveEnd () {\r\n                if (this.movingDate) {\r\n                    this.movingDate = false\r\n\r\n                    if (!this.schedule.isFullDay()) {\r\n                        this.movingTime = true\r\n\r\n                        return\r\n                    }\r\n                }\r\n\r\n                if (this.movingTime) {\r\n                    this.movingTime = false\r\n                }\r\n\r\n                var target = this.getTarget()\r\n\r\n                if (!target) {\r\n                    return\r\n                }\r\n\r\n                this.$dayspan.getPermission('actionMove', () => {\r\n                    var ev = this.getEvent('move', {target})\r\n\r\n                    this.$emit('move', ev)\r\n\r\n                    if (!ev.handled && ev.calendarEvent && ev.target) {\r\n                        ev.calendarEvent.move(ev.target)\r\n                        ev.calendar && ev.calendar.refreshEvents()\r\n                        ev.handled = true\r\n                    }\r\n\r\n                    this.$emit('finish', ev)\r\n\r\n                    this.$emit('event-update', ev.event)\r\n                })\r\n            },\r\n\r\n            includeStart () {\r\n                this.setTarget()\r\n                this.includingDate = true\r\n            },\r\n\r\n            includeEnd () {\r\n                if (this.includingDate) {\r\n                    this.includingDate = false\r\n\r\n                    if (!this.schedule.isFullDay()) {\r\n                        this.includingTime = true\r\n\r\n                        return\r\n                    }\r\n                }\r\n\r\n                if (this.includingTime) {\r\n                    this.includingTime = false\r\n                }\r\n\r\n                var target = this.getTarget()\r\n\r\n                if (!target) {\r\n                    return\r\n                }\r\n\r\n                this.$dayspan.getPermission('actionInclude', () => {\r\n                    var ev = this.getEvent('include', {target})\r\n\r\n                    this.$emit('include', ev)\r\n\r\n                    if (!ev.handled && ev.calendarEvent && ev.calendarEvent.schedule && ev.target) {\r\n                        ev.calendarEvent.schedule.setExcluded(ev.target, false)\r\n                        ev.calendar && ev.calendar.refreshEvents()\r\n                        ev.handled = true\r\n                    }\r\n\r\n                    this.$emit('finish', ev)\r\n\r\n                    this.$emit('event-update', ev.event)\r\n                })\r\n            },\r\n\r\n            getEvent (type, extra = {}) {\r\n                return fn.extend({\r\n\r\n                    type: type,\r\n                    schedule: this.schedule,\r\n                    calendar: this.calendar,\r\n                    calendarEvent: this.calendarEvent,\r\n                    event: this.event,\r\n                    handled: false,\r\n                    refresh: true,\r\n                    $vm: this,\r\n                    $element: this.$el\r\n\r\n                }, extra)\r\n            }\r\n        }\r\n}\r\n",{"version":3,"sources":["ScheduleActions.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"ScheduleActions.vue","sourceRoot":"node_modules/dayspan-vuetify-2/src/components","sourcesContent":["<template>\r\n\r\n    <v-menu bottom left>\r\n        <template v-slot:activator=\"{ on }\">\r\n            <template v-on=\"on\">\r\n                <slot></slot>\r\n            </template>\r\n        </template>\r\n\r\n        <v-list>\r\n\r\n            <v-list-item @click=\"remove\" v-if=\"canRemove\">\r\n                <v-list-item-title v-html=\"labels.remove\"></v-list-item-title>\r\n            </v-list-item>\r\n\r\n            <v-list-item @click=\"exclude\" v-if=\"canExclude\">\r\n                <v-list-item-title v-html=\"labels.exclude\"></v-list-item-title>\r\n            </v-list-item>\r\n\r\n            <v-list-item @click=\"cancel\" v-if=\"canCancel\">\r\n                <v-list-item-title v-html=\"labels.cancel\"></v-list-item-title>\r\n            </v-list-item>\r\n\r\n            <v-list-item @click=\"uncancel\" v-if=\"canUncancel\">\r\n                <v-list-item-title v-html=\"labels.uncancel\"></v-list-item-title>\r\n            </v-list-item>\r\n\r\n            <v-list-item @click=\"setStart\" v-if=\"canSetStart\">\r\n                <v-list-item-title v-html=\"labels.setStart\"></v-list-item-title>\r\n            </v-list-item>\r\n\r\n            <v-list-item @click=\"setEnd\" v-if=\"canSetEnd\">\r\n                <v-list-item-title v-html=\"labels.setEnd\"></v-list-item-title>\r\n            </v-list-item>\r\n\r\n            <v-list-item @click=\"moveStart\" v-if=\"canMove\">\r\n                <v-menu\r\n                        lazy offset-y full-width\r\n                        transition=\"scale-transition\"\r\n                        min-width=\"290px\"\r\n                        color=\"primary\"\r\n                        v-model=\"moving\"\r\n                        :close-on-content-click=\"false\"\r\n                        :nudge-right=\"40\">\r\n                    <template v-slot:activator=\"{ on }\">\r\n                        <v-list-item-title v-on=\"on\">\r\n                            <span v-html=\"labels.move\"></span>\r\n                        </v-list-item-title>\r\n                    </template>\r\n\r\n                    <v-date-picker no-title scrollable\r\n                                   v-if=\"movingDate\"\r\n                                   v-model=\"targetDate\">\r\n                        <v-spacer></v-spacer>\r\n                        <v-btn text color=\"primary\" @click=\"movingDate = false\">{{ labels.pickerCancel }}</v-btn>\r\n                        <v-btn text color=\"primary\" @click=\"moveEnd\">{{ labels.pickerOk }}</v-btn>\r\n                    </v-date-picker>\r\n\r\n                    <v-time-picker no-title scrollable\r\n                                   v-if=\"movingTime\"\r\n                                   v-model=\"targetTime\">\r\n                        <v-spacer></v-spacer>\r\n                        <v-btn color=\"primary\" @click=\"movingTime = false\">{{ labels.pickerCancel }}</v-btn>\r\n                        <v-btn color=\"primary\" @click=\"moveEnd\">{{ labels.pickerOk }}</v-btn>\r\n                    </v-time-picker>\r\n\r\n                </v-menu>\r\n            </v-list-item>\r\n\r\n            <v-list-item @click=\"includeStart\" v-if=\"canInclude\">\r\n                <v-menu\r\n                        lazy offset-y full-width\r\n                        transition=\"scale-transition\"\r\n                        min-width=\"290px\"\r\n                        color=\"primary\"\r\n                        v-model=\"including\"\r\n                        :close-on-content-click=\"false\"\r\n                        :nudge-right=\"40\">\r\n                    <template v-slot:activator=\"{ on }\">\r\n                        <v-list-item-title v-on=\"on\">\r\n                            <span v-html=\"labels.include\"></span>\r\n                        </v-list-item-title>\r\n                    </template>\r\n\r\n                    <v-date-picker no-title scrollable\r\n                                   v-if=\"includingDate\"\r\n                                   v-model=\"targetDate\">\r\n                        <v-spacer></v-spacer>\r\n                        <v-btn color=\"primary\" @click=\"includingDate = false\">{{ labels.pickerCancel }}</v-btn>\r\n                        <v-btn color=\"primary\" @click=\"includeEnd\">{{ labels.pickerOk }}</v-btn>\r\n                    </v-date-picker>\r\n\r\n                    <v-time-picker no-title scrollable\r\n                                   v-if=\"includingTime\"\r\n                                   v-model=\"targetTime\">\r\n                        <v-spacer></v-spacer>\r\n                        <v-btn color=\"primary\" @click=\"includingTime = false\">{{ labels.pickerCancel }}</v-btn>\r\n                        <v-btn color=\"primary\" @click=\"includeEnd\">{{ labels.pickerOk }}</v-btn>\r\n                    </v-time-picker>\r\n\r\n                </v-menu>\r\n            </v-list-item>\r\n\r\n            <slot name=\"scheduleActionsAdditional\" v-bind=\"{schedule, calendarEvent, calendar}\"></slot>\r\n\r\n        </v-list>\r\n\r\n    </v-menu>\r\n\r\n</template>\r\n\r\n<script>\r\nimport { Day, Time, Schedule, Calendar, CalendarEvent, Functions as fn } from 'dayspan'\r\n\r\nexport default {\r\n\r\n    name: 'dsScheduleActions',\r\n\r\n    props:\r\n        {\r\n            schedule:\r\n                {\r\n                    required: true,\r\n                    type: Schedule\r\n                },\r\n\r\n            calendarEvent:\r\n                {\r\n                    required: true,\r\n                    type: CalendarEvent\r\n                },\r\n\r\n            calendar:\r\n                {\r\n                    type: Calendar\r\n                },\r\n\r\n            labels:\r\n                {\r\n                    validate (x) {\r\n                        return this.$dsValidate(x, 'labels')\r\n                    },\r\n                    default () {\r\n                        return this.$dsDefaults().labels\r\n                    }\r\n                },\r\n\r\n            allowRemove:\r\n                {\r\n                    type: Boolean,\r\n                    default () {\r\n                        return this.$dsDefaults().allowRemove\r\n                    }\r\n                },\r\n\r\n            allowExclude:\r\n                {\r\n                    type: Boolean,\r\n                    default () {\r\n                        return this.$dsDefaults().allowExclude\r\n                    }\r\n                },\r\n\r\n            allowCancel:\r\n                {\r\n                    type: Boolean,\r\n                    default () {\r\n                        return this.$dsDefaults().allowCancel\r\n                    }\r\n                },\r\n\r\n            allowUncancel:\r\n                {\r\n                    type: Boolean,\r\n                    default () {\r\n                        return this.$dsDefaults().allowUncancel\r\n                    }\r\n                },\r\n\r\n            allowMove:\r\n                {\r\n                    type: Boolean,\r\n                    default () {\r\n                        return this.$dsDefaults().allowMove\r\n                    }\r\n                },\r\n\r\n            allowInclude:\r\n                {\r\n                    type: Boolean,\r\n                    default () {\r\n                        return this.$dsDefaults().allowInclude\r\n                    }\r\n                },\r\n\r\n            allowSetStart:\r\n                {\r\n                    type: Boolean,\r\n                    default () {\r\n                        return this.$dsDefaults().allowSetStart\r\n                    }\r\n                },\r\n\r\n            allowSetEnd:\r\n                {\r\n                    type: Boolean,\r\n                    default () {\r\n                        return this.$dsDefaults().allowSetEnd\r\n                    }\r\n                }\r\n        },\r\n\r\n    data: vm => ({\r\n        movingDate: false,\r\n        movingTime: false,\r\n        includingDate: false,\r\n        includingTime: false,\r\n        targetDate: null,\r\n        targetTime: null\r\n    }),\r\n\r\n    computed:\r\n        {\r\n            repeats () {\r\n                return !this.schedule.isSingleEvent()\r\n            },\r\n            event () {\r\n                return this.calendarEvent.event\r\n            },\r\n            canRemove () {\r\n                return this.allowRemove\r\n            },\r\n            canExclude () {\r\n                return this.allowExclude && this.repeats\r\n            },\r\n            canCancel () {\r\n                return this.allowCancel && !this.calendarEvent.cancelled\r\n            },\r\n            canUncancel () {\r\n                return this.allowUncancel && this.calendarEvent.cancelled\r\n            },\r\n            canMove () {\r\n                return this.allowMove\r\n            },\r\n            canInclude () {\r\n                return this.allowInclude\r\n            },\r\n            canSetStart () {\r\n                return this.allowSetStart\r\n            },\r\n            canSetEnd () {\r\n                return this.allowSetEnd\r\n            },\r\n            moving () {\r\n                return this.movingDate || this.movingTime\r\n            },\r\n            including () {\r\n                return this.includingDate || this.includingTime\r\n            }\r\n        },\r\n\r\n    methods:\r\n        {\r\n            remove () {\r\n                this.$dayspan.getPermission('actionRemove', () => {\r\n                    var ev = this.getEvent('remove')\r\n\r\n                    this.$emit('remove', ev)\r\n\r\n                    if (!ev.handled && ev.calendar) {\r\n                        ev.calendar.removeEvent(ev.event)\r\n                        ev.handled = true\r\n                    }\r\n\r\n                    this.$emit('finish', ev)\r\n\r\n                    this.$emit('event-remove', ev.event)\r\n                })\r\n            },\r\n\r\n            exclude () {\r\n                this.$dayspan.getPermission('actionExclude', () => {\r\n                    var ev = this.getEvent('exclude')\r\n\r\n                    this.$emit('exclude', ev)\r\n\r\n                    if (!ev.handled && ev.calendarEvent) {\r\n                        ev.calendarEvent.exclude()\r\n                        ev.refresh && ev.calendar && ev.calendar.refreshEvents()\r\n                        ev.handled = true\r\n                    }\r\n\r\n                    this.$emit('finish', ev)\r\n\r\n                    this.$emit('event-update', ev.event)\r\n                })\r\n            },\r\n\r\n            cancel () {\r\n                this.$dayspan.getPermission('actionCancel', () => {\r\n                    var ev = this.getEvent('cancel')\r\n\r\n                    this.$emit('cancel', ev)\r\n\r\n                    if (!ev.handled && ev.calendarEvent) {\r\n                        ev.calendarEvent.cancel(true)\r\n                        ev.refresh && ev.calendar && ev.calendar.refreshEvents()\r\n                        ev.handled = true\r\n                    }\r\n\r\n                    this.$emit('finish', ev)\r\n\r\n                    this.$emit('event-update', ev.event)\r\n                })\r\n            },\r\n\r\n            uncancel () {\r\n                this.$dayspan.getPermission('actionUncancel', () => {\r\n                    var ev = this.getEvent('uncancel')\r\n\r\n                    this.$emit('uncancel', ev)\r\n\r\n                    if (!ev.handled && ev.calendarEvent) {\r\n                        ev.calendarEvent.cancel(false)\r\n                        ev.refresh && ev.calendar && ev.calendar.refreshEvents()\r\n                        ev.handled = true\r\n                    }\r\n\r\n                    this.$emit('finish', ev)\r\n\r\n                    this.$emit('event-update', ev.event)\r\n                })\r\n            },\r\n\r\n            setStart () {\r\n                this.$dayspan.getPermission('actionSetStart', () => {\r\n                    var ev = this.getEvent('set-start')\r\n\r\n                    this.$emit('set-start', ev)\r\n\r\n                    if (!ev.handled && ev.calendarEvent) {\r\n                        ev.calendarEvent.schedule.start = ev.calendarEvent.day.start()\r\n                        ev.refresh && ev.calendar && ev.calendar.refreshEvents()\r\n                        ev.handled = true\r\n                    }\r\n\r\n                    this.$emit('finish', ev)\r\n\r\n                    this.$emit('event-update', ev.event)\r\n                })\r\n            },\r\n\r\n            setEnd () {\r\n                this.$dayspan.getPermission('actionSetEnd', () => {\r\n                    var ev = this.getEvent('set-end')\r\n\r\n                    this.$emit('set-end', ev)\r\n\r\n                    if (!ev.handled && ev.calendarEvent) {\r\n                        ev.calendarEvent.schedule.end = ev.calendarEvent.day.end()\r\n                        ev.refresh && ev.calendar && ev.calendar.refreshEvents()\r\n                        ev.handled = true\r\n                    }\r\n\r\n                    this.$emit('finish', ev)\r\n\r\n                    this.$emit('event-update', ev.event)\r\n                })\r\n            },\r\n\r\n            getTarget () {\r\n                if (!this.targetDate) {\r\n                    return null\r\n                }\r\n\r\n                var target = Day.parse(this.targetDate)\r\n\r\n                if (target && this.targetTime) {\r\n                    var time = Time.parse(this.targetTime)\r\n\r\n                    if (time) {\r\n                        target = target.withTime(time)\r\n                    }\r\n                }\r\n\r\n                return target\r\n            },\r\n\r\n            setTarget () {\r\n                this.targetDate = this.calendarEvent.start.format('YYYY-MM-DD')\r\n                this.targetTime = this.calendarEvent.start.format('HH:mm')\r\n            },\r\n\r\n            moveStart () {\r\n                this.setTarget()\r\n                this.movingDate = true\r\n            },\r\n\r\n            moveEnd () {\r\n                if (this.movingDate) {\r\n                    this.movingDate = false\r\n\r\n                    if (!this.schedule.isFullDay()) {\r\n                        this.movingTime = true\r\n\r\n                        return\r\n                    }\r\n                }\r\n\r\n                if (this.movingTime) {\r\n                    this.movingTime = false\r\n                }\r\n\r\n                var target = this.getTarget()\r\n\r\n                if (!target) {\r\n                    return\r\n                }\r\n\r\n                this.$dayspan.getPermission('actionMove', () => {\r\n                    var ev = this.getEvent('move', {target})\r\n\r\n                    this.$emit('move', ev)\r\n\r\n                    if (!ev.handled && ev.calendarEvent && ev.target) {\r\n                        ev.calendarEvent.move(ev.target)\r\n                        ev.calendar && ev.calendar.refreshEvents()\r\n                        ev.handled = true\r\n                    }\r\n\r\n                    this.$emit('finish', ev)\r\n\r\n                    this.$emit('event-update', ev.event)\r\n                })\r\n            },\r\n\r\n            includeStart () {\r\n                this.setTarget()\r\n                this.includingDate = true\r\n            },\r\n\r\n            includeEnd () {\r\n                if (this.includingDate) {\r\n                    this.includingDate = false\r\n\r\n                    if (!this.schedule.isFullDay()) {\r\n                        this.includingTime = true\r\n\r\n                        return\r\n                    }\r\n                }\r\n\r\n                if (this.includingTime) {\r\n                    this.includingTime = false\r\n                }\r\n\r\n                var target = this.getTarget()\r\n\r\n                if (!target) {\r\n                    return\r\n                }\r\n\r\n                this.$dayspan.getPermission('actionInclude', () => {\r\n                    var ev = this.getEvent('include', {target})\r\n\r\n                    this.$emit('include', ev)\r\n\r\n                    if (!ev.handled && ev.calendarEvent && ev.calendarEvent.schedule && ev.target) {\r\n                        ev.calendarEvent.schedule.setExcluded(ev.target, false)\r\n                        ev.calendar && ev.calendar.refreshEvents()\r\n                        ev.handled = true\r\n                    }\r\n\r\n                    this.$emit('finish', ev)\r\n\r\n                    this.$emit('event-update', ev.event)\r\n                })\r\n            },\r\n\r\n            getEvent (type, extra = {}) {\r\n                return fn.extend({\r\n\r\n                    type: type,\r\n                    schedule: this.schedule,\r\n                    calendar: this.calendar,\r\n                    calendarEvent: this.calendarEvent,\r\n                    event: this.event,\r\n                    handled: false,\r\n                    refresh: true,\r\n                    $vm: this,\r\n                    $element: this.$el\r\n\r\n                }, extra)\r\n            }\r\n        }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n\r\n</style>\r\n"]}]}