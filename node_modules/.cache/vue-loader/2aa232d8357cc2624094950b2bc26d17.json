{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/dayspan-vuetify-2/src/components/Calendar.vue?vue&type=style&index=0&id=a7e39adc&scoped=true&lang=scss&","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/dayspan-vuetify-2/src/components/Calendar.vue","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.ds-calendar {\n    width: 100%;\n    height: 100%;\n    position: relative;\n    padding: 0px !important;\n}\n\n.ds-month-view {\n    width: 100%;\n    height: 100%;\n\n    .ds-today {\n        background-color: rgba(0, 0, 0, 0.04);\n    }\n}\n\n.ds-week-view {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    overflow-y: auto;\n    outline: none;\n    background-color: white;\n}\n\n.ds-year-view {\n\n    .ds-first-day {\n        font-weight: bold;\n    }\n\n    .ds-first-day-day {\n        background-color: rgba(0, 0, 0, 0.08);\n    }\n}\n\n",{"version":3,"sources":["Calendar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0aA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Calendar.vue","sourceRoot":"node_modules/dayspan-vuetify-2/src/components","sourcesContent":["<template>\r\n    <div class=\"ds-calendar\">\r\n\r\n        <div v-if=\"isYear\" class=\"ds-month-view ds-year-view\">\r\n\r\n            <ds-weeks-view class=\"ds-expand\"\r\n                           v-bind=\"{$scopedSlots}\"\r\n                           v-on=\"$listeners\"\r\n                           :calendar=\"calendar\"\r\n                           :placeholder=\"placeholder\"\r\n                           :placeholder-for-create=\"placeholderForCreate\"\r\n                           @mouse-move-day=\"mouseMoveDay\"\r\n                           @mouse-down-day=\"mouseDownDay\"\r\n                           @mouse-up-day=\"mouseUp\"\r\n                           @mouse-up-event=\"mouseUp\"\r\n                           @mouse-down-event=\"mouseDownEvent\"\r\n                           @clear-placeholder=\"clearPlaceholder\"\r\n            ></ds-weeks-view>\r\n\r\n        </div>\r\n\r\n        <div v-if=\"isMonth\" class=\"ds-month-view\">\r\n\r\n            <ds-weeks-view class=\"ds-expand\"\r\n                           v-bind=\"{$scopedSlots}\"\r\n                           v-on=\"$listeners\"\r\n                           :calendar=\"calendar\"\r\n                           :placeholder=\"placeholder\"\r\n                           :placeholder-for-create=\"placeholderForCreate\"\r\n                           @mouse-move-day=\"mouseMoveDay\"\r\n                           @mouse-down-day=\"mouseDownDay\"\r\n                           @mouse-up-day=\"mouseUp\"\r\n                           @mouse-up-event=\"mouseUp\"\r\n                           @mouse-down-event=\"mouseDownEvent\"\r\n                           @clear-placeholder=\"clearPlaceholder\"\r\n            ></ds-weeks-view>\r\n\r\n        </div>\r\n\r\n        <div v-if=\"isWeek || isDay\" class=\"ds-week-view\">\r\n\r\n            <ds-days-view\r\n                    v-bind=\"{$scopedSlots}\"\r\n                    v-on=\"$listeners\"\r\n                    :calendar=\"calendar\"\r\n                    :placeholder=\"placeholder\"\r\n                    :placeholder-for-create=\"placeholderForCreate\"\r\n                    @mouse-move=\"mouseMove\"\r\n                    @mouse-down=\"mouseDown\"\r\n                    @mouse-up=\"mouseUp\"\r\n                    @mouse-down-event=\"mouseDownEvent\"\r\n                    @mouse-move-day=\"mouseMoveDay\"\r\n                    @mouse-down-day=\"mouseDownDay\"\r\n                    @mouse-up-day=\"mouseUp\"\r\n                    @mouse-up-event=\"mouseUp\"\r\n                    @clear-placeholder=\"clearPlaceholder\"\r\n            ></ds-days-view>\r\n\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { Calendar, Schedule, CalendarEvent, Units, DaySpan, Day, Op, Functions as fn } from 'dayspan'\r\n\r\nexport default {\r\n\r\n    name: 'dsCalendar',\r\n\r\n    props:\r\n        {\r\n            calendar:\r\n                {\r\n                    type: Calendar\r\n                },\r\n\r\n            handleAdd:\r\n                {\r\n                    type: Boolean,\r\n                    default () {\r\n                        return this.$dsDefaults().handleAdd\r\n                    }\r\n                },\r\n\r\n            handleMove:\r\n                {\r\n                    type: Boolean,\r\n                    default () {\r\n                        return this.$dsDefaults().handleMove\r\n                    }\r\n                },\r\n\r\n            readOnly:\r\n                {\r\n                    type: Boolean,\r\n                    default: false\r\n                }\r\n        },\r\n\r\n    data: vm => ({\r\n        placeholder: null,\r\n        placeholderForCreate: false,\r\n        addStart: null\r\n    }),\r\n\r\n    watch:\r\n        {\r\n            '$dayspan.today': 'refreshCurrent'\r\n        },\r\n\r\n    computed:\r\n        {\r\n            type () {\r\n                return this.calendar ? this.calendar.type : null\r\n            },\r\n\r\n            size () {\r\n                return this.calendar ? this.calendar.size : null\r\n            },\r\n\r\n            isDay () {\r\n                return this.type === Units.DAY\r\n            },\r\n\r\n            isWeek () {\r\n                return this.type === Units.WEEK\r\n            },\r\n\r\n            isMonth () {\r\n                return this.type === Units.MONTH\r\n            },\r\n\r\n            isYear () {\r\n                return this.type === Units.YEAR\r\n            },\r\n\r\n            adding () {\r\n                return !!(this.addStart && this.placeholder)\r\n            },\r\n\r\n            canAdd () {\r\n                return this.$dayspan.features.drag && this.handleAdd && !this.readOnly && !this.$dayspan.readOnly\r\n            },\r\n\r\n            canMove () {\r\n                return this.$dayspan.features.move && this.handleMove && !this.readOnly && !this.$dayspan.readOnly\r\n            }\r\n        },\r\n\r\n    methods:\r\n        {\r\n            refreshCurrent () {\r\n                this.calendar.refreshCurrent(this.$dayspan.today)\r\n            },\r\n\r\n            mouseDown (mouseEvent) {\r\n                if (this.canAdd && mouseEvent.left) {\r\n                    let time = mouseEvent.time\r\n                    let ev = this.getEvent('adding', {\r\n                        mouseEvent: mouseEvent,\r\n                        placeholder: this.$dayspan.getPlaceholderEventForAdd(time)\r\n                    })\r\n\r\n                    this.$emit('adding', ev)\r\n\r\n                    if (!ev.handled && ev.placeholder) {\r\n                        this.addStart = time\r\n                        this.placeholderForCreate = false\r\n                        this.placeholder = ev.placeholder\r\n                        this.placeholder.event.schedule = Schedule.forTime(time, time.asTime())\r\n                        this.placeholder.fullDay = false\r\n                    }\r\n                }\r\n            },\r\n\r\n            mouseDownDay (mouseEvent) {\r\n                if (this.canAdd && mouseEvent.left) {\r\n                    let day = mouseEvent.day\r\n                    let ev = this.getEvent('adding', {\r\n                        mouseEvent: mouseEvent,\r\n                        placeholder: this.$dayspan.getPlaceholderEventForAdd(day)\r\n                    })\r\n\r\n                    this.$emit('adding', ev)\r\n\r\n                    if (!ev.handled && ev.placeholder) {\r\n                        this.addStart = day\r\n                        this.placeholderForCreate = false\r\n                        this.placeholder = ev.placeholder\r\n                        this.placeholder.event.schedule = Schedule.forDay(day)\r\n                        this.placeholder.fullDay = true\r\n                    }\r\n                }\r\n            },\r\n\r\n            mouseUp (mouseEvent) {\r\n                if (this.addEnd) {\r\n                    this.finishAdd(mouseEvent)\r\n                }\r\n\r\n                if (this.moving) {\r\n                    this.finishMove(mouseEvent)\r\n                }\r\n\r\n                this.readyToMove = false\r\n            },\r\n\r\n            finishAdd (mouseEvent) {\r\n                var ev = this.getEvent('added', {\r\n                    mouseEvent: mouseEvent,\r\n                    placeholder: this.placeholder,\r\n                    span: this.placeholder.time\r\n                })\r\n\r\n                this.$emit('added', ev)\r\n\r\n                if (!ev.handled) {\r\n                    ev.clearPlaceholder()\r\n                }\r\n\r\n                this.endAdd()\r\n            },\r\n\r\n            finishMove (mouseEvent) {\r\n                let target = this.placeholder.time\r\n                let source = this.movingEvent.calendarEvent.time\r\n                let sameTime = target.start.sameMinute(source.start)\r\n                let sameDay = target.start.sameDay(source.start)\r\n                let isDay = mouseEvent.type === 'mouse-up-day'\r\n\r\n                if ((isDay && !sameDay) || (!isDay && !sameTime)) {\r\n                    var ev = this.getEvent('moved', {\r\n                        mouseEvent: mouseEvent,\r\n                        movingEvent: this.movingEvent,\r\n                        calendarEvent: this.movingEvent.calendarEvent,\r\n                        target: this.placeholder.time\r\n                    })\r\n\r\n                    this.$emit('moved', ev)\r\n\r\n                    if (!ev.handled) {\r\n                        ev.clearPlaceholder()\r\n                    }\r\n                } else {\r\n                    this.clearPlaceholder()\r\n                }\r\n\r\n                this.endMove()\r\n            },\r\n\r\n            mouseMoveDay (mouseEvent) {\r\n                if (this.adding && mouseEvent.left) {\r\n                    this.addEnd = mouseEvent.day\r\n\r\n                    var min = this.addStart.min(this.addEnd)\r\n                    var max = this.addStart.max(this.addEnd)\r\n\r\n                    this.placeholder.day = min.start()\r\n                    this.placeholder.time.start = min\r\n                    this.placeholder.time.end = max.end()\r\n                    this.placeholder.event.schedule = Schedule.forDay(\r\n                        this.placeholder.start,\r\n                        this.placeholder.time.days(Op.UP)\r\n                    )\r\n\r\n                    this.updatePlaceholderRow(this.placeholder)\r\n                }\r\n\r\n                this.mouseMoveCheckReady()\r\n\r\n                if (this.moving) {\r\n                    var day = mouseEvent.day\r\n\r\n                    this.placeholder.day = day\r\n                    this.placeholder.time.start = day\r\n                    this.placeholder.time.end = day.next(this.placeholder.schedule.durationInDays).end()\r\n\r\n                    this.updatePlaceholderRow(this.placeholder)\r\n                }\r\n\r\n                this.mouseMoveCheckEnd(mouseEvent)\r\n            },\r\n\r\n            mouseMove (mouseEvent) {\r\n                if (this.adding && mouseEvent.left) {\r\n                    this.addEnd = mouseEvent.timeDrag\r\n\r\n                    var min = this.addStart.min(this.addEnd)\r\n                    var max = this.addStart.max(this.addEnd)\r\n\r\n                    this.placeholder.day = min.start()\r\n                    this.placeholder.time.start = min\r\n                    this.placeholder.time.end = max\r\n                    this.placeholder.event.schedule = Schedule.forSpan(this.placeholder.time)\r\n                }\r\n\r\n                this.mouseMoveCheckReady()\r\n\r\n                if (this.moving) {\r\n                    var time = mouseEvent.time\r\n                    time = time.relative(-this.movingEvent.offset)\r\n                    time = this.$dayspan.roundTime(time, this.$dayspan.rounding.drag)\r\n\r\n                    this.placeholder.day = time.start()\r\n                    this.placeholder.time.start = time\r\n                    this.placeholder.time.end = time.relative(this.movingDuration)\r\n                }\r\n\r\n                this.mouseMoveCheckEnd(mouseEvent)\r\n            },\r\n\r\n            mouseMoveCheckEnd (mouseEvent) {\r\n                if (this.moving && !mouseEvent.left && !this.placeholderForCreate) {\r\n                    this.endMove()\r\n                    this.clearPlaceholder()\r\n                }\r\n\r\n                if (this.adding && !mouseEvent.left && !this.placeholderForCreate) {\r\n                    this.endAdd()\r\n                    this.clearPlaceholder()\r\n                }\r\n            },\r\n\r\n            mouseDownEvent (mouseEvent) {\r\n                if (this.canMove && mouseEvent.left) {\r\n                    this.readyToMove = true\r\n                    this.movingEvent = mouseEvent\r\n                }\r\n            },\r\n\r\n            mouseMoveCheckReady () {\r\n                if (this.readyToMove) {\r\n                    var moveEvent = this.movingEvent\r\n                    var calendarEvent = moveEvent.calendarEvent\r\n\r\n                    var ev = this.getEvent('moving', {\r\n                        calendarEvent: calendarEvent,\r\n                        moveEvent: moveEvent,\r\n                        placeholder: this.$dayspan.getPlaceholderEventForMove(calendarEvent)\r\n                    })\r\n\r\n                    this.$emit('moving', ev)\r\n\r\n                    if (!ev.handled && ev.placeholder) {\r\n                        this.moving = true\r\n                        this.movingDuration = calendarEvent.time.millis()\r\n                        this.placeholderForCreate = false\r\n                        this.placeholder = ev.placeholder\r\n                    }\r\n\r\n                    this.readyToMove = false\r\n                }\r\n            },\r\n\r\n            endMove () {\r\n                this.moving = false\r\n                this.movingEvent = null\r\n            },\r\n\r\n            endAdd () {\r\n                this.addStart = null\r\n                this.addEnd = null\r\n            },\r\n\r\n            updatePlaceholderRow (placeholder) {\r\n                let row = 0\r\n\r\n                this.calendar.iterateDays().iterate((day) => {\r\n                    if (placeholder.time.matchesDay(day)) {\r\n                        row = day.iterateEvents().reduce(\r\n                            row,\r\n                            (calendarEvent, maxRow) => Math.max(calendarEvent.row + 1, maxRow),\r\n                            (calendarEvent) => calendarEvent.event !== placeholder.event\r\n                        )\r\n                    }\r\n                })\r\n\r\n                placeholder.row = row\r\n            },\r\n\r\n            addPlaceholder (day, fullDay, forUpdate) {\r\n                let placeholder = this.$dayspan.getPlaceholderEventForAdd(day)\r\n                let time = placeholder.time\r\n\r\n                if (fullDay) {\r\n                    time.end = time.end.end()\r\n\r\n                    placeholder.event.schedule = Schedule.forDay(time.start)\r\n                    placeholder.fullDay = true\r\n                } else {\r\n                    time.end = time.end.nextHour()\r\n\r\n                    placeholder.event.schedule = Schedule.forSpan(time)\r\n                    placeholder.fullDay = false\r\n                }\r\n\r\n                this.updatePlaceholderRow(placeholder)\r\n\r\n                this.placeholder = placeholder\r\n                this.placeholderForCreate = !forUpdate\r\n            },\r\n\r\n            clearPlaceholder () {\r\n                this.placeholder = null\r\n                this.placeholderForCreate = false\r\n            },\r\n\r\n            getEvent (type, extra = {}) {\r\n                return fn.extend({\r\n\r\n                    type: type,\r\n                    calendar: this.calendar,\r\n                    clearPlaceholder: this.clearPlaceholder,\r\n                    handled: false,\r\n                    $vm: this,\r\n                    $element: this.$el\r\n\r\n                }, extra)\r\n            }\r\n        }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n\r\n    .ds-calendar {\r\n        width: 100%;\r\n        height: 100%;\r\n        position: relative;\r\n        padding: 0px !important;\r\n    }\r\n\r\n    .ds-month-view {\r\n        width: 100%;\r\n        height: 100%;\r\n\r\n        .ds-today {\r\n            background-color: rgba(0, 0, 0, 0.04);\r\n        }\r\n    }\r\n\r\n    .ds-week-view {\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        overflow-y: auto;\r\n        outline: none;\r\n        background-color: white;\r\n    }\r\n\r\n    .ds-year-view {\r\n\r\n        .ds-first-day {\r\n            font-weight: bold;\r\n        }\r\n\r\n        .ds-first-day-day {\r\n            background-color: rgba(0, 0, 0, 0.08);\r\n        }\r\n    }\r\n\r\n</style>\r\n"]}]}