{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/dayspan-vuetify-2/src/components/ScheduleTimes.vue?vue&type=style&index=0&id=ad9c606a&scoped=true&lang=scss&","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/dayspan-vuetify-2/src/components/ScheduleTimes.vue","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.ds-schedule-times {\n    max-width: 436px;\n\n    .ds-time-row {\n        display: flex;\n\n        .ds-time-cell {\n            padding-right: 8px;\n            flex: 1 0 0px;\n\n            &.double {\n                padding-right: 16px;\n                flex: 2 0 0px;\n            }\n        }\n    }\n}\n\n",{"version":3,"sources":["ScheduleTimes.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgPA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ScheduleTimes.vue","sourceRoot":"node_modules/dayspan-vuetify-2/src/components","sourcesContent":["<template>\r\n    <div class=\"ds-schedule-times\">\r\n\r\n        <div class=\"ds-time-row\">\r\n\r\n            <div class=\"ds-time-cell\">\r\n\r\n                <v-checkbox\r\n                        ref=\"allDayCheckbox\"\r\n                        hide-details\r\n                        class=\"ma-2\"\r\n                        :label=\"labels.all\"\r\n                        :readonly=\"isReadOnly\"\r\n                        v-model=\"allDay\"\r\n                ></v-checkbox>\r\n\r\n            </div>\r\n\r\n            <div class=\"ds-time-cell\">\r\n\r\n                <v-text-field\r\n                        single-line hide-details solo flat\r\n                        type=\"number\"\r\n                        v-model.number=\"schedule.duration\"\r\n                        :disabled=\"isReadOnly\"\r\n                        @input=\"triggerChange\"\r\n                ></v-text-field>\r\n\r\n            </div>\r\n\r\n            <div class=\"ds-time-cell\">\r\n\r\n                <v-select\r\n                        single-line hide-details solo flat\r\n                        :items=\"durationOptions\"\r\n                        v-model=\"schedule.durationUnit\"\r\n                        :disabled=\"isReadOnly\"\r\n                        @input=\"triggerChange\"\r\n                ></v-select>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div v-if=\"!allDay\">\r\n\r\n            <div class=\"ds-time-row\" v-for=\"(time, index) in schedule.times\">\r\n\r\n                <div class=\"ds-time-cell\"></div>\r\n\r\n                <ds-schedule-time\r\n                        class=\"ds-time-cell double\"\r\n                        :index=\"index\"\r\n                        :show-add=\"isLastTime( index )\"\r\n                        :show-remove=\"hasTimes\"\r\n                        :value=\"schedule.times[ index ]\"\r\n                        :key=\"index\"\r\n                        :read-only=\"readOnly\"\r\n                        @add=\"addTime\"\r\n                        @remove=\"removeTime\"\r\n                        @change=\"changeTime\"\r\n                ></ds-schedule-time>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport { Time, Schedule, Functions as fn } from 'dayspan'\r\n\r\nexport default {\r\n\r\n    name: 'dsScheduleTimes',\r\n\r\n    props:\r\n        {\r\n            schedule:\r\n                {\r\n                    required: true,\r\n                    type: Schedule\r\n                },\r\n\r\n            readOnly:\r\n                {\r\n                    type: Boolean,\r\n                    default: false\r\n                },\r\n\r\n            labels:\r\n                {\r\n                    validate (x) {\r\n                        return this.$dsValidate(x, 'labels')\r\n                    },\r\n                    default () {\r\n                        return this.$dsDefaults().labels\r\n                    }\r\n                },\r\n\r\n            defaultTime:\r\n                {\r\n                    type: String,\r\n                    default () {\r\n                        return this.$dsDefaults().defaultTime\r\n                    }\r\n                }\r\n        },\r\n\r\n    computed:\r\n        {\r\n            durationOptions () {\r\n                var singular = this.schedule.duration === 1\r\n\r\n                var duringDay = [\r\n                    {text: singular ? this.labels.minute : this.labels.minutes, value: 'minutes'},\r\n                    {text: singular ? this.labels.hour : this.labels.hours, value: 'hours'}\r\n                ]\r\n                var allDay = [\r\n                    {text: singular ? this.labels.day : this.labels.days, value: 'days'},\r\n                    {text: singular ? this.labels.week : this.labels.weeks, value: 'weeks'},\r\n                    {text: singular ? this.labels.month : this.labels.months, value: 'months'}\r\n                ]\r\n\r\n                return this.allDay ? allDay : duringDay.concat(allDay)\r\n            },\r\n\r\n            hasTimes () {\r\n                return this.schedule.times.length > 1\r\n            },\r\n\r\n            isReadOnly () {\r\n                return this.readOnly || this.$dayspan.readOnly\r\n            }\r\n        },\r\n\r\n    data: vm => ({\r\n        allDay: false\r\n    }),\r\n\r\n    watch:\r\n        {\r\n            schedule: {\r\n                handler: 'updateAllDay',\r\n                immediate: true\r\n            },\r\n            allDay: 'updateScheduleAllDay'\r\n        },\r\n\r\n    methods:\r\n        {\r\n            updateAllDay () {\r\n                this.allDay = this.schedule.isFullDay()\r\n            },\r\n\r\n            updateScheduleAllDay (allDay) {\r\n                if (this.schedule.isFullDay() !== allDay) {\r\n                    this.$dayspan.getPermission('toggleAllDay',\r\n                        (prompted) => {\r\n                            this.schedule.setFullDay(allDay)\r\n                            this.triggerChange()\r\n                        },\r\n                        () => {\r\n                            this.allDay = !allDay\r\n                        }\r\n                    )\r\n                }\r\n            },\r\n\r\n            changeTime (ev) {\r\n                ev.schedule = this.schedule\r\n                ev.updated = false\r\n\r\n                this.$emit('update', ev)\r\n\r\n                if (!ev.handled && ev.schedule) {\r\n                    ev.updated = ev.schedule.moveTime(ev.time, ev.next)\r\n                    ev.handled = true\r\n                }\r\n\r\n                this.$emit('change', ev)\r\n            },\r\n\r\n            addTime (ev) {\r\n                ev.time = Time.parse(this.defaultTime)\r\n                ev.schedule = this.schedule\r\n\r\n                if (ev.time) {\r\n                    this.$emit('add', ev)\r\n\r\n                    if (!ev.handled && ev.schedule) {\r\n                        ev.schedule.times.push(ev.time)\r\n                        ev.handled = true\r\n                    }\r\n\r\n                    this.$emit('change', ev)\r\n                }\r\n            },\r\n\r\n            removeTime (ev) {\r\n                this.$dayspan.getPermission('removeExistingTime', () => {\r\n                    ev.schedule = this.schedule\r\n\r\n                    this.$emit('remove', ev)\r\n\r\n                    if (!ev.handled && ev.schedule && ev.time) {\r\n                        ev.handled = ev.schedule.removeTime(ev.time)\r\n                    }\r\n\r\n                    this.$emit('change', ev)\r\n                })\r\n            },\r\n\r\n            isLastTime (index) {\r\n                return index === this.schedule.times.length - 1\r\n            },\r\n\r\n            triggerChange () {\r\n                this.$emit('change', this.getEvent('change'))\r\n            },\r\n\r\n            getEvent (type, extra = {}) {\r\n                return fn.extend({\r\n\r\n                    type: type,\r\n                    schedule: this.schedule,\r\n                    handled: false,\r\n                    $vm: this,\r\n                    $element: this.$el\r\n\r\n                }, extra)\r\n            }\r\n        }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n\r\n    .ds-schedule-times {\r\n        max-width: 436px;\r\n\r\n        .ds-time-row {\r\n            display: flex;\r\n\r\n            .ds-time-cell {\r\n                padding-right: 8px;\r\n                flex: 1 0 0px;\r\n\r\n                &.double {\r\n                    padding-right: 16px;\r\n                    flex: 2 0 0px;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n</style>\r\n"]}]}