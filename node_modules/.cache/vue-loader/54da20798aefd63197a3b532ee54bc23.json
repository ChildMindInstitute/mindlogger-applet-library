{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/dayspan-vuetify-2/src/components/ScheduleModifier.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/dayspan-vuetify-2/src/components/ScheduleModifier.vue","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { ScheduleModifier, Functions as fn } from 'dayspan'\r\n\r\nexport default {\r\n\r\n    name: 'dsScheduleModifier',\r\n\r\n    props:\r\n        {\r\n            modifier:\r\n                {\r\n                    required: true,\r\n                    type: ScheduleModifier\r\n                },\r\n\r\n            readOnly:\r\n                {\r\n                    type: Boolean,\r\n                    default: false\r\n                },\r\n\r\n            canRemove:\r\n                {\r\n                    type: Boolean,\r\n                    default () {\r\n                        return this.$dsDefaults().canRemove\r\n                    }\r\n                },\r\n\r\n            description:\r\n                {\r\n                    type: String,\r\n                    default () {\r\n                        return this.$dsDefaults().description\r\n                    }\r\n                }\r\n        },\r\n\r\n    data: vm => ({}),\r\n\r\n    computed:\r\n        {\r\n            identifiers () {\r\n                return this.modifier.identifiers(x => x).list()\r\n            },\r\n\r\n            isReadOnly () {\r\n                return this.readOnly || this.$dayspan.readOnly\r\n            }\r\n        },\r\n\r\n    methods:\r\n        {\r\n            remove (identifier) {\r\n                var ev = this.getEvent('remove', {identifier})\r\n\r\n                if (!ev.handled && ev.modifier) {\r\n                    ev.modifier.map[identifier] = false\r\n                    ev.handled = true\r\n                }\r\n\r\n                this.$emit('change', ev)\r\n            },\r\n\r\n            getEvent (type, extra = {}) {\r\n                return fn.extend({\r\n\r\n                    type: type,\r\n                    modifier: this.modifier,\r\n                    handled: false,\r\n                    $vm: this,\r\n                    $element: this.$el\r\n\r\n                }, extra)\r\n            }\r\n        }\r\n}\r\n",{"version":3,"sources":["ScheduleModifier.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"ScheduleModifier.vue","sourceRoot":"node_modules/dayspan-vuetify-2/src/components","sourcesContent":["<template>\r\n    <div>\r\n\r\n        <div class=\"pb-3\"\r\n             v-if=\"description\"\r\n             v-html=\"description\"></div>\r\n\r\n        <template v-for=\"id in identifiers\">\r\n\r\n            <ds-identifier-chip\r\n                    :key=\"id\"\r\n                    :identifier=\"id\"\r\n                    :can-remove=\"canRemove && !isReadOnly\"\r\n                    @remove=\"remove\"\r\n            ></ds-identifier-chip>\r\n\r\n        </template>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { ScheduleModifier, Functions as fn } from 'dayspan'\r\n\r\nexport default {\r\n\r\n    name: 'dsScheduleModifier',\r\n\r\n    props:\r\n        {\r\n            modifier:\r\n                {\r\n                    required: true,\r\n                    type: ScheduleModifier\r\n                },\r\n\r\n            readOnly:\r\n                {\r\n                    type: Boolean,\r\n                    default: false\r\n                },\r\n\r\n            canRemove:\r\n                {\r\n                    type: Boolean,\r\n                    default () {\r\n                        return this.$dsDefaults().canRemove\r\n                    }\r\n                },\r\n\r\n            description:\r\n                {\r\n                    type: String,\r\n                    default () {\r\n                        return this.$dsDefaults().description\r\n                    }\r\n                }\r\n        },\r\n\r\n    data: vm => ({}),\r\n\r\n    computed:\r\n        {\r\n            identifiers () {\r\n                return this.modifier.identifiers(x => x).list()\r\n            },\r\n\r\n            isReadOnly () {\r\n                return this.readOnly || this.$dayspan.readOnly\r\n            }\r\n        },\r\n\r\n    methods:\r\n        {\r\n            remove (identifier) {\r\n                var ev = this.getEvent('remove', {identifier})\r\n\r\n                if (!ev.handled && ev.modifier) {\r\n                    ev.modifier.map[identifier] = false\r\n                    ev.handled = true\r\n                }\r\n\r\n                this.$emit('change', ev)\r\n            },\r\n\r\n            getEvent (type, extra = {}) {\r\n                return fn.extend({\r\n\r\n                    type: type,\r\n                    modifier: this.modifier,\r\n                    handled: false,\r\n                    $vm: this,\r\n                    $element: this.$el\r\n\r\n                }, extra)\r\n            }\r\n        }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n\r\n</style>\r\n"]}]}