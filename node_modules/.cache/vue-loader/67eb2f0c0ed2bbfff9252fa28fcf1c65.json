{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/dayspan-vuetify-2/src/components/DayTimes.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/dayspan-vuetify-2/src/components/DayTimes.vue","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { Constants, CalendarDay, CalendarEvent, Calendar, DaySpan, Functions as fn } from 'dayspan'\r\n\r\nexport default {\r\n\r\n    name: 'dsDayTimes',\r\n\r\n    props:\r\n        {\r\n            day:\r\n                {\r\n                    required: true,\r\n                    type: CalendarDay\r\n                },\r\n\r\n            calendar:\r\n                {\r\n                    required: true,\r\n                    type: Calendar\r\n                },\r\n\r\n            placeholder:\r\n                {\r\n                    type: CalendarEvent\r\n                },\r\n\r\n            placeholderForCreate:\r\n                {\r\n                    type: Boolean,\r\n                    default: false\r\n                }\r\n        },\r\n\r\n    computed:\r\n        {\r\n            classesDay () {\r\n                return {\r\n                    'ds-day-today': this.day.currentDay,\r\n                    'ds-day-past': this.day.currentOffset < 0,\r\n                    'ds-day-future': this.day.currentOffset > 0\r\n                }\r\n            },\r\n\r\n            nowLine () {\r\n                return this.$dayspan.getStyleNow()\r\n            },\r\n\r\n            hasPlaceholder () {\r\n                return this.placeholder &&\r\n                    !this.placeholder.fullDay &&\r\n                    this.placeholder.time.matchesDay(this.day)\r\n            }\r\n        },\r\n\r\n    methods:\r\n        {\r\n            isVisible (calendarEvent) {\r\n                if (calendarEvent.fullDay) {\r\n                    return false\r\n                }\r\n\r\n                if (this.$dayspan.features.hideOnMove &&\r\n                    this.placeholder &&\r\n                    this.placeholder.event === calendarEvent.event) {\r\n                    return false\r\n                }\r\n\r\n                return true\r\n            },\r\n\r\n            addAt (hour) {\r\n                this.$emit('add-at', {\r\n                    day: this.day,\r\n                    hour: hour - 1\r\n                })\r\n            },\r\n\r\n            mouseEnterDay ($event) {\r\n                this.$emit('mouse-enter-day', this.day)\r\n            },\r\n\r\n            mouseLeaveDay ($event) {\r\n                this.$emit('mouse-leave-day', this.day)\r\n            },\r\n\r\n            mouseMove ($event) {\r\n                var time = this.getTimeAt($event, this.$dayspan.rounding.move)\r\n                var timeDrag = this.getTimeAt($event, this.$dayspan.rounding.add, true)\r\n                var ev = this.getEvent('mouse-move', $event, {time, timeDrag})\r\n\r\n                this.$emit('mouse-move', ev)\r\n            },\r\n\r\n            mouseDown ($event) {\r\n                var time = this.getTimeAt($event, this.$dayspan.rounding.add)\r\n                var ev = this.getEvent('mouse-down', $event, {time})\r\n\r\n                this.$emit('mouse-down', ev)\r\n            },\r\n\r\n            mouseUp ($event) {\r\n                var time = this.getTimeAt($event, this.$dayspan.rounding.add, true)\r\n                var ev = this.getEvent('mouse-up', $event, {time})\r\n\r\n                this.$emit('mouse-up', ev)\r\n            },\r\n\r\n            getEvent (type, $event, extra = {}) {\r\n                return fn.extend({\r\n\r\n                    type: type,\r\n                    day: this.day,\r\n                    left: $event.button === 0 && $event.buttons > 0,\r\n                    right: $event.button === 1 && $event.buttons > 0,\r\n                    handled: false,\r\n                    $event: $event,\r\n                    $vm: this,\r\n                    $element: this.$el\r\n\r\n                }, extra)\r\n            },\r\n\r\n            getTimeAt ($event, roundTo, roundUp) {\r\n                var bounds = this.$el.getBoundingClientRect()\r\n                var y = ($event.clientY - bounds.y) / bounds.height\r\n                var millis = Math.round(Constants.MILLIS_IN_DAY * y)\r\n                var time = this.day.start().relative(millis)\r\n\r\n                if (roundTo) {\r\n                    time = this.$dayspan.roundTime(time, roundTo, roundUp)\r\n                }\r\n\r\n                return time\r\n            }\r\n        }\r\n}\r\n",{"version":3,"sources":["DayTimes.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"DayTimes.vue","sourceRoot":"node_modules/dayspan-vuetify-2/src/components","sourcesContent":["<template>\r\n\r\n    <div class=\"ds-day\"\r\n         :class=\"classesDay\"\r\n         @mouseenter=\"mouseEnterDay\"\r\n         @mouseleave=\"mouseLeaveDay\"\r\n         @mousemove.stop=\"mouseMove\"\r\n         @mousedown=\"mouseDown\"\r\n         @mouseup=\"mouseUp\"\r\n         @dragstart.prevent>\r\n\r\n        <div class=\"ds-hour\"\r\n             v-for=\"h in 24\"\r\n             @click.stop=\"addAt( h )\"></div>\r\n\r\n        <template v-for=\"(event, i) in day.events\">\r\n\r\n            <ds-calendar-event-time\r\n                    v-if=\"isVisible( event )\"\r\n                    v-bind=\"{$scopedSlots}\"\r\n                    v-on=\"$listeners\"\r\n                    :calendar-event=\"event\"\r\n                    :key=\"event.id\"\r\n                    :calendar=\"calendar\"\r\n            ></ds-calendar-event-time>\r\n\r\n        </template>\r\n\r\n        <div v-if=\"day.currentDay\"\r\n             :style=\"nowLine\"></div>\r\n\r\n        <div v-if=\"hasPlaceholder\">\r\n\r\n            <ds-calendar-event-time-placeholder\r\n                    v-bind=\"{$scopedSlots}\"\r\n                    v-on=\"$listeners\"\r\n                    :day=\"day\"\r\n                    :placeholder=\"placeholder\"\r\n                    :placeholder-for-create=\"placeholderForCreate\"\r\n                    :calendar=\"calendar\"\r\n            ></ds-calendar-event-time-placeholder>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport { Constants, CalendarDay, CalendarEvent, Calendar, DaySpan, Functions as fn } from 'dayspan'\r\n\r\nexport default {\r\n\r\n    name: 'dsDayTimes',\r\n\r\n    props:\r\n        {\r\n            day:\r\n                {\r\n                    required: true,\r\n                    type: CalendarDay\r\n                },\r\n\r\n            calendar:\r\n                {\r\n                    required: true,\r\n                    type: Calendar\r\n                },\r\n\r\n            placeholder:\r\n                {\r\n                    type: CalendarEvent\r\n                },\r\n\r\n            placeholderForCreate:\r\n                {\r\n                    type: Boolean,\r\n                    default: false\r\n                }\r\n        },\r\n\r\n    computed:\r\n        {\r\n            classesDay () {\r\n                return {\r\n                    'ds-day-today': this.day.currentDay,\r\n                    'ds-day-past': this.day.currentOffset < 0,\r\n                    'ds-day-future': this.day.currentOffset > 0\r\n                }\r\n            },\r\n\r\n            nowLine () {\r\n                return this.$dayspan.getStyleNow()\r\n            },\r\n\r\n            hasPlaceholder () {\r\n                return this.placeholder &&\r\n                    !this.placeholder.fullDay &&\r\n                    this.placeholder.time.matchesDay(this.day)\r\n            }\r\n        },\r\n\r\n    methods:\r\n        {\r\n            isVisible (calendarEvent) {\r\n                if (calendarEvent.fullDay) {\r\n                    return false\r\n                }\r\n\r\n                if (this.$dayspan.features.hideOnMove &&\r\n                    this.placeholder &&\r\n                    this.placeholder.event === calendarEvent.event) {\r\n                    return false\r\n                }\r\n\r\n                return true\r\n            },\r\n\r\n            addAt (hour) {\r\n                this.$emit('add-at', {\r\n                    day: this.day,\r\n                    hour: hour - 1\r\n                })\r\n            },\r\n\r\n            mouseEnterDay ($event) {\r\n                this.$emit('mouse-enter-day', this.day)\r\n            },\r\n\r\n            mouseLeaveDay ($event) {\r\n                this.$emit('mouse-leave-day', this.day)\r\n            },\r\n\r\n            mouseMove ($event) {\r\n                var time = this.getTimeAt($event, this.$dayspan.rounding.move)\r\n                var timeDrag = this.getTimeAt($event, this.$dayspan.rounding.add, true)\r\n                var ev = this.getEvent('mouse-move', $event, {time, timeDrag})\r\n\r\n                this.$emit('mouse-move', ev)\r\n            },\r\n\r\n            mouseDown ($event) {\r\n                var time = this.getTimeAt($event, this.$dayspan.rounding.add)\r\n                var ev = this.getEvent('mouse-down', $event, {time})\r\n\r\n                this.$emit('mouse-down', ev)\r\n            },\r\n\r\n            mouseUp ($event) {\r\n                var time = this.getTimeAt($event, this.$dayspan.rounding.add, true)\r\n                var ev = this.getEvent('mouse-up', $event, {time})\r\n\r\n                this.$emit('mouse-up', ev)\r\n            },\r\n\r\n            getEvent (type, $event, extra = {}) {\r\n                return fn.extend({\r\n\r\n                    type: type,\r\n                    day: this.day,\r\n                    left: $event.button === 0 && $event.buttons > 0,\r\n                    right: $event.button === 1 && $event.buttons > 0,\r\n                    handled: false,\r\n                    $event: $event,\r\n                    $vm: this,\r\n                    $element: this.$el\r\n\r\n                }, extra)\r\n            },\r\n\r\n            getTimeAt ($event, roundTo, roundUp) {\r\n                var bounds = this.$el.getBoundingClientRect()\r\n                var y = ($event.clientY - bounds.y) / bounds.height\r\n                var millis = Math.round(Constants.MILLIS_IN_DAY * y)\r\n                var time = this.day.start().relative(millis)\r\n\r\n                if (roundTo) {\r\n                    time = this.$dayspan.roundTime(time, roundTo, roundUp)\r\n                }\r\n\r\n                return time\r\n            }\r\n        }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n\r\n    .v-menu__activator {\r\n        align-items: end;\r\n    }\r\n\r\n    .ds-day {\r\n        flex: 1;\r\n        width: 0;\r\n        border-right: #e0e0e0 1px solid;\r\n        border-bottom: #e0e0e0 1px solid;\r\n\r\n        &.ds-day-today {\r\n            background-color: rgba(0, 0, 0, 0.04);\r\n        }\r\n\r\n        &.ds-day-past {\r\n\r\n        }\r\n\r\n        &.ds-day-future {\r\n\r\n        }\r\n    }\r\n\r\n    .ds-hour {\r\n        height: 40px;\r\n        border-bottom: #e0e0e0 1px solid;\r\n    }\r\n\r\n</style>\r\n"]}]}