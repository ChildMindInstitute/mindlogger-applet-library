{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/dayspan-vuetify-2/src/components/Schedule.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/dayspan-vuetify-2/src/components/Schedule.vue","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { Day, Schedule, Functions as fn } from 'dayspan'\r\n\r\nexport default {\r\n\r\n    name: 'dsSchedule',\r\n\r\n    props:\r\n        {\r\n            schedule:\r\n                {\r\n                    required: true,\r\n                    type: Schedule\r\n                },\r\n\r\n            day:\r\n                {\r\n                    type: Day\r\n                },\r\n\r\n            readOnly:\r\n                {\r\n                    type: Boolean,\r\n                    default: false\r\n                },\r\n\r\n            labels:\r\n                {\r\n                    validate (x) {\r\n                        return this.$dsValidate(x, 'labels')\r\n                    },\r\n                    default () {\r\n                        return this.$dsDefaults().labels\r\n                    }\r\n                },\r\n\r\n            allowsRange:\r\n                {\r\n                    type: Boolean,\r\n                    default () {\r\n                        return this.$dsDefaults().allowsRange\r\n                    }\r\n                }\r\n        },\r\n\r\n    data: vm => ({}),\r\n\r\n    computed:\r\n        {\r\n            showRange () {\r\n                return this.allowsRange && !this.schedule.isSingleEvent()\r\n            },\r\n\r\n            classes () {\r\n                return {\r\n                    'ds-schedule-small': this.$vuetify.breakpoint.smAndDown\r\n                }\r\n            },\r\n\r\n            isReadOnly () {\r\n                return this.readOnly || this.$dayspan.readOnly\r\n            }\r\n        },\r\n\r\n    methods:\r\n        {\r\n            custom () {\r\n                this.$refs.customScheduler.edit(this.schedule, this.day)\r\n            },\r\n\r\n            setType (type) {\r\n                this.$emit('type', type)\r\n            }\r\n        }\r\n}\r\n",{"version":3,"sources":["Schedule.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Schedule.vue","sourceRoot":"node_modules/dayspan-vuetify-2/src/components","sourcesContent":["<template>\r\n\r\n    <div class=\"ds-schedule\"\r\n         :class=\"classes\">\r\n\r\n        <div class=\"ds-schedule-span\" v-if=\"showRange\">\r\n\r\n            <!-- Span -->\r\n            <slot name=\"scheduleSpan\" v-bind=\"{schedule, day}\">\r\n\r\n                <ds-schedule-span\r\n                        :schedule=\"schedule\"\r\n                        :day=\"day\"\r\n                        :read-only=\"readOnly\"\r\n                ></ds-schedule-span>\r\n\r\n            </slot>\r\n\r\n        </div>\r\n\r\n        <div class=\"ds-schedule-type-line\">\r\n\r\n            <div class=\"ds-schedule-type\">\r\n\r\n                <!-- Type -->\r\n                <slot name=\"scheduleType\" v-bind=\"{schedule, day, setType, custom}\">\r\n\r\n                    <ds-schedule-type\r\n                            :day=\"day\"\r\n                            :schedule=\"schedule\"\r\n                            :read-only=\"readOnly\"\r\n                            @change=\"setType\"\r\n                            @custom=\"custom\"\r\n                    ></ds-schedule-type>\r\n\r\n                </slot>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <v-layout row wrap>\r\n\r\n            <v-flex xs12>\r\n\r\n                <!-- Times -->\r\n                <slot name=\"scheduleTimes\" v-bind=\"{schedule, day}\">\r\n\r\n                    <ds-schedule-times\r\n                            :schedule=\"schedule\"\r\n                            :read-only=\"readOnly\"\r\n                    ></ds-schedule-times>\r\n\r\n                </slot>\r\n\r\n            </v-flex>\r\n            <v-flex xs12 v-if=\"!isReadOnly\">\r\n\r\n                <slot name=\"scheduleFooter\" v-bind=\"{schedule, day}\"></slot>\r\n\r\n                <!-- Custom -->\r\n                <ds-schedule-type-custom-dialog\r\n                        v-bind=\"{$scopedSlots}\"\r\n                        ref=\"customScheduler\"\r\n                ></ds-schedule-type-custom-dialog>\r\n\r\n            </v-flex>\r\n        </v-layout>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { Day, Schedule, Functions as fn } from 'dayspan'\r\n\r\nexport default {\r\n\r\n    name: 'dsSchedule',\r\n\r\n    props:\r\n        {\r\n            schedule:\r\n                {\r\n                    required: true,\r\n                    type: Schedule\r\n                },\r\n\r\n            day:\r\n                {\r\n                    type: Day\r\n                },\r\n\r\n            readOnly:\r\n                {\r\n                    type: Boolean,\r\n                    default: false\r\n                },\r\n\r\n            labels:\r\n                {\r\n                    validate (x) {\r\n                        return this.$dsValidate(x, 'labels')\r\n                    },\r\n                    default () {\r\n                        return this.$dsDefaults().labels\r\n                    }\r\n                },\r\n\r\n            allowsRange:\r\n                {\r\n                    type: Boolean,\r\n                    default () {\r\n                        return this.$dsDefaults().allowsRange\r\n                    }\r\n                }\r\n        },\r\n\r\n    data: vm => ({}),\r\n\r\n    computed:\r\n        {\r\n            showRange () {\r\n                return this.allowsRange && !this.schedule.isSingleEvent()\r\n            },\r\n\r\n            classes () {\r\n                return {\r\n                    'ds-schedule-small': this.$vuetify.breakpoint.smAndDown\r\n                }\r\n            },\r\n\r\n            isReadOnly () {\r\n                return this.readOnly || this.$dayspan.readOnly\r\n            }\r\n        },\r\n\r\n    methods:\r\n        {\r\n            custom () {\r\n                this.$refs.customScheduler.edit(this.schedule, this.day)\r\n            },\r\n\r\n            setType (type) {\r\n                this.$emit('type', type)\r\n            }\r\n        }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n\r\n    .ds-schedule {\r\n\r\n        .ds-schedule-type {\r\n            max-width: 436px;\r\n            padding-right: 8px;\r\n        }\r\n\r\n        &.ds-schedule-small {\r\n\r\n            .ds-schedule-type {\r\n                width: 100%;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n</style>\r\n"]}]}