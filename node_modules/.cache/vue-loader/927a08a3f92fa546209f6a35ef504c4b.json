{"remainingRequest":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/src/components/Header/header.vue?vue&type=template&id=0570c662&scoped=true&","dependencies":[{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/src/components/Header/header.vue","mtime":1617365225000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Disk1/work/work/mindlogger/mindlogger-applet-library/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"v-app-bar\",\n    { attrs: { app: \"\", color: \"primary\", dark: \"\" } },\n    [\n      _c(\"v-img\", {\n        staticClass: \"logo\",\n        attrs: { src: \"/images/logo.png\", \"max-width\": \"130\", contain: \"\" },\n        on: { click: _vm.onDashboard }\n      }),\n      _c(\n        \"v-btn\",\n        {\n          staticClass: \"toolbar-btn\",\n          attrs: { color: \"primary\" },\n          on: { click: _vm.onDashboard }\n        },\n        [_vm._v(\"\\n    \" + _vm._s(_vm.$t(\"mindloggerDashboard\")) + \"\\n  \")]\n      ),\n      _c(\n        \"v-btn\",\n        {\n          staticClass: \"toolbar-btn\",\n          attrs: { color: \"primary\" },\n          on: { click: _vm.onLibrarySearch }\n        },\n        [_vm._v(\"\\n    \" + _vm._s(_vm.$t(\"mindloggerLibrary\")) + \"\\n  \")]\n      ),\n      _c(\"v-spacer\"),\n      _vm.isLoggedIn\n        ? _c(\n            \"v-btn\",\n            {\n              staticClass: \"toolbar-btn\",\n              attrs: { color: \"primary\" },\n              on: { click: _vm.onLogout }\n            },\n            [_vm._v(\"\\n    \" + _vm._s(_vm.$t(\"logout\")) + \"\\n  \")]\n          )\n        : _c(\n            \"v-btn\",\n            {\n              staticClass: \"toolbar-btn\",\n              attrs: { color: \"primary\" },\n              on: { click: _vm.onLogin }\n            },\n            [_vm._v(\"\\n    \" + _vm._s(_vm.$t(\"login\")) + \"\\n  \")]\n          )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}