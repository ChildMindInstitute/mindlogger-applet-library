{"version":3,"sources":["../../src/ts/modules/moduleRegistry.ts"],"names":[],"mappings":";;;;;;;;AAEA,kCAA2B;AAE3B;IAAA;IAuCA,CAAC;IAlCiB,uBAAQ,GAAtB,UAAuB,MAAc;QACjC,cAAc,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC;IAC1D,CAAC;IAEa,8BAAe,GAA7B,UAA8B,OAAiB;QAC3C,IAAG,CAAC,OAAO,EAAE;YACT,OAAO;SACV;QACD,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;IAC7C,CAAC;IAEa,+BAAgB,GAA9B,UAA+B,UAAuB,EAAE,MAAc;QAClE,IAAI,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE;YAC/B,OAAO,IAAI,CAAC;SACf;QAED,IAAM,UAAU,GAAG,MAAM,GAAG,UAAU,CAAC;QACvC,IAAM,cAAc,GAAG,4BAA0B,MAAM,mBAAc,UAAU,sBAAmB;eAC5F,gDAA6C,UAAU,OAAG,CAAA,CAAC;QAEjE,SAAC,CAAC,MAAM,CAAC;YACL,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACjC,CAAC,EAAE,UAAU,CAAC,CAAC;QAEf,OAAO,KAAK,CAAC;IACjB,CAAC;IAEa,2BAAY,GAA1B,UAA2B,UAAuB;QAC9C,OAAO,CAAC,CAAC,cAAc,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;IACnD,CAAC;IAEa,mCAAoB,GAAlC;QACI,OAAO,SAAC,CAAC,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;IAC/C,CAAC;IApCD,kEAAkE;IACnD,yBAAU,GAA+B,EAAE,CAAC;IAoC/D,qBAAC;CAvCD,AAuCC,IAAA;AAvCY,wCAAc","file":"moduleRegistry.js","sourcesContent":["import {Module} from \"../interfaces/iModule\";\nimport {ModuleNames} from \"./moduleNames\";\nimport {_} from \"../utils\";\n\nexport class ModuleRegistry {\n\n    // having in a map a) removes duplicates and b) allows fast lookup\n    private static modulesMap: { [name: string]: Module } = {};\n\n    public static register(module: Module): void {\n        ModuleRegistry.modulesMap[module.moduleName] = module;\n    }\n\n    public static registerModules(modules: Module[]): void {\n        if(!modules) {\n            return;\n        }\n        modules.forEach(ModuleRegistry.register);\n    }\n\n    public static assertRegistered(moduleName: ModuleNames, reason: string): boolean {\n        if (this.isRegistered(moduleName)) {\n            return true;\n        }\n\n        const warningKey = reason + moduleName;\n        const warningMessage = `ag-Grid: unable to use ${reason} as module ${moduleName} is not present. `\n            + `You need to load the module with: import \"${moduleName}\"`;\n\n        _.doOnce(() => {\n            console.warn(warningMessage);\n        }, warningKey);\n\n        return false;\n    }\n\n    public static isRegistered(moduleName: ModuleNames): boolean {\n        return !!ModuleRegistry.modulesMap[moduleName];\n    }\n\n    public static getRegisteredModules(): Module[] {\n        return _.values(ModuleRegistry.modulesMap);\n    }\n}\n"]}