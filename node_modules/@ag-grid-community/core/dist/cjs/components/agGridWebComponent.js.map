{"version":3,"sources":["../../src/ts/components/agGridWebComponent.ts"],"names":[],"mappings":"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","file":"agGridWebComponent.js","sourcesContent":["import { ComponentUtil } from \"./componentUtil\";\nimport { Grid, GridParams } from \"../grid\";\n\nlet registered = false;\n\nexport function initialiseAgGridWithWebComponents() {\n\n    console.warn('ag-grid: initialiseAgGridWithWebComponents is deprecated. Please use the ag-grid-webcomponent dependency instead. ');\n\n    // only register to WebComponents once\n    if (registered) {\n        return;\n    }\n    registered = true;\n\n    if (typeof document === 'undefined' || !(document as any).registerElement) {\n        console.error('ag-Grid: unable to find document.registerElement() function, unable to initialise ag-Grid as a Web Component');\n    }\n\n    // i don't think this type of extension is possible in TypeScript, so back to\n    // plain Javascript to create this object\n    const AgileGridProto = Object.create(HTMLElement.prototype);\n\n    // wrap each property with a get and set method, so we can track when changes are done\n    ComponentUtil.ALL_PROPERTIES.forEach((key) => {\n       Object.defineProperty(AgileGridProto, key, {\n           set: function(v) {\n               this.__agGridSetProperty(key, v);\n           },\n           get: function() {\n               return this.__agGridGetProperty(key);\n           },\n           enumerable: true,\n           configurable: true\n       });\n    });\n\n    const agGridProtoNoType = AgileGridProto;\n\n    agGridProtoNoType.__agGridSetProperty = function(key: string, value: any) {\n        if (!this.__attributes) {\n            this.__attributes = {};\n        }\n        this.__attributes[key] = value;\n        // keeping this consistent with the ng2 onChange, so I can reuse the handling code\n        const changeObject = {} as any;\n        changeObject[key] = {currentValue: value};\n        this.onChange(changeObject);\n    };\n\n    agGridProtoNoType.onChange = function(changes: any) {\n        if (this._initialised) {\n            ComponentUtil.processOnChange(changes, this._gridOptions, this.api, this.columnApi);\n        }\n    };\n\n    agGridProtoNoType.__agGridGetProperty = function(key: string) {\n        if (!this.__attributes) {\n            this.__attributes = {};\n        }\n        return this.__attributes[key];\n    };\n\n    agGridProtoNoType.setGridOptions = function(options: any) {\n\n        const globalEventListener = this.globalEventListener.bind(this);\n        this._gridOptions = ComponentUtil.copyAttributesToGridOptions(options, this);\n        const gridParams: GridParams = {\n            globalEventListener: globalEventListener\n        };\n        this._agGrid = new Grid(this, this._gridOptions, gridParams);\n\n        this.api = options.api;\n        this.columnApi = options.columnApi;\n\n        this._initialised = true;\n    };\n\n    // copies all the attributes into this object\n    agGridProtoNoType.createdCallback = function() {\n       for (let i = 0; i < this.attributes.length; i++) {\n           const attribute = this.attributes[i];\n           this.setPropertyFromAttribute(attribute);\n       }\n    };\n\n    agGridProtoNoType.setPropertyFromAttribute = function(attribute: any) {\n        const name = toCamelCase(attribute.nodeName);\n        const value = attribute.nodeValue;\n        if (ComponentUtil.ALL_PROPERTIES.indexOf(name) >= 0) {\n            this[name] = value;\n        }\n    };\n\n    agGridProtoNoType.attachedCallback = function(params: any) {};\n\n    agGridProtoNoType.detachedCallback = function(params: any) {};\n\n    agGridProtoNoType.attributeChangedCallback = function(attributeName: string) {\n        const attribute = this.attributes[attributeName];\n        this.setPropertyFromAttribute(attribute);\n    };\n\n    agGridProtoNoType.globalEventListener = function(eventType: string, event: any): void {\n        const eventLowerCase = eventType.toLowerCase();\n        const browserEvent = new Event(eventLowerCase);\n\n        const browserEventNoType = browserEvent as any;\n        browserEventNoType.agGridDetails = event;\n\n        this.dispatchEvent(browserEvent);\n\n        const callbackMethod = 'on' + eventLowerCase;\n        if (typeof this[callbackMethod] === 'function') {\n            this[callbackMethod](browserEvent);\n        }\n    };\n\n    // finally, register\n    (document as any).registerElement('ag-grid', {prototype: AgileGridProto});\n}\n\nfunction toCamelCase(myString: string): string {\n    if (typeof myString === 'string') {\n        const result = myString.replace(/-([a-z])/g, function(g) {\n            return g[1].toUpperCase();\n        });\n        return result;\n    } else {\n        return myString;\n    }\n}\n"]}