{"version":3,"sources":["../../src/ts/widgets/agAbstractInputField.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,+DAAqD;AACrD,qDAAoD;AACpD,kCAA6B;AAQ7B;IAA8E,wCAAkB;IAAhG;QAAA,qEAgEC;QA5Da,YAAM,GAAgB,EAAE,CAAC;QAEzB,cAAQ,GACd,wSAKO,CAAC;;IAoDhB,CAAC;IA9Ca,4CAAa,GAAvB;QACI,iBAAM,aAAa,WAAE,CAAC;QACtB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,SAAC,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAEvC,IAAA,gBAA8B,EAA5B,gBAAK,EAAE,gBAAqB,CAAC;QAErC,IAAI,KAAK,IAAI,IAAI,EAAE;YACf,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SACxB;QAED,IAAI,KAAK,IAAI,IAAI,EAAE;YACf,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SACxB;QAED,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC7B,CAAC;IAES,gDAAiB,GAA3B;QAAA,iBAMC;QALG,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,EAAE,UAAC,CAAC;YACrD,IAAM,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;YAE7B,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,2CAAY,GAApB;QACI,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SACpD;IACL,CAAC;IAEM,8CAAe,GAAtB;QACI,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAEM,4CAAa,GAApB,UAAqB,KAAsB;QACvC,SAAC,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QACxC,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,2CAAY,GAAnB,UAAoB,IAAY;QAC5B,IAAI,CAAC,eAAe,EAAE,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAElD,OAAO,IAAI,CAAC;IAChB,CAAC;IAjDsB;QAAtB,kCAAW,CAAC,QAAQ,CAAC;wDAA+B;IAC5B;QAAxB,kCAAW,CAAC,UAAU,CAAC;0DAAiC;IAClC;QAAtB,kCAAW,CAAC,QAAQ,CAAC;wDAAqB;IAgD/C,2BAAC;CAhED,AAgEC,CAhE6E,iCAAe,GAgE5F;AAhEqB,oDAAoB","file":"agAbstractInputField.js","sourcesContent":["import { IAgLabel } from \"./agAbstractLabel\";\nimport { RefSelector } from \"./componentAnnotations\";\nimport { AgAbstractField } from \"./agAbstractField\";\nimport { _ } from \"../utils\";\n\nexport interface IInputField extends IAgLabel {\n    value?: any;\n    width?: number;\n}\n\nexport type FieldElement = HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement;\nexport abstract class AgAbstractInputField<T extends FieldElement, K> extends AgAbstractField<K> {\n    protected abstract className: string;\n    protected abstract inputType: string;\n\n    protected config: IInputField = {};\n\n    protected TEMPLATE =\n        `<div class=\"ag-input-field\" role=\"presentation\">\n            <label ref=\"eLabel\"></label>\n            <div ref=\"eWrapper\" class=\"ag-wrapper ag-input-wrapper\" role=\"presentation\">\n                <%displayField% ref=\"eInput\"></%displayField%>\n            </div>\n        </div>`;\n\n    @RefSelector('eLabel') protected eLabel: HTMLElement;\n    @RefSelector('eWrapper') protected eWrapper: HTMLElement;\n    @RefSelector('eInput') protected eInput: T;\n\n    protected postConstruct() {\n        super.postConstruct();\n        this.setInputType();\n        _.addCssClass(this.getGui(), this.className);\n\n        const { width, value } = this.config;\n\n        if (width != null) {\n            this.setWidth(width);\n        }\n\n        if (value != null) {\n            this.setValue(value);\n        }\n\n        this.addInputListeners();\n    }\n\n    protected addInputListeners() {\n        this.addDestroyableEventListener(this.eInput, 'input', (e) => {\n            const value = e.target.value;\n\n            this.setValue(value);\n        });\n    }\n\n    private setInputType() {\n        if (this.inputType) {\n            this.eInput.setAttribute('type', this.inputType);\n        }\n    }\n\n    public getInputElement(): FieldElement {\n        return this.eInput;\n    }\n\n    public setInputWidth(width: number | 'flex'): this {\n        _.setElementWidth(this.eWrapper, width);\n        return this;\n    }\n\n    public setInputName(name: string): this {\n        this.getInputElement().setAttribute('name', name);\n\n        return this;\n    }\n}"]}