{"version":3,"sources":["../../src/ts/widgets/messageBox.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,uCAAqD;AACrD,8CAAmD;AACnD,yCAAwC;AACxC,+DAAqD;AAMrD;IAAgC,8BAAQ;IAIpC,oBAAY,MAAwB;QAApC,YACI,kBAAM,MAAM,CAAC,SAEhB;QADG,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;;IAClC,CAAC;IAED,kCAAa,GAAb;QAAA,iBAUC;QATG,IAAM,eAAe,GAAG,IAAI,WAAW,EAAE,CAAC;QAC1C,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,CAAC;QAExC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACzC,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC;QAEvC,iBAAM,aAAa,WAAE,CAAC;QAEtB,IAAI,CAAC,2BAA2B,CAAC,eAAe,EAAE,QAAQ,EAAE,cAAM,OAAA,KAAI,CAAC,KAAK,EAAE,EAAZ,CAAY,CAAC,CAAC;IACpF,CAAC;IACL,iBAAC;AAAD,CApBA,AAoBC,CApB+B,mBAAQ,GAoBvC;AApBY,gCAAU;AAsBvB;IAA0B,+BAAS;IAa/B;eACI,kBAAM,WAAW,CAAC,QAAQ,CAAC;IAC/B,CAAC;IAEM,gCAAU,GAAjB,UAAkB,OAAe;QAC7B,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC;IACrC,CAAC;IAGO,mCAAa,GAArB;QACI,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAChF,CAAC;IAEO,4BAAM,GAAd;QACI,IAAI,CAAC,aAAa,CAAC,EAAC,IAAI,EAAE,QAAQ,EAAC,CAAC,CAAC;IACzC,CAAC;IA1Bc,oBAAQ,GACnB,uQAKO,CAAC;IAEY;QAAvB,kCAAW,CAAC,SAAS,CAAC;gDAA8B;IACjC;QAAnB,kCAAW,CAAC,KAAK,CAAC;4CAA0B;IAW7C;QADC,uBAAa;oDAGb;IAKL,kBAAC;CA7BD,AA6BC,CA7ByB,qBAAS,GA6BlC","file":"messageBox.js","sourcesContent":["import { AgDialog, DialogOptions } from \"./agDialog\";\nimport { PostConstruct } from \"../context/context\";\nimport { Component } from \"./component\";\nimport { RefSelector } from \"./componentAnnotations\";\n\ninterface MessageBoxConfig extends DialogOptions {\n    message?: string;\n}\n\nexport class MessageBox extends AgDialog {\n\n    private message: string;\n\n    constructor(config: MessageBoxConfig) {\n        super(config);\n        this.message = config.message;\n    }\n\n    postConstruct() {\n        const messageBodyComp = new MessageBody();\n        this.wireDependentBean(messageBodyComp);\n\n        messageBodyComp.setMessage(this.message);\n        this.setBodyComponent(messageBodyComp);\n\n        super.postConstruct();\n\n        this.addDestroyableEventListener(messageBodyComp, 'onBtOk', () => this.close());\n    }\n}\n\nclass MessageBody extends Component {\n\n    private static TEMPLATE =\n        `<div class=\"ag-message-box\">\n            <div ref=\"eCenter\" class=\"ag-message-box-content\"></div>\n            <div ref=\"eButtons\" class=\"ag-message-box-button-bar\">\n                <button ref=\"eOk\">OK</button>\n            </div>\n        </div>`;\n\n    @RefSelector('eCenter') private eCenter: HTMLElement;\n    @RefSelector('eOk') private eOk: HTMLElement;\n\n    constructor() {\n        super(MessageBody.TEMPLATE);\n    }\n\n    public setMessage(message: string): void {\n        this.eCenter.innerText = message;\n    }\n\n    @PostConstruct\n    private postConstruct(): void {\n        this.addDestroyableEventListener(this.eOk, 'click', this.onBtOk.bind(this));\n    }\n\n    private onBtOk() {\n        this.dispatchEvent({type: 'onBtOk'});\n    }\n}"]}