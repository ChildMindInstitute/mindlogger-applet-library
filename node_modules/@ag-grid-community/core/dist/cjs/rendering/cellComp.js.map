{"version":3,"sources":["../../src/ts/rendering/cellComp.ts"],"names":[],"mappings":"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","file":"cellComp.js","sourcesContent":["import { Column } from \"../entities/column\";\nimport { CellChangedEvent, RowNode } from \"../entities/rowNode\";\nimport { Constants } from \"../constants\";\nimport {\n    CellClickedEvent,\n    CellContextMenuEvent,\n    CellDoubleClickedEvent,\n    CellEditingStartedEvent,\n    CellEditingStoppedEvent,\n    CellEvent,\n    CellMouseDownEvent,\n    CellMouseOutEvent,\n    CellMouseOverEvent,\n    Events,\n    FlashCellsEvent\n} from \"../events\";\nimport { Beans } from \"./beans\";\nimport { Component } from \"../widgets/component\";\nimport { ICellEditorComp, ICellEditorParams } from \"../interfaces/iCellEditor\";\nimport { ICellRendererComp, ICellRendererParams } from \"./cellRenderers/iCellRenderer\";\nimport { CheckboxSelectionComponent } from \"./checkboxSelectionComponent\";\nimport { ColDef, NewValueParams } from \"../entities/colDef\";\nimport { CellPosition } from \"../entities/cellPosition\";\nimport { CellRangeType, ISelectionHandle } from \"../interfaces/iRangeController\";\nimport { RowComp } from \"./rowComp\";\nimport { RowDragComp } from \"./rowDragComp\";\nimport { PopupEditorWrapper } from \"./cellEditors/popupEditorWrapper\";\nimport { _, Promise } from \"../utils\";\nimport { IFrameworkOverrides } from \"../interfaces/iFrameworkOverrides\";\nimport { DndSourceComp } from \"./dndSourceComp\";\n\nexport class CellComp extends Component {\n\n    public static DOM_DATA_KEY_CELL_COMP = 'cellComp';\n\n    private static CELL_RENDERER_TYPE_NORMAL = 'cellRenderer';\n    private static CELL_RENDERER_TYPE_PINNED = 'pinnedRowCellRenderer';\n\n    private eCellWrapper: HTMLElement;\n    private eCellValue: HTMLElement;\n    private eParentOfValue: HTMLElement;\n\n    private beans: Beans;\n    private column: Column;\n    private rowNode: RowNode;\n    private eParentRow: HTMLElement;\n    private cellPosition: CellPosition;\n    private rangeCount: number;\n    private hasChartRange = false;\n\n    private usingWrapper: boolean;\n\n    private includeSelectionComponent: boolean;\n    private includeRowDraggingComponent: boolean;\n    private includeDndSourceComponent: boolean;\n\n    private cellFocused: boolean;\n    private editingCell = false;\n    private cellEditorInPopup: boolean;\n    private hideEditorPopup: Function | null;\n\n    private createCellRendererFunc: () => void;\n\n    private lastIPadMouseClickEvent: number;\n\n    // true if we are using a cell renderer\n    private usingCellRenderer: boolean;\n    // the cellRenderer class to use - this is decided once when the grid is initialised\n    private cellRendererType: string;\n\n    // instance of the cellRenderer class\n    private cellRenderer: ICellRendererComp | null;\n    // the GUI is initially element or string, however once the UI is created, it becomes UI\n    private cellRendererGui: HTMLElement | null;\n    private cellEditor: ICellEditorComp | null;\n    private selectionHandle: ISelectionHandle | null;\n\n    private autoHeightCell: boolean;\n\n    private firstRightPinned: boolean;\n    private lastLeftPinned: boolean;\n\n    private rowComp: RowComp;\n\n    private rangeSelectionEnabled: boolean;\n\n    private value: any;\n    private valueFormatted: any;\n    private colsSpanning: Column[];\n    private rowSpan: number;\n\n    private suppressRefreshCell = false;\n\n    private tooltip: any;\n\n    private scope: any = null;\n\n    private readonly printLayout: boolean;\n\n    // every time we go into edit mode, or back again, this gets incremented.\n    // it's the components way of dealing with the async nature of framework components,\n    // so if a framework component takes a while to be created, we know if the object\n    // is still relevant when creating is finished. eg we could click edit / un-edit 20\n    // times before the first React edit component comes back - we should discard\n    // the first 19.\n    private cellEditorVersion = 0;\n    private cellRendererVersion = 0;\n\n    constructor(scope: any, beans: Beans, column: Column, rowNode: RowNode, rowComp: RowComp,\n        autoHeightCell: boolean, printLayout: boolean) {\n        super();\n        this.scope = scope;\n        this.beans = beans;\n        this.column = column;\n        this.rowNode = rowNode;\n        this.rowComp = rowComp;\n        this.autoHeightCell = autoHeightCell;\n        this.printLayout = printLayout;\n\n        this.createGridCellVo();\n\n        this.rangeSelectionEnabled = this.beans.rangeController && beans.gridOptionsWrapper.isEnableRangeSelection();\n        this.cellFocused = this.beans.focusedCellController.isCellFocused(this.cellPosition);\n        this.firstRightPinned = this.column.isFirstRightPinned();\n        this.lastLeftPinned = this.column.isLastLeftPinned();\n\n        if (this.rangeSelectionEnabled && this.beans.rangeController) {\n            const { rangeController } = this.beans;\n            this.rangeCount = rangeController.getCellRangeCount(this.cellPosition);\n            this.hasChartRange = this.getHasChartRange();\n        }\n\n        this.getValueAndFormat();\n        this.setUsingWrapper();\n        this.chooseCellRenderer();\n        this.setupColSpan();\n        this.rowSpan = this.column.getRowSpan(this.rowNode);\n    }\n\n    public getCreateTemplate(): string {\n        const unselectable = !this.beans.gridOptionsWrapper.isEnableCellTextSelection() ? 'unselectable=\"on\"' : '';\n        const templateParts: string[] = [];\n        const col = this.column;\n\n        const width = this.getCellWidth();\n        const left = this.modifyLeftForPrintLayout(this.getCellLeft());\n\n        const valueToRender = this.getInitialValueToRender();\n        const valueSanitised = _.get(this.column, 'colDef.template', null) ? valueToRender : _.escape(valueToRender);\n        this.tooltip = this.getToolTip();\n        const tooltipSanitised = _.escape(this.tooltip);\n        const colIdSanitised = _.escape(col.getId());\n\n        let wrapperStartTemplate: string = '';\n        let wrapperEndTemplate: string = '';\n\n        const stylesFromColDef = this.preProcessStylesFromColDef();\n        const cssClasses = this.getInitialCssClasses();\n\n        const stylesForRowSpanning = this.getStylesForRowSpanning();\n        const colIdxSanitised = _.escape(this.getAriaColumnIndex());\n\n        if (this.usingWrapper) {\n            wrapperStartTemplate = `<div ref=\"eCellWrapper\" class=\"ag-cell-wrapper\" role=\"presentation\">\n                <span ref=\"eCellValue\" role=\"gridcell\" aria-colindex=\"${colIdxSanitised}\" class=\"ag-cell-value\" ${unselectable}>`;\n            wrapperEndTemplate = '</span></div>';\n        }\n\n        templateParts.push(`<div`);\n        templateParts.push(` tabindex=\"-1\"`);\n        templateParts.push(` ${unselectable}`); // THIS IS FOR IE ONLY so text selection doesn't bubble outside of the grid\n        templateParts.push(` role=\"${this.usingWrapper ? 'presentation' : 'gridcell'}\"`);\n\n        if (!this.usingWrapper) {\n            templateParts.push(` aria-colindex=${colIdxSanitised}`);\n        }\n\n        templateParts.push(` comp-id=\"${this.getCompId()}\" `);\n        templateParts.push(` col-id=\"${colIdSanitised}\"`);\n        templateParts.push(` class=\"${_.escape(cssClasses.join(' '))}\"`);\n\n        if (this.beans.gridOptionsWrapper.isEnableBrowserTooltips() && _.exists(tooltipSanitised)) {\n            templateParts.push(`title=\"${tooltipSanitised}\"`);\n        }\n\n        templateParts.push(` style=\"width: ${Number(width)}px; left: ${Number(left)}px; ${_.escape(stylesFromColDef)} ${_.escape(stylesForRowSpanning)}\" >`);\n        templateParts.push(wrapperStartTemplate);\n\n        if (_.exists(valueSanitised, true)) {\n            templateParts.push(valueSanitised);\n        }\n\n        templateParts.push(wrapperEndTemplate);\n        templateParts.push(`</div>`);\n\n        return templateParts.join('');\n    }\n\n    private getStylesForRowSpanning(): string {\n        if (this.rowSpan === 1) { return ''; }\n\n        const singleRowHeight = this.beans.gridOptionsWrapper.getRowHeightAsNumber();\n        const totalRowHeight = singleRowHeight * this.rowSpan;\n\n        return `height: ${totalRowHeight}px; z-index: 1;`;\n    }\n\n    public afterAttached(): void {\n        const querySelector = `[comp-id=\"${this.getCompId()}\"]`;\n        const eGui = this.eParentRow.querySelector(querySelector) as HTMLElement;\n        this.setGui(eGui);\n\n        // all of these have dependencies on the eGui, so only do them after eGui is set\n        this.addDomData();\n        this.populateTemplate();\n        this.createCellRendererInstance(true);\n        this.angular1Compile();\n        this.refreshHandle();\n\n        if (_.exists(this.tooltip) && !this.beans.gridOptionsWrapper.isEnableBrowserTooltips()) {\n            this.beans.tooltipManager.registerTooltip(this);\n        }\n    }\n\n    public onColumnHover(): void {\n        const isHovered = this.beans.columnHoverService.isHovered(this.column);\n        _.addOrRemoveCssClass(this.getGui(), 'ag-column-hover', isHovered);\n    }\n\n    public onCellChanged(event: CellChangedEvent): void {\n        const eventImpactsThisCell = event.column === this.column;\n        if (eventImpactsThisCell) {\n            this.refreshCell({});\n        }\n    }\n\n    private getCellLeft(): number {\n        let mostLeftCol: Column;\n\n        if (this.beans.gridOptionsWrapper.isEnableRtl() && this.colsSpanning) {\n            mostLeftCol = _.last(this.colsSpanning);\n        } else {\n            mostLeftCol = this.column;\n        }\n\n        return mostLeftCol.getLeft();\n    }\n\n    private getCellWidth(): number {\n        if (!this.colsSpanning) {\n            return this.column.getActualWidth();\n        }\n\n        return this.colsSpanning.reduce((width, col) => width + col.getActualWidth(), 0);\n    }\n\n    public onFlashCells(event: FlashCellsEvent): void {\n        const cellId = this.beans.cellPositionUtils.createId(this.cellPosition);\n        const shouldFlash = event.cells[cellId];\n        if (shouldFlash) {\n            this.animateCell('highlight');\n        }\n    }\n\n    private setupColSpan(): void {\n        // if no col span is active, then we don't set it up, as it would be wasteful of CPU\n        if (_.missing(this.getComponentHolder().colSpan)) { return; }\n\n        // because we are col spanning, a reorder of the cols can change what cols we are spanning over\n        this.addDestroyableEventListener(this.beans.eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayColumnsChanged.bind(this));\n        // because we are spanning over multiple cols, we check for width any time any cols width changes.\n        // this is expensive - really we should be explicitly checking only the cols we are spanning over\n        // instead of every col, however it would be tricky code to track the cols we are spanning over, so\n        // because hardly anyone will be using colSpan, am favouring this easier way for more maintainable code.\n        this.addDestroyableEventListener(this.beans.eventService, Events.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, this.onWidthChanged.bind(this));\n\n        this.colsSpanning = this.getColSpanningList();\n    }\n\n    public getColSpanningList(): Column[] {\n        const colSpan = this.column.getColSpan(this.rowNode);\n        const colsSpanning: Column[] = [];\n\n        // if just one col, the col span is just the column we are in\n        if (colSpan === 1) {\n            colsSpanning.push(this.column);\n        } else {\n            let pointer: Column | null = this.column;\n            const pinned = this.column.getPinned();\n            for (let i = 0; pointer && i < colSpan; i++) {\n                colsSpanning.push(pointer);\n                pointer = this.beans.columnController.getDisplayedColAfter(pointer);\n                if (!pointer || _.missing(pointer)) {\n                    break;\n                }\n                // we do not allow col spanning to span outside of pinned areas\n                if (pinned !== pointer.getPinned()) {\n                    break;\n                }\n            }\n        }\n\n        return colsSpanning;\n    }\n\n    private onDisplayColumnsChanged(): void {\n        const colsSpanning: Column[] = this.getColSpanningList();\n\n        if (!_.compareArrays(this.colsSpanning, colsSpanning)) {\n            this.colsSpanning = colsSpanning;\n            this.onWidthChanged();\n            this.onLeftChanged(); // left changes when doing RTL\n        }\n    }\n\n    private getAriaColumnIndex(): string {\n        const allColumns = this.beans.columnController.getAllDisplayedColumns();\n\n        return (allColumns.indexOf(this.column) + 1).toString();\n    }\n\n    private refreshAriaIndex(): void {\n        const colIdx = this.getAriaColumnIndex();\n        const el = this.usingWrapper ? this.eCellValue : this.getGui();\n\n        el.setAttribute('aria-colindex', colIdx);\n    }\n\n    private getInitialCssClasses(): string[] {\n        const cssClasses = [\"ag-cell\", \"ag-cell-not-inline-editing\"];\n\n        // if we are putting the cell into a dummy container, to work out it's height,\n        // then we don't put the height css in, as we want cell to fit height in that case.\n        if (!this.autoHeightCell) {\n            cssClasses.push('ag-cell-with-height');\n        }\n\n        const doingFocusCss = !this.beans.gridOptionsWrapper.isSuppressCellSelection();\n\n        if (doingFocusCss && this.cellFocused) {\n            // otherwise the class depends on the focus state\n            cssClasses.push('ag-cell-focus');\n        }\n\n        if (this.firstRightPinned) {\n            cssClasses.push('ag-cell-first-right-pinned');\n        }\n\n        if (this.lastLeftPinned) {\n            cssClasses.push('ag-cell-last-left-pinned');\n        }\n\n        if (this.beans.columnHoverService.isHovered(this.column)) {\n            cssClasses.push('ag-column-hover');\n        }\n\n        _.pushAll(cssClasses, this.preProcessClassesFromColDef());\n        _.pushAll(cssClasses, this.preProcessCellClassRules());\n        _.pushAll(cssClasses, this.getInitialRangeClasses());\n\n        // if using the wrapper, this class goes on the wrapper instead\n        if (!this.usingWrapper) {\n            cssClasses.push('ag-cell-value');\n        }\n\n        return cssClasses;\n    }\n\n    public getInitialValueToRender(): string {\n        // if using a cellRenderer, then render the html from the cell renderer if it exists\n        if (this.usingCellRenderer) {\n            if (typeof this.cellRendererGui === 'string') {\n                return this.cellRendererGui as string;\n            }\n\n            return '';\n        }\n\n        const colDef = this.getComponentHolder();\n\n        if (colDef.template) {\n            // template is really only used for angular 1 - as people using ng1 are used to providing templates with\n            // bindings in it. in ng2, people will hopefully want to provide components, not templates.\n            return colDef.template;\n        }\n\n        if (colDef.templateUrl) {\n            // likewise for templateUrl - it's for ng1 really - when we move away from ng1, we can take these out.\n            // niall was pro angular 1 when writing template and templateUrl, if writing from scratch now, would\n            // not do these, but would follow a pattern that was friendly towards components, not templates.\n            const template = this.beans.templateService.getTemplate(colDef.templateUrl, this.refreshCell.bind(this, true));\n\n            return template || '';\n        }\n\n        return this.getValueToUse();\n    }\n\n    public getRenderedRow(): RowComp {\n        return this.rowComp;\n    }\n\n    public isSuppressNavigable(): boolean {\n        return this.column.isSuppressNavigable(this.rowNode);\n    }\n\n    public getCellRenderer(): ICellRendererComp | null {\n        return this.cellRenderer;\n    }\n\n    public getCellEditor(): ICellEditorComp | null {\n        return this.cellEditor;\n    }\n\n    // + stop editing {forceRefresh: true, suppressFlash: true}\n    // + event cellChanged {}\n    // + cellRenderer.params.refresh() {} -> method passes 'as is' to the cellRenderer, so params could be anything\n    // + rowComp: event dataChanged {animate: update, newData: !update}\n    // + rowComp: api refreshCells() {animate: true/false}\n    // + rowRenderer: api softRefreshView() {}\n    public refreshCell(params?: { suppressFlash?: boolean, newData?: boolean, forceRefresh?: boolean }) {\n        // if we are in the middle of 'stopEditing', then we don't refresh here, as refresh gets called explicitly\n        if (this.suppressRefreshCell || this.editingCell) { return; }\n\n        const colDef = this.getComponentHolder();\n        const newData = params && params.newData;\n        const suppressFlash = (params && params.suppressFlash) || colDef.suppressCellFlash;\n        const forceRefresh = params && params.forceRefresh;\n\n        const oldValue = this.value;\n\n        // get latest value without invoking the value formatter as we may not be updating the cell\n        this.value = this.getValue();\n\n        // for simple values only (not objects), see if the value is the same, and if it is, skip the refresh.\n        // when never allow skipping after an edit, as after editing, we need to put the GUI back to the way\n        // if was before the edit.\n        const valuesDifferent = !this.valuesAreEqual(oldValue, this.value);\n        const dataNeedsUpdating = forceRefresh || valuesDifferent;\n\n        if (dataNeedsUpdating) {\n            // now invoke the value formatter as we are going to update cell\n            this.valueFormatted = this.beans.valueFormatterService.formatValue(this.column, this.rowNode, this.scope, this.value);\n\n            // if it's 'new data', then we don't refresh the cellRenderer, even if refresh method is available.\n            // this is because if the whole data is new (ie we are showing stock price 'BBA' now and not 'SSD')\n            // then we are not showing a movement in the stock price, rather we are showing different stock.\n            const cellRendererRefreshed = newData ? false : this.attemptCellRendererRefresh();\n\n            // we do the replace if not doing refresh, or if refresh was unsuccessful.\n            // the refresh can be unsuccessful if we are using a framework (eg ng2 or react) and the framework\n            // wrapper has the refresh method, but the underlying component doesn't\n            if (!cellRendererRefreshed) {\n                this.replaceContentsAfterRefresh();\n            }\n\n            // we don't want to flash the cells when processing a filter change, as otherwise the UI would\n            // be to busy. see comment in FilterManager with regards processingFilterChange\n            const processingFilterChange = this.beans.filterManager.isSuppressFlashingCellsBecauseFiltering();\n\n            const flashCell = !suppressFlash && !processingFilterChange &&\n                (this.beans.gridOptionsWrapper.isEnableCellChangeFlash() || colDef.enableCellChangeFlash);\n\n            if (flashCell) {\n                this.flashCell();\n            }\n\n            // need to check rules. note, we ignore colDef classes and styles, these are assumed to be static\n            this.postProcessStylesFromColDef();\n            this.postProcessClassesFromColDef();\n        }\n\n        // we can't readily determine if the data in an angularjs template has changed, so here we just update\n        // and recompile (if applicable)\n        this.updateAngular1ScopeAndCompile();\n\n        this.refreshToolTip();\n        // we do cellClassRules even if the value has not changed, so that users who have rules that\n        // look at other parts of the row (where the other part of the row might of changed) will work.\n        this.postProcessCellClassRules();\n    }\n\n    // user can also call this via API\n    public flashCell(): void {\n        this.animateCell('data-changed');\n    }\n\n    private animateCell(cssName: string): void {\n        const fullName = `ag-cell-${cssName}`;\n        const animationFullName = `ag-cell-${cssName}-animation`;\n        const element = this.getGui();\n\n        // we want to highlight the cells, without any animation\n        _.addCssClass(element, fullName);\n        _.removeCssClass(element, animationFullName);\n\n        // then once that is applied, we remove the highlight with animation\n        window.setTimeout(() => {\n            _.removeCssClass(element, fullName);\n            _.addCssClass(element, animationFullName);\n\n            window.setTimeout(() => {\n                // and then to leave things as we got them, we remove the animation\n                _.removeCssClass(element, animationFullName);\n            }, 1000);\n        }, 500);\n    }\n\n    private replaceContentsAfterRefresh(): void {\n        // otherwise we rip out the cell and replace it\n        _.clearElement(this.eParentOfValue);\n\n        // remove old renderer component if it exists\n        if (this.cellRenderer && this.cellRenderer.destroy) {\n            this.cellRenderer.destroy();\n        }\n\n        this.cellRenderer = null;\n        this.cellRendererGui = null;\n\n        // populate\n        this.putDataIntoCellAfterRefresh();\n        this.updateAngular1ScopeAndCompile();\n    }\n\n    private updateAngular1ScopeAndCompile() {\n        if (this.beans.gridOptionsWrapper.isAngularCompileRows() && this.scope) {\n            this.scope.data = { ...this.rowNode.data };\n            this.angular1Compile();\n        }\n    }\n\n    private angular1Compile(): void {\n        // if angular compiling, then need to also compile the cell again (angular compiling sucks, please wait...)\n        if (this.beans.gridOptionsWrapper.isAngularCompileRows()) {\n            const eGui = this.getGui();\n\n            // only compile the node if it hasn't already been done\n            // this prevents \"orphaned\" node leaks\n            if (!eGui.classList.contains('ng-scope') || eGui.childElementCount === 0) {\n                const compiledElement = this.beans.$compile(eGui)(this.scope);\n                this.addDestroyFunc(() => compiledElement.remove());\n            }\n        }\n    }\n\n    private postProcessStylesFromColDef() {\n        const stylesToUse = this.processStylesFromColDef();\n\n        if (stylesToUse) {\n            _.addStylesToElement(this.getGui(), stylesToUse);\n        }\n    }\n\n    private preProcessStylesFromColDef(): string {\n        return _.cssStyleObjectToMarkup(this.processStylesFromColDef());\n    }\n\n    private processStylesFromColDef(): any {\n        const colDef = this.getComponentHolder();\n\n        if (colDef.cellStyle) {\n            let cssToUse: any;\n\n            if (typeof colDef.cellStyle === 'function') {\n                const cellStyleParams = {\n                    value: this.value,\n                    data: this.rowNode.data,\n                    node: this.rowNode,\n                    colDef: colDef,\n                    column: this.column,\n                    $scope: this.scope,\n                    context: this.beans.gridOptionsWrapper.getContext(),\n                    api: this.beans.gridOptionsWrapper.getApi()\n                };\n                const cellStyleFunc = colDef.cellStyle as Function;\n                cssToUse = cellStyleFunc(cellStyleParams);\n            } else {\n                cssToUse = colDef.cellStyle;\n            }\n\n            return cssToUse;\n        }\n    }\n\n    private postProcessClassesFromColDef() {\n        this.processClassesFromColDef(className => _.addCssClass(this.getGui(), className));\n    }\n\n    private preProcessClassesFromColDef(): string[] {\n        const res: string[] = [];\n\n        this.processClassesFromColDef(className => res.push(className));\n\n        return res;\n    }\n\n    private processClassesFromColDef(onApplicableClass: (className: string) => void): void {\n        const colDef = this.getComponentHolder();\n\n        this.beans.stylingService.processStaticCellClasses(\n            colDef,\n            {\n                value: this.value,\n                data: this.rowNode.data,\n                node: this.rowNode,\n                colDef: colDef,\n                rowIndex: this.rowNode.rowIndex,\n                $scope: this.scope,\n                api: this.beans.gridOptionsWrapper.getApi(),\n                columnApi: this.beans.gridOptionsWrapper.getColumnApi(),\n                context: this.beans.gridOptionsWrapper.getContext()\n            },\n            onApplicableClass\n        );\n    }\n\n    private putDataIntoCellAfterRefresh() {\n        // template gets preference, then cellRenderer, then do it ourselves\n        const colDef = this.getComponentHolder();\n\n        if (colDef.template) {\n            // template is really only used for angular 1 - as people using ng1 are used to providing templates with\n            // bindings in it. in ng2, people will hopefully want to provide components, not templates.\n            this.eParentOfValue.innerHTML = colDef.template;\n        } else if (colDef.templateUrl) {\n            // likewise for templateUrl - it's for ng1 really - when we move away from ng1, we can take these out.\n            // niall was pro angular 1 when writing template and templateUrl, if writing from scratch now, would\n            // not do these, but would follow a pattern that was friendly towards components, not templates.\n            const template = this.beans.templateService.getTemplate(colDef.templateUrl, this.refreshCell.bind(this, true));\n\n            if (template) {\n                this.eParentOfValue.innerHTML = template;\n            }\n        } else {\n            // we can switch from using a cell renderer back to the default if a user\n            // is using cellRendererSelect\n            this.chooseCellRenderer();\n\n            if (this.usingCellRenderer) {\n                this.createCellRendererInstance();\n            } else {\n                const valueToUse = this.getValueToUse();\n\n                if (valueToUse != null) {\n                    this.eParentOfValue.innerHTML = _.escape(valueToUse);\n                }\n            }\n        }\n    }\n\n    public attemptCellRendererRefresh(): boolean {\n        if (_.missing(this.cellRenderer) || !this.cellRenderer || _.missing(this.cellRenderer.refresh)) {\n            return false;\n        }\n\n        // if the cell renderer has a refresh method, we call this instead of doing a refresh\n        const params = this.createCellRendererParams();\n\n        // take any custom params off of the user\n        const finalParams = this.beans.userComponentFactory.createFinalParams(this.getComponentHolder(), this.cellRendererType, params);\n\n        const result: boolean | void = this.cellRenderer.refresh(finalParams);\n\n        // NOTE on undefined: previous version of the cellRenderer.refresh() interface\n        // returned nothing, if the method existed, we assumed it refreshed. so for\n        // backwards compatibility, we assume if method exists and returns nothing,\n        // that it was successful.\n        return result === true || result === undefined;\n    }\n\n    private refreshToolTip() {\n        const newTooltip = this.getToolTip();\n\n        if (this.tooltip === newTooltip) { return; }\n\n        const hasNewTooltip = _.exists(newTooltip);\n\n        if (hasNewTooltip && this.tooltip === newTooltip.toString()) { return; }\n\n        const hadTooltip = _.exists(this.tooltip);\n        this.tooltip = newTooltip;\n\n        if (this.beans.gridOptionsWrapper.isEnableBrowserTooltips()) {\n            if (hasNewTooltip) {\n                this.eParentOfValue.setAttribute('title', this.tooltip);\n            } else {\n                this.eParentOfValue.removeAttribute('title');\n            }\n        } else {\n            if (hadTooltip) {\n                if (!hasNewTooltip) {\n                    this.beans.tooltipManager.unregisterTooltip(this);\n                }\n            } else if (hasNewTooltip) {\n                this.beans.tooltipManager.registerTooltip(this);\n            }\n        }\n    }\n\n    private valuesAreEqual(val1: any, val2: any): boolean {\n        // if the user provided an equals method, use that, otherwise do simple comparison\n        const colDef = this.getComponentHolder();\n        const equalsMethod = colDef ? colDef.equals : null;\n\n        return equalsMethod ? equalsMethod(val1, val2) : val1 === val2;\n    }\n\n    private getToolTip(): string | null {\n        const colDef = this.getComponentHolder();\n        const data = this.rowNode.data;\n\n        if (colDef.tooltipField && _.exists(data)) {\n            return _.getValueUsingField(data, colDef.tooltipField, this.column.isTooltipFieldContainsDots());\n        }\n\n        const valueGetter = colDef.tooltipValueGetter || colDef.tooltip;\n\n        if (valueGetter) {\n            return valueGetter({\n                api: this.beans.gridOptionsWrapper.getApi(),\n                columnApi: this.beans.gridOptionsWrapper.getColumnApi(),\n                colDef: colDef,\n                column: this.getColumn(),\n                context: this.beans.gridOptionsWrapper.getContext(),\n                value: this.value,\n                valueFormatted: this.valueFormatted,\n                rowIndex: this.cellPosition.rowIndex,\n                node: this.rowNode,\n                data: this.rowNode.data,\n                $scope: this.scope,\n            });\n        }\n\n        return null;\n    }\n\n    public getTooltipText(escape: boolean = true) {\n        return escape ? _.escape(this.tooltip) : this.tooltip;\n    }\n\n    private processCellClassRules(onApplicableClass: (className: string) => void, onNotApplicableClass?: (className: string) => void): void {\n        const colDef = this.getComponentHolder();\n\n        this.beans.stylingService.processClassRules(\n            colDef.cellClassRules,\n            {\n                value: this.value,\n                data: this.rowNode.data,\n                node: this.rowNode,\n                colDef: colDef,\n                rowIndex: this.cellPosition.rowIndex,\n                api: this.beans.gridOptionsWrapper.getApi(),\n                columnApi: this.beans.gridOptionsWrapper.getColumnApi(),\n                $scope: this.scope,\n                context: this.beans.gridOptionsWrapper.getContext()\n            }, onApplicableClass, onNotApplicableClass);\n    }\n\n    private postProcessCellClassRules(): void {\n        this.processCellClassRules(\n            className => _.addCssClass(this.getGui(), className),\n            className => _.removeCssClass(this.getGui(), className)\n        );\n    }\n\n    private preProcessCellClassRules(): string[] {\n        const res: string[] = [];\n\n        this.processCellClassRules(\n            className => res.push(className),\n            _ => {\n                // not catered for, if creating, no need\n                // to remove class as it was never there\n            }\n        );\n\n        return res;\n    }\n\n    // a wrapper is used when we are putting a selection checkbox in the cell with the value\n    public setUsingWrapper(): void {\n        const colDef = this.getComponentHolder();\n\n        // never allow selection or dragging on pinned rows\n        if (this.rowNode.rowPinned) {\n            this.usingWrapper = false;\n            this.includeSelectionComponent = false;\n            this.includeRowDraggingComponent = false;\n            this.includeDndSourceComponent = false;\n            return;\n        }\n\n        const cbSelectionIsFunc = typeof colDef.checkboxSelection === 'function';\n        const rowDraggableIsFunc = typeof colDef.rowDrag === 'function';\n        const dndSourceIsFunc = typeof colDef.dndSource === 'function';\n\n        this.includeSelectionComponent = cbSelectionIsFunc || colDef.checkboxSelection === true;\n        this.includeRowDraggingComponent = rowDraggableIsFunc || colDef.rowDrag === true;\n        this.includeDndSourceComponent = dndSourceIsFunc || colDef.dndSource === true;\n\n        const enableTextSelection = this.beans.gridOptionsWrapper.isEnableCellTextSelection();\n\n        this.usingWrapper = enableTextSelection || this.includeRowDraggingComponent || this.includeSelectionComponent || this.includeDndSourceComponent;\n    }\n\n    private chooseCellRenderer(): void {\n        // template gets preference, then cellRenderer, then do it ourselves\n        const colDef = this.getComponentHolder();\n\n        // templates are for ng1, ideally we wouldn't have these, they are ng1 support\n        // inside the core which is bad\n        if (colDef.template || colDef.templateUrl) {\n            this.usingCellRenderer = false;\n            return;\n        }\n\n        const params = this.createCellRendererParams();\n        const cellRenderer = this.beans.userComponentFactory.lookupComponentClassDef(colDef, 'cellRenderer', params);\n        const pinnedRowCellRenderer = this.beans.userComponentFactory.lookupComponentClassDef(colDef, 'pinnedRowCellRenderer', params);\n\n        if (pinnedRowCellRenderer && this.rowNode.rowPinned) {\n            this.cellRendererType = CellComp.CELL_RENDERER_TYPE_PINNED;\n            this.usingCellRenderer = true;\n        } else if (cellRenderer) {\n            this.cellRendererType = CellComp.CELL_RENDERER_TYPE_NORMAL;\n            this.usingCellRenderer = true;\n        } else {\n            this.usingCellRenderer = false;\n        }\n    }\n\n    private createCellRendererInstance(useTaskService = false): void {\n        if (!this.usingCellRenderer) { return; }\n\n        // never use task service if angularCompileRows=true, as that assume the cell renderers\n        // are finished when the row is created. also we never use it if animation frame service\n        // is turned off.\n        // and lastly we never use it if doing auto-height, as the auto-height service checks the\n        // row height directly after the cell is created, it doesn't wait around for the tasks to complete\n        const angularCompileRows = this.beans.gridOptionsWrapper.isAngularCompileRows();\n        const suppressAnimationFrame = this.beans.gridOptionsWrapper.isSuppressAnimationFrame();\n\n        if (angularCompileRows || suppressAnimationFrame || this.autoHeightCell) { useTaskService = false; }\n\n        const params = this.createCellRendererParams();\n\n        this.cellRendererVersion++;\n        const callback = this.afterCellRendererCreated.bind(this, this.cellRendererVersion);\n\n        const cellRendererTypeNormal = this.cellRendererType === CellComp.CELL_RENDERER_TYPE_NORMAL;\n\n        this.createCellRendererFunc = () => {\n            this.createCellRendererFunc = null;\n            // this can return null in the event that the user has switched from a renderer component to nothing, for example\n            // when using a cellRendererSelect to return a component or null depending on row data etc\n            let componentPromise: Promise<ICellRendererComp>;\n\n            if (cellRendererTypeNormal) {\n                componentPromise = this.beans.userComponentFactory.newCellRenderer(this.getComponentHolder(), params);\n            } else {\n                componentPromise = this.beans.userComponentFactory.newPinnedRowCellRenderer(this.getComponentHolder(), params);\n            }\n\n            if (componentPromise) {\n                componentPromise.then(callback);\n            }\n        };\n\n        if (useTaskService) {\n            this.beans.taskQueue.createTask(this.createCellRendererFunc, this.rowNode.rowIndex, 'createTasksP2');\n        } else {\n            this.createCellRendererFunc();\n        }\n    }\n\n    private afterCellRendererCreated(cellRendererVersion: number, cellRenderer: ICellRendererComp): void {\n        // see if daemon\n        if (!this.isAlive() || (cellRendererVersion !== this.cellRendererVersion)) {\n            if (cellRenderer.destroy) {\n                cellRenderer.destroy();\n            }\n\n            return;\n        }\n\n        this.cellRenderer = cellRenderer;\n        this.cellRendererGui = this.cellRenderer.getGui();\n\n        if (_.missing(this.cellRendererGui)) {\n            return;\n        }\n\n        // if async components, then it's possible the user started editing since\n        // this call was made\n        if (!this.editingCell) {\n            this.eParentOfValue.appendChild(this.cellRendererGui);\n        }\n    }\n\n    private createCellRendererParams(): ICellRendererParams {\n        return {\n            value: this.value,\n            valueFormatted: this.valueFormatted,\n            getValue: this.getValue.bind(this),\n            setValue: value => this.beans.valueService.setValue(this.rowNode, this.column, value),\n            formatValue: this.formatValue.bind(this),\n            data: this.rowNode.data,\n            node: this.rowNode,\n            colDef: this.getComponentHolder(),\n            column: this.column,\n            $scope: this.scope,\n            rowIndex: this.cellPosition.rowIndex,\n            api: this.beans.gridOptionsWrapper.getApi(),\n            columnApi: this.beans.gridOptionsWrapper.getColumnApi(),\n            context: this.beans.gridOptionsWrapper.getContext(),\n            refreshCell: this.refreshCell.bind(this),\n\n            eGridCell: this.getGui(),\n            eParentOfValue: this.eParentOfValue,\n\n            // these bits are not documented anywhere, so we could drop them?\n            // it was in the olden days to allow user to register for when rendered\n            // row was removed (the row comp was removed), however now that the user\n            // can provide components for cells, the destroy method gets call when this\n            // happens so no longer need to fire event.\n            addRowCompListener: this.rowComp ? this.rowComp.addEventListener.bind(this.rowComp) : null,\n            addRenderedRowListener: (eventType: string, listener: Function) => {\n                console.warn('ag-Grid: since ag-Grid .v11, params.addRenderedRowListener() is now params.addRowCompListener()');\n                if (this.rowComp) {\n                    this.rowComp.addEventListener(eventType, listener);\n                }\n            }\n        } as ICellRendererParams;\n    }\n\n    private formatValue(value: any): any {\n        const valueFormatted = this.beans.valueFormatterService.formatValue(this.column, this.rowNode, this.scope, value);\n\n        return valueFormatted != null ? valueFormatted : value;\n    }\n\n    private getValueToUse(): any {\n        return this.valueFormatted != null ? this.valueFormatted : this.value;\n    }\n\n    private getValueAndFormat(): void {\n        this.value = this.getValue();\n        this.valueFormatted = this.beans.valueFormatterService.formatValue(this.column, this.rowNode, this.scope, this.value);\n    }\n\n    private getValue(): any {\n        // if we don't check this, then the grid will render leaf groups as open even if we are not\n        // allowing the user to open leaf groups. confused? remember for pivot mode we don't allow\n        // opening leaf groups, so we have to force leafGroups to be closed in case the user expanded\n        // them via the API, or user user expanded them in the UI before turning on pivot mode\n        const lockedClosedGroup = this.rowNode.leafGroup && this.beans.columnController.isPivotMode();\n\n        const isOpenGroup = this.rowNode.group && this.rowNode.expanded && !this.rowNode.footer && !lockedClosedGroup;\n\n        // are we showing group footers\n        const groupFootersEnabled = this.beans.gridOptionsWrapper.isGroupIncludeFooter();\n\n        // if doing footers, we normally don't show agg data at group level when group is open\n        const groupAlwaysShowAggData = this.beans.gridOptionsWrapper.isGroupSuppressBlankHeader();\n\n        // if doing grouping and footers, we don't want to include the agg value\n        // in the header when the group is open\n        const ignoreAggData = (isOpenGroup && groupFootersEnabled) && !groupAlwaysShowAggData;\n\n        return this.beans.valueService.getValue(this.column, this.rowNode, false, ignoreAggData);\n    }\n\n    public onMouseEvent(eventName: string, mouseEvent: MouseEvent): void {\n        if (_.isStopPropagationForAgGrid(mouseEvent)) { return; }\n\n        switch (eventName) {\n            case 'click':\n                this.onCellClicked(mouseEvent);\n                break;\n            case 'mousedown':\n                this.onMouseDown(mouseEvent);\n                break;\n            case 'dblclick':\n                this.onCellDoubleClicked(mouseEvent);\n                break;\n            case 'mouseout':\n                this.onMouseOut(mouseEvent);\n                break;\n            case 'mouseover':\n                this.onMouseOver(mouseEvent);\n                break;\n        }\n    }\n\n    public dispatchCellContextMenuEvent(event: Event) {\n        const colDef = this.getComponentHolder();\n        const cellContextMenuEvent: CellContextMenuEvent = this.createEvent(event, Events.EVENT_CELL_CONTEXT_MENU);\n        this.beans.eventService.dispatchEvent(cellContextMenuEvent);\n\n        if (colDef.onCellContextMenu) {\n            // to make the callback async, do in a timeout\n            window.setTimeout(() => (colDef.onCellContextMenu as any)(cellContextMenuEvent), 0);\n        }\n    }\n\n    public createEvent(domEvent: Event | null, eventType: string): CellEvent {\n        const event: CellEvent = {\n            node: this.rowNode,\n            data: this.rowNode.data,\n            value: this.value,\n            column: this.column,\n            colDef: this.getComponentHolder(),\n            context: this.beans.gridOptionsWrapper.getContext(),\n            api: this.beans.gridApi,\n            columnApi: this.beans.columnApi,\n            rowPinned: this.rowNode.rowPinned,\n            event: domEvent,\n            type: eventType,\n            rowIndex: this.rowNode.rowIndex\n        };\n\n        // because we are hacking in $scope for angular 1, we have to de-reference\n        if (this.scope) {\n            (event as any).$scope = this.scope;\n        }\n\n        return event;\n    }\n\n    private onMouseOut(mouseEvent: MouseEvent): void {\n        const cellMouseOutEvent: CellMouseOutEvent = this.createEvent(mouseEvent, Events.EVENT_CELL_MOUSE_OUT);\n        this.beans.eventService.dispatchEvent(cellMouseOutEvent);\n        this.beans.columnHoverService.clearMouseOver();\n    }\n\n    private onMouseOver(mouseEvent: MouseEvent): void {\n        const cellMouseOverEvent: CellMouseOverEvent = this.createEvent(mouseEvent, Events.EVENT_CELL_MOUSE_OVER);\n        this.beans.eventService.dispatchEvent(cellMouseOverEvent);\n        this.beans.columnHoverService.setMouseOver([this.column]);\n    }\n\n    private onCellDoubleClicked(mouseEvent: MouseEvent) {\n        const colDef = this.getComponentHolder();\n        // always dispatch event to eventService\n        const cellDoubleClickedEvent: CellDoubleClickedEvent = this.createEvent(mouseEvent, Events.EVENT_CELL_DOUBLE_CLICKED);\n        this.beans.eventService.dispatchEvent(cellDoubleClickedEvent);\n\n        // check if colDef also wants to handle event\n        if (typeof colDef.onCellDoubleClicked === 'function') {\n            // to make the callback async, do in a timeout\n            window.setTimeout(() => (colDef.onCellDoubleClicked as any)(cellDoubleClickedEvent), 0);\n        }\n\n        const editOnDoubleClick = !this.beans.gridOptionsWrapper.isSingleClickEdit()\n            && !this.beans.gridOptionsWrapper.isSuppressClickEdit();\n        if (editOnDoubleClick) {\n            this.startRowOrCellEdit();\n        }\n    }\n\n    // called by rowRenderer when user navigates via tab key\n    public startRowOrCellEdit(keyPress?: number | null, charPress?: string): void {\n        if (this.beans.gridOptionsWrapper.isFullRowEdit()) {\n            this.rowComp.startRowEditing(keyPress, charPress, this);\n        } else {\n            this.startEditingIfEnabled(keyPress, charPress, true);\n        }\n    }\n\n    public isCellEditable() {\n        return this.column.isCellEditable(this.rowNode);\n    }\n\n    // either called internally if single cell editing, or called by rowRenderer if row editing\n    public startEditingIfEnabled(keyPress: number | null = null, charPress: string | null = null, cellStartedEdit = false): void {\n        // don't do it if not editable\n        if (!this.isCellEditable()) { return; }\n\n        // don't do it if already editing\n        if (this.editingCell) { return; }\n\n        this.editingCell = true;\n\n        this.cellEditorVersion++;\n        const callback = this.afterCellEditorCreated.bind(this, this.cellEditorVersion);\n\n        const params = this.createCellEditorParams(keyPress, charPress, cellStartedEdit);\n        this.createCellEditor(params).then(callback);\n\n        // if we don't do this, and editor component is async, then there will be a period\n        // when the component isn't present and keyboard navigation won't work - so example\n        // of user hitting tab quickly (more quickly than renderers getting created) won't work\n        const cellEditorAsync = _.missing(this.cellEditor);\n\n        if (cellEditorAsync && cellStartedEdit) {\n            this.focusCell(true);\n        }\n    }\n\n    private createCellEditor(params: ICellEditorParams): Promise<ICellEditorComp> {\n        const cellEditorPromise = this.beans.userComponentFactory.newCellEditor(this.column.getColDef(), params);\n\n        return cellEditorPromise.map(cellEditor => {\n            const isPopup = cellEditor.isPopup && cellEditor.isPopup();\n\n            if (!isPopup) { return cellEditor; }\n\n            if (this.beans.gridOptionsWrapper.isFullRowEdit()) {\n                console.warn('ag-Grid: popup cellEditor does not work with fullRowEdit - you cannot use them both ' +\n                    '- either turn off fullRowEdit, or stop using popup editors.');\n            }\n\n            // if a popup, then we wrap in a popup editor and return the popup\n            const popupEditorWrapper = new PopupEditorWrapper(cellEditor);\n            this.beans.context.wireBean(popupEditorWrapper);\n            popupEditorWrapper.init(params);\n\n            return popupEditorWrapper;\n        });\n    }\n\n    private afterCellEditorCreated(cellEditorVersion: number, cellEditor: ICellEditorComp): void {\n\n        // if editingCell=false, means user cancelled the editor before component was ready.\n        // if versionMismatch, then user cancelled the edit, then started the edit again, and this\n        //   is the first editor which is now stale.\n        const versionMismatch = cellEditorVersion !== this.cellEditorVersion;\n\n        if (versionMismatch || !this.editingCell) {\n            if (cellEditor.destroy) {\n                cellEditor.destroy();\n            }\n\n            return;\n        }\n\n        if (cellEditor.isCancelBeforeStart && cellEditor.isCancelBeforeStart()) {\n            if (cellEditor.destroy) {\n                cellEditor.destroy();\n            }\n\n            this.editingCell = false;\n\n            return;\n        }\n\n        if (!cellEditor.getGui) {\n            console.warn(`ag-Grid: cellEditor for column ${this.column.getId()} is missing getGui() method`);\n\n            // no getGui, for React guys, see if they attached a react component directly\n            if ((cellEditor as any).render) {\n                console.warn(`ag-Grid: we found 'render' on the component, are you trying to set a React renderer but added it as colDef.cellEditor instead of colDef.cellEditorFmk?`);\n            }\n\n            if (cellEditor.destroy) {\n                cellEditor.destroy();\n            }\n\n            this.editingCell = false;\n\n            return;\n        }\n\n        this.cellEditor = cellEditor;\n\n        this.cellEditorInPopup = cellEditor.isPopup !== undefined && cellEditor.isPopup();\n        this.setInlineEditingClass();\n\n        if (this.cellEditorInPopup) {\n            this.addPopupCellEditor();\n        } else {\n            this.addInCellEditor();\n        }\n\n        if (cellEditor.afterGuiAttached) {\n            cellEditor.afterGuiAttached();\n        }\n\n        const event: CellEditingStartedEvent = this.createEvent(null, Events.EVENT_CELL_EDITING_STARTED);\n        this.beans.eventService.dispatchEvent(event);\n    }\n\n    private addInCellEditor(): void {\n        _.clearElement(this.getGui());\n\n        if (this.cellEditor) {\n            this.getGui().appendChild(this.cellEditor.getGui());\n        }\n\n        this.angular1Compile();\n    }\n\n    private addPopupCellEditor(): void {\n        const ePopupGui = this.cellEditor ? this.cellEditor.getGui() : null;\n\n        const useModelPopup = this.beans.gridOptionsWrapper.isStopEditingWhenGridLosesFocus();\n        this.hideEditorPopup = this.beans.popupService.addPopup(\n            useModelPopup,\n            ePopupGui,\n            true,\n            // callback for when popup disappears\n            () => {\n                this.onPopupEditorClosed();\n            }\n        );\n\n        this.beans.popupService.positionPopupOverComponent({\n            column: this.column,\n            rowNode: this.rowNode,\n            type: 'popupCellEditor',\n            eventSource: this.getGui(),\n            ePopup: ePopupGui,\n            keepWithinBounds: true\n        });\n\n        this.angular1Compile();\n    }\n\n    private onPopupEditorClosed(): void {\n        // we only call stopEditing if we are editing, as\n        // it's possible the popup called 'stop editing'\n        // before this, eg if 'enter key' was pressed on\n        // the editor.\n\n        if (this.editingCell) {\n            // note: this only happens when use clicks outside of the grid. if use clicks on another\n            // cell, then the editing will have already stopped on this cell\n            this.stopRowOrCellEdit();\n\n            // we only focus cell again if this cell is still focused. it is possible\n            // it is not focused if the user cancelled the edit by clicking on another\n            // cell outside of this one\n            if (this.beans.focusedCellController.isCellFocused(this.cellPosition)) {\n                this.focusCell(true);\n            }\n        }\n    }\n\n    // if we are editing inline, then we don't have the padding in the cell (set in the themes)\n    // to allow the text editor full access to the entire cell\n    private setInlineEditingClass(): void {\n        if (!this.isAlive()) { return; }\n\n        // ag-cell-inline-editing - appears when user is inline editing\n        // ag-cell-not-inline-editing - appears when user is no inline editing\n        // ag-cell-popup-editing - appears when user is editing cell in popup (appears on the cell, not on the popup)\n\n        // note: one of {ag-cell-inline-editing, ag-cell-not-inline-editing} is always present, they toggle.\n        //       however {ag-cell-popup-editing} shows when popup, so you have both {ag-cell-popup-editing}\n        //       and {ag-cell-not-inline-editing} showing at the same time.\n\n        const editingInline = this.editingCell && !this.cellEditorInPopup;\n        const popupEditorShowing = this.editingCell && this.cellEditorInPopup;\n\n        _.addOrRemoveCssClass(this.getGui(), \"ag-cell-inline-editing\", editingInline);\n        _.addOrRemoveCssClass(this.getGui(), \"ag-cell-not-inline-editing\", !editingInline);\n        _.addOrRemoveCssClass(this.getGui(), \"ag-cell-popup-editing\", popupEditorShowing);\n        _.addOrRemoveCssClass(this.getGui().parentNode as HTMLElement, \"ag-row-inline-editing\", editingInline);\n        _.addOrRemoveCssClass(this.getGui().parentNode as HTMLElement, \"ag-row-not-inline-editing\", !editingInline);\n    }\n\n    private createCellEditorParams(keyPress: number | null, charPress: string | null, cellStartedEdit: boolean): ICellEditorParams {\n        return {\n            value: this.getValue(),\n            keyPress: keyPress,\n            charPress: charPress,\n            column: this.column,\n            colDef: this.column.getColDef(),\n            rowIndex: this.cellPosition.rowIndex,\n            node: this.rowNode,\n            data: this.rowNode.data,\n            api: this.beans.gridOptionsWrapper.getApi(),\n            cellStartedEdit: cellStartedEdit,\n            columnApi: this.beans.gridOptionsWrapper.getColumnApi(),\n            context: this.beans.gridOptionsWrapper.getContext(),\n            $scope: this.scope,\n            onKeyDown: this.onKeyDown.bind(this),\n            stopEditing: this.stopEditingAndFocus.bind(this),\n            eGridCell: this.getGui(),\n            parseValue: this.parseValue.bind(this),\n            formatValue: this.formatValue.bind(this)\n        };\n    }\n\n    // cell editors call this, when they want to stop for reasons other\n    // than what we pick up on. eg selecting from a dropdown ends editing.\n    private stopEditingAndFocus(suppressNavigateAfterEdit = false): void {\n        this.stopRowOrCellEdit();\n        this.focusCell(true);\n\n        if (!suppressNavigateAfterEdit) {\n            this.navigateAfterEdit();\n        }\n    }\n\n    private parseValue(newValue: any): any {\n        const colDef = this.getComponentHolder();\n        const params: NewValueParams = {\n            node: this.rowNode,\n            data: this.rowNode.data,\n            oldValue: this.value,\n            newValue: newValue,\n            colDef: colDef,\n            column: this.column,\n            api: this.beans.gridOptionsWrapper.getApi(),\n            columnApi: this.beans.gridOptionsWrapper.getColumnApi(),\n            context: this.beans.gridOptionsWrapper.getContext()\n        };\n\n        const valueParser = colDef.valueParser;\n\n        return _.exists(valueParser) ? this.beans.expressionService.evaluate(valueParser, params) : newValue;\n    }\n\n    public focusCell(forceBrowserFocus = false): void {\n        this.beans.focusedCellController.setFocusedCell(this.cellPosition.rowIndex, this.column, this.rowNode.rowPinned, forceBrowserFocus);\n    }\n\n    public setFocusInOnEditor(): void {\n        if (this.editingCell) {\n            if (this.cellEditor && this.cellEditor.focusIn) {\n                // if the editor is present, then we just focus it\n                this.cellEditor.focusIn();\n            } else {\n                // if the editor is not present, it means async cell editor (eg React fibre)\n                // and we are trying to set focus before the cell editor is present, so we\n                // focus the cell instead\n                this.focusCell(true);\n            }\n        }\n    }\n\n    public isEditing(): boolean {\n        return this.editingCell;\n    }\n\n    public onKeyDown(event: KeyboardEvent): void {\n        const key = event.which || event.keyCode;\n\n        switch (key) {\n            case Constants.KEY_ENTER:\n                this.onEnterKeyDown();\n                break;\n            case Constants.KEY_F2:\n                this.onF2KeyDown();\n                break;\n            case Constants.KEY_ESCAPE:\n                this.onEscapeKeyDown();\n                break;\n            case Constants.KEY_TAB:\n                this.onTabKeyDown(event);\n                break;\n            case Constants.KEY_BACKSPACE:\n            case Constants.KEY_DELETE:\n                this.onBackspaceOrDeleteKeyPressed(key);\n                break;\n            case Constants.KEY_DOWN:\n            case Constants.KEY_UP:\n            case Constants.KEY_RIGHT:\n            case Constants.KEY_LEFT:\n                this.onNavigationKeyPressed(event, key);\n                break;\n        }\n    }\n\n    public setFocusOutOnEditor(): void {\n        if (this.editingCell && this.cellEditor && this.cellEditor.focusOut) {\n            this.cellEditor.focusOut();\n        }\n    }\n\n    private onNavigationKeyPressed(event: KeyboardEvent, key: number): void {\n        if (this.editingCell) { return; }\n\n        if (event.shiftKey && this.rangeSelectionEnabled) {\n            this.onShiftRangeSelect(key);\n        } else {\n            this.beans.rowRenderer.navigateToNextCell(event, key, this.cellPosition, true);\n        }\n\n        // if we don't prevent default, the grid will scroll with the navigation keys\n        event.preventDefault();\n    }\n\n    private onShiftRangeSelect(key: number): void {\n        if (!this.beans.rangeController) { return; }\n\n        const endCell = this.beans.rangeController.extendLatestRangeInDirection(key);\n\n        if (endCell) {\n            this.beans.rowRenderer.ensureCellVisible(endCell);\n        }\n    }\n\n    private onTabKeyDown(event: KeyboardEvent): void {\n        this.beans.rowRenderer.onTabKeyDown(this, event);\n    }\n\n    private onBackspaceOrDeleteKeyPressed(key: number): void {\n        if (!this.editingCell) {\n            this.startRowOrCellEdit(key);\n        }\n    }\n\n    private onEnterKeyDown(): void {\n        if (this.editingCell || this.rowComp.isEditing()) {\n            this.stopEditingAndFocus();\n        } else {\n            if (this.beans.gridOptionsWrapper.isEnterMovesDown()) {\n                this.beans.rowRenderer.navigateToNextCell(null, Constants.KEY_DOWN, this.cellPosition, false);\n            } else {\n                this.startRowOrCellEdit(Constants.KEY_ENTER);\n            }\n        }\n    }\n\n    private navigateAfterEdit(): void {\n        const fullRowEdit = this.beans.gridOptionsWrapper.isFullRowEdit();\n\n        if (fullRowEdit) { return; }\n\n        const enterMovesDownAfterEdit = this.beans.gridOptionsWrapper.isEnterMovesDownAfterEdit();\n\n        if (enterMovesDownAfterEdit) {\n            this.beans.rowRenderer.navigateToNextCell(null, Constants.KEY_DOWN, this.cellPosition, false);\n        }\n    }\n\n    private onF2KeyDown(): void {\n        if (!this.editingCell) {\n            this.startRowOrCellEdit(Constants.KEY_F2);\n        }\n    }\n\n    private onEscapeKeyDown(): void {\n        if (this.editingCell) {\n            this.stopRowOrCellEdit(true);\n            this.focusCell(true);\n        }\n    }\n\n    public onKeyPress(event: KeyboardEvent): void {\n        // check this, in case focus is on a (for example) a text field inside the cell,\n        // in which cse we should not be listening for these key pressed\n        const eventTarget = _.getTarget(event);\n        const eventOnChildComponent = eventTarget !== this.getGui();\n\n        if (eventOnChildComponent || this.editingCell) { return; }\n\n        const pressedChar = String.fromCharCode(event.charCode);\n        if (pressedChar === ' ') {\n            this.onSpaceKeyPressed(event);\n        } else if (_.isEventFromPrintableCharacter(event)) {\n            this.startRowOrCellEdit(null, pressedChar);\n            // if we don't prevent default, then the keypress also gets applied to the text field\n            // (at least when doing the default editor), but we need to allow the editor to decide\n            // what it wants to do. we only do this IF editing was started - otherwise it messes\n            // up when the use is not doing editing, but using rendering with text fields in cellRenderer\n            // (as it would block the the user from typing into text fields).\n            event.preventDefault();\n        }\n    }\n\n    private onSpaceKeyPressed(event: KeyboardEvent): void {\n        if (!this.editingCell && this.beans.gridOptionsWrapper.isRowSelection()) {\n            const selected = this.rowNode.isSelected();\n            this.rowNode.setSelected(!selected);\n        }\n\n        // prevent default as space key, by default, moves browser scroll down\n        event.preventDefault();\n    }\n\n    private onMouseDown(mouseEvent: MouseEvent): void {\n        // we only need to pass true to focusCell in when the browser is IE\n        // and we are trying to focus a cell (has ag-cell class), otherwise\n        // we pass false, as we don't want the cell to focus also get the browser\n        // focus. if we did, then the cellRenderer could have a text field in it,\n        // for example, and as the user clicks on the text field, the text field,\n        // the focus doesn't get to the text field, instead to goes to the div\n        // behind, making it impossible to select the text field.\n        let forceBrowserFocus = false;\n        const { button, ctrlKey, metaKey, shiftKey, target } = mouseEvent;\n        const { eventService, rangeController } = this.beans;\n\n        if (rangeController) {\n            const cellInRange = rangeController.isCellInAnyRange(this.getCellPosition());\n\n            if (cellInRange && button === 2) {\n                return;\n            }\n        }\n\n        if ((_.isBrowserIE() || _.isBrowserEdge()) && this.getGui().contains(target as HTMLElement)) {\n            forceBrowserFocus = true;\n        }\n\n        if (!shiftKey || (rangeController && !rangeController.getCellRanges().length)) {\n            this.focusCell(forceBrowserFocus);\n        } else {\n            // if a range is being changed, we need to make sure the focused cell does not change.\n            mouseEvent.preventDefault();\n        }\n\n        // if we are clicking on a checkbox, we need to make sure the cell wrapping that checkbox\n        // is focused but we don't want to change the range selection, so return here.\n        if (_.isElementChildOfClass(target as HTMLElement, 'ag-selection-checkbox', 3)) {\n            return;\n        }\n\n        // if it's a right click, then if the cell is already in range,\n        // don't change the range, however if the cell is not in a range,\n        // we set a new range\n        const leftMouseButtonClick = _.isLeftClick(mouseEvent);\n\n        if (leftMouseButtonClick && rangeController) {\n            const thisCell = this.cellPosition;\n            if (shiftKey) {\n                rangeController.extendLatestRangeToCell(thisCell);\n            } else {\n                const ctrlKeyPressed = ctrlKey || metaKey;\n                rangeController.setRangeToCell(thisCell, ctrlKeyPressed);\n            }\n        }\n\n        const cellMouseDownEvent: CellMouseDownEvent = this.createEvent(mouseEvent, Events.EVENT_CELL_MOUSE_DOWN);\n        eventService.dispatchEvent(cellMouseDownEvent);\n    }\n\n    // returns true if on iPad and this is second 'click' event in 200ms\n    private isDoubleClickOnIPad(): boolean {\n        if (!_.isIOSUserAgent() || _.isEventSupported('dblclick')) { return false; }\n\n        const nowMillis = new Date().getTime();\n        const res = nowMillis - this.lastIPadMouseClickEvent < 200;\n        this.lastIPadMouseClickEvent = nowMillis;\n\n        return res;\n    }\n\n    private onCellClicked(mouseEvent: MouseEvent): void {\n        // iPad doesn't have double click - so we need to mimic it to enable editing for iPad.\n        if (this.isDoubleClickOnIPad()) {\n            this.onCellDoubleClicked(mouseEvent);\n            mouseEvent.preventDefault(); // if we don't do this, then iPad zooms in\n\n            return;\n        }\n\n        const cellClickedEvent: CellClickedEvent = this.createEvent(mouseEvent, Events.EVENT_CELL_CLICKED);\n        this.beans.eventService.dispatchEvent(cellClickedEvent);\n\n        const colDef = this.getComponentHolder();\n\n        if (colDef.onCellClicked) {\n            // to make callback async, do in a timeout\n            window.setTimeout(() => (colDef.onCellClicked as any)(cellClickedEvent), 0);\n        }\n\n        const editOnSingleClick = (this.beans.gridOptionsWrapper.isSingleClickEdit() || colDef.singleClickEdit)\n            && !this.beans.gridOptionsWrapper.isSuppressClickEdit();\n\n        if (editOnSingleClick) {\n            this.startRowOrCellEdit();\n        }\n    }\n\n    private createGridCellVo(): void {\n        this.cellPosition = {\n            rowIndex: this.rowNode.rowIndex,\n            rowPinned: this.rowNode.rowPinned,\n            column: this.column\n        };\n    }\n\n    public getCellPosition(): CellPosition {\n        return this.cellPosition;\n    }\n\n    public getParentRow(): HTMLElement {\n        return this.eParentRow;\n    }\n\n    public setParentRow(eParentRow: HTMLElement): void {\n        this.eParentRow = eParentRow;\n    }\n\n    public getColumn(): Column {\n        return this.column;\n    }\n\n    public getComponentHolder(): ColDef {\n        return this.column.getColDef();\n    }\n\n    public detach(): void {\n        this.eParentRow.removeChild(this.getGui());\n    }\n\n    // if the row is also getting destroyed, then we don't need to remove from dom,\n    // as the row will also get removed, so no need to take out the cells from the row\n    // if the row is going (removing is an expensive operation, so only need to remove\n    // the top part)\n    public destroy(): void {\n        super.destroy();\n\n        if (this.createCellRendererFunc) {\n            this.beans.taskQueue.cancelTask(this.createCellRendererFunc);\n        }\n\n        this.stopEditing();\n\n        if (this.cellRenderer && this.cellRenderer.destroy) {\n            this.cellRenderer.destroy();\n            this.cellRenderer = null;\n        }\n\n        if (this.selectionHandle) {\n            this.selectionHandle.destroy();\n        }\n    }\n\n    public onLeftChanged(): void {\n        const left = this.modifyLeftForPrintLayout(this.getCellLeft());\n        this.getGui().style.left = left + 'px';\n        this.refreshAriaIndex();\n    }\n\n    private modifyLeftForPrintLayout(leftPosition: number): number {\n        if (!this.printLayout || this.column.getPinned() === Constants.PINNED_LEFT) {\n            return leftPosition;\n        }\n\n        if (this.column.getPinned() === Constants.PINNED_RIGHT) {\n            const leftWidth = this.beans.columnController.getPinnedLeftContainerWidth();\n            const bodyWidth = this.beans.columnController.getBodyContainerWidth();\n\n            return leftWidth + bodyWidth + leftPosition;\n        }\n\n        // is in body\n        const leftWidth = this.beans.columnController.getPinnedLeftContainerWidth();\n\n        return leftWidth + leftPosition;\n    }\n\n    public onWidthChanged(): void {\n        const width = this.getCellWidth();\n        this.getGui().style.width = width + 'px';\n    }\n\n    private getRangeBorders(): {\n        top: boolean,\n        right: boolean,\n        bottom: boolean,\n        left: boolean\n    } {\n        const isRtl = this.beans.gridOptionsWrapper.isEnableRtl();\n\n        let top = false;\n        let right = false;\n        let bottom = false;\n        let left = false;\n\n        const thisCol = this.cellPosition.column;\n        const rangeController = this.beans.rangeController;\n\n        let leftCol: Column;\n        let rightCol: Column;\n\n        if (isRtl) {\n            leftCol = this.beans.columnController.getDisplayedColAfter(thisCol);\n            rightCol = this.beans.columnController.getDisplayedColBefore(thisCol);\n        } else {\n            leftCol = this.beans.columnController.getDisplayedColBefore(thisCol);\n            rightCol = this.beans.columnController.getDisplayedColAfter(thisCol);\n        }\n\n        const ranges = rangeController.getCellRanges().filter(\n            range => rangeController.isCellInSpecificRange(this.cellPosition, range)\n        );\n\n        // this means we are the first column in the grid\n        if (!leftCol) {\n            left = true;\n        }\n\n        // this means we are the last column in the grid\n        if (!rightCol) {\n            right = true;\n        }\n\n        for (let i = 0; i < ranges.length; i++) {\n            if (top && right && bottom && left) { break; }\n\n            const range = ranges[i];\n            const startRow = rangeController.getRangeStartRow(range);\n            const endRow = rangeController.getRangeEndRow(range);\n\n            if (!top && this.beans.rowPositionUtils.sameRow(startRow, this.cellPosition)) {\n                top = true;\n            }\n\n            if (!bottom && this.beans.rowPositionUtils.sameRow(endRow, this.cellPosition)) {\n                bottom = true;\n            }\n\n            if (!left && range.columns.indexOf(leftCol) < 0) {\n                left = true;\n            }\n\n            if (!right && range.columns.indexOf(rightCol) < 0) {\n                right = true;\n            }\n        }\n\n        return { top, right, bottom, left };\n    }\n\n    private getInitialRangeClasses(): string[] {\n        const classes: string[] = [];\n\n        if (!this.rangeSelectionEnabled || !this.rangeCount) {\n            return classes;\n        }\n\n        classes.push('ag-cell-range-selected');\n\n        if (this.hasChartRange) {\n            classes.push('ag-cell-range-chart');\n        }\n\n        const count = Math.min(this.rangeCount, 4);\n\n        classes.push(`ag-cell-range-selected-${count}`);\n\n        if (this.isSingleCell()) {\n            classes.push('ag-cell-range-single-cell');\n        }\n\n        if (this.rangeCount > 0) {\n            const borders = this.getRangeBorders();\n\n            if (borders.top) { classes.push('ag-cell-range-top'); }\n            if (borders.right) { classes.push('ag-cell-range-right'); }\n            if (borders.bottom) { classes.push('ag-cell-range-bottom'); }\n            if (borders.left) { classes.push('ag-cell-range-left'); }\n        }\n\n        if (!!this.selectionHandle) {\n            classes.push('ag-cell-range-handle');\n        }\n\n        return classes;\n    }\n\n    public onRowIndexChanged(): void {\n        // when index changes, this influences items that need the index, so we update the\n        // grid cell so they are working off the new index.\n        this.createGridCellVo();\n        // when the index of the row changes, ie means the cell may have lost or gained focus\n        this.onCellFocused();\n        // check range selection\n        this.onRangeSelectionChanged();\n    }\n\n    public onRangeSelectionChanged(): void {\n        const { rangeController } = this.beans;\n\n        if (!rangeController) { return; }\n\n        const { cellPosition, rangeCount } = this;\n\n        const newRangeCount = rangeController.getCellRangeCount(cellPosition);\n        const element = this.getGui();\n\n        if (rangeCount !== newRangeCount) {\n            _.addOrRemoveCssClass(element, 'ag-cell-range-selected', newRangeCount !== 0);\n            _.addOrRemoveCssClass(element, 'ag-cell-range-selected-1', newRangeCount === 1);\n            _.addOrRemoveCssClass(element, 'ag-cell-range-selected-2', newRangeCount === 2);\n            _.addOrRemoveCssClass(element, 'ag-cell-range-selected-3', newRangeCount === 3);\n            _.addOrRemoveCssClass(element, 'ag-cell-range-selected-4', newRangeCount >= 4);\n            this.rangeCount = newRangeCount;\n        }\n\n        const hasChartRange = this.getHasChartRange();\n\n        if (hasChartRange !== this.hasChartRange) {\n            this.hasChartRange = hasChartRange;\n            _.addOrRemoveCssClass(element, 'ag-cell-range-chart', this.hasChartRange);\n        }\n\n        this.updateRangeBorders();\n\n        _.addOrRemoveCssClass(element, 'ag-cell-range-single-cell', this.isSingleCell());\n\n        this.refreshHandle();\n    }\n\n    private getHasChartRange(): boolean {\n        const { rangeController } = this.beans;\n\n        if (!this.rangeCount || !rangeController) {\n            return false;\n        }\n\n        const cellRanges = rangeController.getCellRanges();\n\n        return cellRanges.length > 0 && cellRanges.every(range => _.includes([CellRangeType.DIMENSION, CellRangeType.VALUE], range.type));\n    }\n\n    private shouldHaveSelectionHandle(): boolean {\n        const { gridOptionsWrapper, rangeController } = this.beans;\n        const cellRanges = rangeController.getCellRanges();\n        const rangesLen = cellRanges.length;\n\n        if (this.rangeCount < 1 || rangesLen < 1) {\n            return false;\n        }\n\n        const cellRange = _.last(cellRanges);\n        const cellPosition = this.getCellPosition();\n        let fillHandleIsAvailable = rangesLen === 1 &&\n            (gridOptionsWrapper.isEnableFillHandle() || gridOptionsWrapper.isEnableRangeHandle()) &&\n            !this.editingCell;\n\n        if (this.hasChartRange) {\n            const hasCategoryRange = cellRanges[0].type === CellRangeType.DIMENSION;\n            const isCategoryCell = hasCategoryRange && rangeController.isCellInSpecificRange(cellPosition, cellRanges[0]);\n\n            _.addOrRemoveCssClass(this.getGui(), 'ag-cell-range-chart-category', isCategoryCell);\n\n            fillHandleIsAvailable = cellRange.type === CellRangeType.VALUE;\n        }\n\n        return fillHandleIsAvailable &&\n            cellRange.endRow != null &&\n            rangeController.isContiguousRange(cellRange) &&\n            rangeController.isLastCellOfRange(cellRange, cellPosition);\n    }\n\n    private addSelectionHandle() {\n        const { gridOptionsWrapper, context, rangeController } = this.beans;\n        const cellRangeType = _.last(rangeController.getCellRanges()).type;\n        const type = (gridOptionsWrapper.isEnableFillHandle() && _.missing(cellRangeType)) ? 'fill' : 'range';\n\n        if (this.selectionHandle && this.selectionHandle.getType() !== type) {\n            this.selectionHandle.destroy();\n            this.selectionHandle = undefined;\n        }\n\n        if (!this.selectionHandle) {\n            this.selectionHandle = context.createComponentFromElement(\n                document.createElement(`ag-${type}-handle`)\n            ) as any as ISelectionHandle;\n        }\n\n        this.selectionHandle.refresh(this);\n    }\n\n    public updateRangeBordersIfRangeCount(): void {\n        // we only need to update range borders if we are in a range\n        if (this.rangeCount > 0) {\n            this.updateRangeBorders();\n            this.refreshHandle();\n        }\n    }\n\n    private refreshHandle(): void {\n        if (!this.beans.rangeController) { return; }\n\n        const shouldHaveSelectionHandle = this.shouldHaveSelectionHandle();\n\n        if (this.selectionHandle && !shouldHaveSelectionHandle) {\n            this.selectionHandle.destroy();\n            this.selectionHandle = null;\n        }\n\n        if (shouldHaveSelectionHandle) {\n            this.addSelectionHandle();\n        }\n\n        _.addOrRemoveCssClass(this.getGui(), 'ag-cell-range-handle', !!this.selectionHandle);\n    }\n\n    private updateRangeBorders(): void {\n        const rangeBorders = this.getRangeBorders();\n        const isSingleCell = this.isSingleCell();\n        const isTop = !isSingleCell && rangeBorders.top;\n        const isRight = !isSingleCell && rangeBorders.right;\n        const isBottom = !isSingleCell && rangeBorders.bottom;\n        const isLeft = !isSingleCell && rangeBorders.left;\n\n        const element = this.getGui();\n\n        _.addOrRemoveCssClass(element, 'ag-cell-range-top', isTop);\n        _.addOrRemoveCssClass(element, 'ag-cell-range-right', isRight);\n        _.addOrRemoveCssClass(element, 'ag-cell-range-bottom', isBottom);\n        _.addOrRemoveCssClass(element, 'ag-cell-range-left', isLeft);\n    }\n\n    public onFirstRightPinnedChanged(): void {\n        const firstRightPinned = this.column.isFirstRightPinned();\n\n        if (this.firstRightPinned !== firstRightPinned) {\n            this.firstRightPinned = firstRightPinned;\n            _.addOrRemoveCssClass(this.getGui(), 'ag-cell-first-right-pinned', firstRightPinned);\n        }\n    }\n\n    public onLastLeftPinnedChanged(): void {\n        const lastLeftPinned = this.column.isLastLeftPinned();\n\n        if (this.lastLeftPinned !== lastLeftPinned) {\n            this.lastLeftPinned = lastLeftPinned;\n            _.addOrRemoveCssClass(this.getGui(), 'ag-cell-last-left-pinned', lastLeftPinned);\n        }\n    }\n\n    private populateTemplate(): void {\n        if (this.usingWrapper) {\n\n            this.eParentOfValue = this.getRefElement('eCellValue');\n            this.eCellWrapper = this.getRefElement('eCellWrapper');\n            this.eCellValue = this.getRefElement('eCellValue');\n\n            if (this.includeRowDraggingComponent) {\n                this.addRowDragging();\n            }\n\n            if (this.includeDndSourceComponent) {\n                this.addDndSource();\n            }\n\n            if (this.includeSelectionComponent) {\n                this.addSelectionCheckbox();\n            }\n        } else {\n            this.eParentOfValue = this.getGui();\n        }\n    }\n\n    protected getFrameworkOverrides(): IFrameworkOverrides {\n        return this.beans.frameworkOverrides;\n    }\n\n    private addRowDragging(): void {\n        const pagination = this.beans.gridOptionsWrapper.isPagination();\n        const rowDragManaged = this.beans.gridOptionsWrapper.isRowDragManaged();\n        const clientSideRowModelActive = this.beans.gridOptionsWrapper.isRowModelDefault();\n\n        if (rowDragManaged) {\n            // row dragging only available in default row model\n            if (!clientSideRowModelActive) {\n                _.doOnce(() => console.warn('ag-Grid: managed row dragging is only allowed in the Client Side Row Model'),\n                    'CellComp.addRowDragging');\n\n                return;\n            }\n\n            if (pagination) {\n                _.doOnce(() => console.warn('ag-Grid: managed row dragging is not possible when doing pagination'),\n                    'CellComp.addRowDragging');\n\n                return;\n            }\n        }\n\n        const rowDraggingComp = new RowDragComp(this.rowNode, this.column, this.getValueToUse(), this.beans);\n        this.addFeature(rowDraggingComp, this.beans.context);\n\n        // put the checkbox in before the value\n        this.eCellWrapper.insertBefore(rowDraggingComp.getGui(), this.eParentOfValue);\n    }\n\n    private addDndSource(): void {\n        const dndSourceComp = new DndSourceComp(this.rowNode, this.column, this.getValueToUse(), this.beans, this.getGui());\n        this.addFeature(dndSourceComp, this.beans.context);\n\n        // put the checkbox in before the value\n        this.eCellWrapper.insertBefore(dndSourceComp.getGui(), this.eParentOfValue);\n    }\n\n    private addSelectionCheckbox(): void {\n        const cbSelectionComponent = new CheckboxSelectionComponent();\n        this.beans.context.wireBean(cbSelectionComponent);\n\n        let visibleFunc = this.getComponentHolder().checkboxSelection;\n        visibleFunc = typeof visibleFunc === 'function' ? visibleFunc : null;\n\n        cbSelectionComponent.init({ rowNode: this.rowNode, column: this.column, visibleFunc: visibleFunc });\n        this.addDestroyFunc(() => cbSelectionComponent.destroy());\n\n        // put the checkbox in before the value\n        this.eCellWrapper.insertBefore(cbSelectionComponent.getGui(), this.eParentOfValue);\n    }\n\n    private addDomData(): void {\n        const element = this.getGui();\n        this.beans.gridOptionsWrapper.setDomData(element, CellComp.DOM_DATA_KEY_CELL_COMP, this);\n\n        this.addDestroyFunc(() => this.beans.gridOptionsWrapper.setDomData(element, CellComp.DOM_DATA_KEY_CELL_COMP, null));\n    }\n\n    private isSingleCell(): boolean {\n        const { rangeController } = this.beans;\n\n        return this.rangeCount === 1 && rangeController && !rangeController.isMoreThanOneCell();\n    }\n\n    public onCellFocused(event?: any): void {\n        const cellFocused = this.beans.focusedCellController.isCellFocused(this.cellPosition);\n\n        // see if we need to change the classes on this cell\n        if (cellFocused !== this.cellFocused) {\n            // if we are not doing cell selection, then the focus class does not change\n            const doingFocusCss = !this.beans.gridOptionsWrapper.isSuppressCellSelection();\n\n            if (doingFocusCss) {\n                _.addOrRemoveCssClass(this.getGui(), 'ag-cell-focus', cellFocused);\n            }\n\n            this.cellFocused = cellFocused;\n        }\n\n        // see if we need to force browser focus - this can happen if focus is programmatically set\n        if (cellFocused && event && event.forceBrowserFocus) {\n            this.getGui().focus();\n            // Fix for AG-3465 \"IE11 - After editing cell's content, selection doesn't go one cell below on enter\"\n            // IE can fail to focus the cell after the first call to focus(), and needs a second call\n            if (!document.activeElement || document.activeElement === document.body) {\n                this.getGui().focus();\n            }\n        }\n\n        // if another cell was focused, and we are editing, then stop editing\n        const fullRowEdit = this.beans.gridOptionsWrapper.isFullRowEdit();\n\n        if (!cellFocused && !fullRowEdit && this.editingCell) {\n            this.stopRowOrCellEdit();\n        }\n    }\n\n    // pass in 'true' to cancel the editing.\n    public stopRowOrCellEdit(cancel: boolean = false) {\n        if (this.beans.gridOptionsWrapper.isFullRowEdit()) {\n            this.rowComp.stopRowEditing(cancel);\n        } else {\n            this.stopEditing(cancel);\n        }\n    }\n\n    public stopEditing(cancel = false): void {\n        if (!this.editingCell) { return; }\n\n        // if no cell editor, this means due to async, that the cell editor never got initialised,\n        // so we just carry on regardless as if the editing was never started.\n        if (!this.cellEditor) {\n            this.editingCell = false;\n            return;\n        }\n\n        let newValueExists = false;\n        let newValue: any;\n\n        if (!cancel) {\n            // also have another option here to cancel after editing, so for example user could have a popup editor and\n            // it is closed by user clicking outside the editor. then the editor will close automatically (with false\n            // passed above) and we need to see if the editor wants to accept the new value.\n            const userWantsToCancel = this.cellEditor.isCancelAfterEnd && this.cellEditor.isCancelAfterEnd();\n\n            if (!userWantsToCancel) {\n                newValue = this.cellEditor.getValue();\n                newValueExists = true;\n            }\n        }\n\n        // it is important we set this after setValue() above, as otherwise the cell will flash\n        // when editing stops. the 'refresh' method checks editing, and doesn't refresh editing cells.\n        // thus it will skip the refresh on this cell until the end of this method where we call\n        // refresh directly and we suppress the flash.\n        this.editingCell = false;\n\n        if (this.cellEditor.destroy) {\n            this.cellEditor.destroy();\n        }\n\n        // important to clear this out - as parts of the code will check for\n        // this to see if an async cellEditor has yet to be created\n        this.cellEditor = null;\n\n        if (this.cellEditorInPopup && this.hideEditorPopup) {\n            this.hideEditorPopup();\n            this.hideEditorPopup = null;\n        } else {\n            _.clearElement(this.getGui());\n\n            // put the cell back the way it was before editing\n            if (this.usingWrapper) {\n                // if wrapper, then put the wrapper back\n                this.getGui().appendChild(this.eCellWrapper);\n            } else {\n                // if cellRenderer, then put the gui back in. if the renderer has\n                // a refresh, it will be called. however if it doesn't, then later\n                // the renderer will be destroyed and a new one will be created.\n                if (this.cellRenderer) {\n                    // we know it's a dom element (not a string) because we converted\n                    // it after the gui was attached if it was a string.\n                    const eCell = this.cellRendererGui as HTMLElement;\n\n                    // can be null if cell was previously null / contained empty string,\n                    // this will result in new value not being rendered.\n                    if (eCell) {\n                        this.getGui().appendChild(eCell);\n                    }\n                }\n            }\n        }\n\n        this.setInlineEditingClass();\n\n        if (newValueExists) {\n            // we suppressRefreshCell because the call to rowNode.setDataValue() results in change detection\n            // getting triggered, which results in all cells getting refreshed. we do not want this refresh\n            // to happen on this call as we want to call it explicitly below. otherwise refresh gets called twice.\n            // if we only did this refresh (and not the one below) then the cell would flash and not be forced.\n            this.suppressRefreshCell = true;\n            this.rowNode.setDataValue(this.column, newValue);\n            this.suppressRefreshCell = false;\n        }\n\n        // we suppress the flash, as it is not correct to flash the cell the user has finished editing,\n        // the user doesn't need to flash as they were the one who did the edit, the flash is pointless\n        // (as the flash is meant to draw the user to a change that they didn't manually do themselves).\n        this.refreshCell({ forceRefresh: true, suppressFlash: true });\n\n        const event: CellEditingStoppedEvent = this.createEvent(null, Events.EVENT_CELL_EDITING_STOPPED);\n        this.beans.eventService.dispatchEvent(event);\n    }\n}\n"]}