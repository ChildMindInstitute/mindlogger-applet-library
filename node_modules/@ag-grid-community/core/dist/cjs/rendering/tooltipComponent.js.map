{"version":3,"sources":["../../src/ts/rendering/tooltipComponent.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,4DAA2D;AAmB3D;IAAsC,oCAAc;IAEhD;eACI,kBAAM,kCAAgC,CAAC;IAC3C,CAAC;IAED,2BAA2B;IACpB,+BAAI,GAAX,UAAY,MAAsB;QACtB,IAAA,oBAAK,CAAY;QACzB,IAAI,CAAC,MAAM,EAAE,CAAC,SAAS,GAAG,KAAK,CAAC;IACpC,CAAC;IACL,uBAAC;AAAD,CAXA,AAWC,CAXqC,+BAAc,GAWnD;AAXY,4CAAgB","file":"tooltipComponent.js","sourcesContent":["import { PopupComponent } from \"../widgets/popupComponent\";\nimport { IComponent } from \"../interfaces/iComponent\";\n\nexport interface ITooltipParams {\n    api: any;\n    columnApi: any;\n    colDef: any;\n    column: any;\n    context: any;\n    value?: any;\n    valueFormatted?: any;\n    rowIndex?: number;\n    node?: any;\n    data?: any;\n    $scope?: any;\n}\n\nexport interface ITooltipComp extends IComponent<ITooltipParams> {}\n\nexport class TooltipComponent extends PopupComponent implements ITooltipComp {\n\n    constructor() {\n        super(`<div class=\"ag-tooltip\"></div>`);\n    }\n\n    // will need to type params\n    public init(params: ITooltipParams): void {\n        const { value } = params;\n        this.getGui().innerHTML = value;\n    }\n}"]}