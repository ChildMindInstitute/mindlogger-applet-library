{"version":3,"sources":["../../src/ts/rendering/beans.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,8CAAuF;AAiCvF;;;;oFAIoF;AAEpF;IAAA;IA+CA,CAAC;IARU,gCAAgB,GAAvB,UAAwB,SAAoB;QACxC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC/B,CAAC;IAGO,6BAAa,GAArB;QACI,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,kBAAkB,CAAC,cAAc,EAAE,CAAC;IACtE,CAAC;IA5C6B;QAA7B,mBAAS,CAAC,iBAAiB,CAAC;kDAAyC;IAChD;QAArB,mBAAS,CAAC,SAAS,CAAC;0CAAyB;IACtB;QAAvB,mBAAS,CAAC,WAAW,CAAC;4CAA6B;IAC9B;QAArB,mBAAS,CAAC,SAAS,CAAC;0CAAyB;IACb;QAAhC,mBAAS,CAAC,oBAAoB,CAAC;qDAA+C;IAC/C;QAA/B,mBAAS,CAAC,mBAAmB,CAAC;oDAA6C;IAClD;QAAzB,mBAAS,CAAC,aAAa,CAAC;8CAAiC;IACnC;QAAtB,mBAAS,CAAC,UAAU,CAAC;2CAAsB;IACd;QAA7B,mBAAS,CAAC,iBAAiB,CAAC;kDAAyC;IAC3C;QAA1B,mBAAS,CAAC,cAAc,CAAC;+CAAmC;IAClC;QAA1B,mBAAS,CAAC,cAAc,CAAC;+CAAmC;IAC9B;QAA9B,mBAAS,CAAC,kBAAkB,CAAC;mDAA2C;IACpC;QAApC,mBAAS,CAAC,wBAAwB,CAAC;yDAAuD;IAC9D;QAA5B,kBAAQ,CAAC,iBAAiB,CAAC;kDAA0C;IAClC;QAAnC,mBAAS,CAAC,uBAAuB,CAAC;wDAAqD;IACxD;QAA/B,kBAAQ,CAAC,oBAAoB,CAAC;qDAAgD;IAC7C;QAAjC,mBAAS,CAAC,qBAAqB,CAAC;sDAAiD;IACvD;QAA1B,mBAAS,CAAC,cAAc,CAAC;+CAAmC;IACzB;QAAnC,mBAAS,CAAC,uBAAuB,CAAC;wDAAqD;IAC3D;QAA5B,mBAAS,CAAC,gBAAgB,CAAC;iDAAuC;IAClC;QAAhC,mBAAS,CAAC,oBAAoB,CAAC;qDAA+C;IAC5C;QAAlC,mBAAS,CAAC,sBAAsB,CAAC;uDAAmD;IACjD;QAAnC,mBAAS,CAAC,uBAAuB,CAAC;4CAAyC;IAC3C;QAAhC,mBAAS,CAAC,oBAAoB,CAAC;qDAA+C;IAClD;QAA5B,mBAAS,CAAC,gBAAgB,CAAC;iDAAuC;IACvC;QAA3B,mBAAS,CAAC,eAAe,CAAC;gDAAqC;IAC/B;QAAhC,mBAAS,CAAC,oBAAoB,CAAC;qDAA+C;IAClD;QAA5B,mBAAS,CAAC,gBAAgB,CAAC;iDAAuC;IAClC;QAAhC,mBAAS,CAAC,oBAAoB,CAAC;qDAAgD;IAC/C;QAAhC,mBAAS,CAAC,oBAAoB,CAAC;qDAA+C;IAC/C;QAA/B,mBAAS,CAAC,mBAAmB,CAAC;oDAA6C;IAC7C;QAA9B,mBAAS,CAAC,kBAAkB,CAAC;mDAA2C;IAWzE;QADC,uBAAa;8CAGb;IA9CQ,KAAK;QADjB,cAAI,CAAC,OAAO,CAAC;OACD,KAAK,CA+CjB;IAAD,YAAC;CA/CD,AA+CC,IAAA;AA/CY,sBAAK","file":"beans.js","sourcesContent":["import { Autowired, Bean, Context, Optional, PostConstruct } from \"../context/context\";\nimport { ColumnApi } from \"../columnController/columnApi\";\nimport { ColumnController } from \"../columnController/columnController\";\nimport { GridApi } from \"../gridApi\";\nimport { GridOptionsWrapper } from \"../gridOptionsWrapper\";\nimport { ExpressionService } from \"../valueService/expressionService\";\nimport { RowRenderer } from \"./rowRenderer\";\nimport { TemplateService } from \"../templateService\";\nimport { ValueService } from \"../valueService/valueService\";\nimport { EventService } from \"../eventService\";\nimport { ColumnAnimationService } from \"./columnAnimationService\";\nimport { IRangeController } from \"../interfaces/iRangeController\";\nimport { FocusedCellController } from \"../focusedCellController\";\nimport { IContextMenuFactory } from \"../interfaces/iContextMenuFactory\";\nimport { CellRendererFactory } from \"./cellRendererFactory\";\nimport { PopupService } from \"../widgets/popupService\";\nimport { ValueFormatterService } from \"./valueFormatterService\";\nimport { StylingService } from \"../styling/stylingService\";\nimport { ColumnHoverService } from \"./columnHoverService\";\nimport { GridPanel } from \"../gridPanel/gridPanel\";\nimport { PaginationProxy } from \"../pagination/paginationProxy\";\nimport { AnimationFrameService } from \"../misc/animationFrameService\";\nimport { UserComponentFactory } from \"../components/framework/userComponentFactory\";\nimport { DragAndDropService } from \"../dragAndDrop/dragAndDropService\";\nimport { SortController } from \"../sortController\";\nimport { FilterManager } from \"../filter/filterManager\";\nimport { MaxDivHeightScaler } from \"./maxDivHeightScaler\";\nimport { TooltipManager } from \"../widgets/tooltipManager\";\nimport { IFrameworkOverrides } from \"../interfaces/iFrameworkOverrides\";\nimport { DetailRowCompCache } from \"./detailRowCompCache\";\nimport {CellPositionUtils} from \"../entities/cellPosition\";\nimport {RowPositionUtils} from \"../entities/rowPosition\";\n\n/** Using the IoC has a slight performance consideration, which is no problem most of the\n * time, unless we are trashing objects - which is the case when scrolling and rowComp\n * and cellComp. So for performance reasons, RowComp and CellComp do not get autowired\n * with the IoC. Instead they get passed this object which is all the beans the RowComp\n * and CellComp need. Not autowiring all the cells gives performance improvement. */\n@Bean('beans')\nexport class Beans {\n\n    @Autowired('paginationProxy') public paginationProxy: PaginationProxy;\n    @Autowired('context') public context: Context;\n    @Autowired('columnApi') public columnApi: ColumnApi;\n    @Autowired('gridApi') public gridApi: GridApi;\n    @Autowired('gridOptionsWrapper') public gridOptionsWrapper: GridOptionsWrapper;\n    @Autowired('expressionService') public expressionService: ExpressionService;\n    @Autowired('rowRenderer') public rowRenderer: RowRenderer;\n    @Autowired('$compile') public $compile: any;\n    @Autowired('templateService') public templateService: TemplateService;\n    @Autowired('valueService') public valueService: ValueService;\n    @Autowired('eventService') public eventService: EventService;\n    @Autowired('columnController') public columnController: ColumnController;\n    @Autowired('columnAnimationService') public columnAnimationService: ColumnAnimationService;\n    @Optional('rangeController') public rangeController: IRangeController;\n    @Autowired('focusedCellController') public focusedCellController: FocusedCellController;\n    @Optional('contextMenuFactory') public contextMenuFactory: IContextMenuFactory;\n    @Autowired('cellRendererFactory') public cellRendererFactory: CellRendererFactory;\n    @Autowired('popupService') public popupService: PopupService;\n    @Autowired('valueFormatterService') public valueFormatterService: ValueFormatterService;\n    @Autowired('stylingService') public stylingService: StylingService;\n    @Autowired('columnHoverService') public columnHoverService: ColumnHoverService;\n    @Autowired('userComponentFactory') public userComponentFactory: UserComponentFactory;\n    @Autowired('animationFrameService') public taskQueue: AnimationFrameService;\n    @Autowired('dragAndDropService') public dragAndDropService: DragAndDropService;\n    @Autowired('sortController') public sortController: SortController;\n    @Autowired('filterManager') public filterManager: FilterManager;\n    @Autowired('maxDivHeightScaler') public maxDivHeightScaler: MaxDivHeightScaler;\n    @Autowired('tooltipManager') public tooltipManager: TooltipManager;\n    @Autowired('frameworkOverrides') public frameworkOverrides: IFrameworkOverrides;\n    @Autowired('detailRowCompCache') public detailRowCompCache: DetailRowCompCache;\n    @Autowired('cellPositionUtils') public cellPositionUtils: CellPositionUtils;\n    @Autowired('rowPositionUtils') public rowPositionUtils: RowPositionUtils;\n\n    public doingMasterDetail: boolean;\n\n    public gridPanel: GridPanel;\n\n    public registerGridComp(gridPanel: GridPanel): void {\n        this.gridPanel = gridPanel;\n    }\n\n    @PostConstruct\n    private postConstruct(): void {\n        this.doingMasterDetail = this.gridOptionsWrapper.isMasterDetail();\n    }\n}\n"]}