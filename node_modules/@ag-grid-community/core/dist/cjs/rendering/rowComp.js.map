{"version":3,"sources":["../../src/ts/rendering/rowComp.ts"],"names":[],"mappings":"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","file":"rowComp.js","sourcesContent":["import {CellComp} from \"./cellComp\";\nimport {CellChangedEvent, DataChangedEvent, RowNode} from \"../entities/rowNode\";\nimport {Column} from \"../entities/column\";\nimport {\n    Events,\n    RowClickedEvent,\n    RowDoubleClickedEvent,\n    RowEditingStartedEvent,\n    RowEditingStoppedEvent,\n    RowEvent,\n    RowValueChangedEvent,\n    VirtualRowRemovedEvent\n} from \"../events\";\n\nimport {ICellRendererComp} from \"./cellRenderers/iCellRenderer\";\nimport {RowContainerComponent} from \"./rowContainerComponent\";\nimport {Component} from \"../widgets/component\";\n\nimport {Beans} from \"./beans\";\nimport {ProcessRowParams} from \"../entities/gridOptions\";\nimport {_} from \"../utils\";\nimport {IFrameworkOverrides} from \"../interfaces/iFrameworkOverrides\";\nimport {Constants} from \"../constants\";\nimport {ModuleNames} from \"../modules/moduleNames\";\nimport {ModuleRegistry} from \"../modules/moduleRegistry\";\n\ninterface CellTemplate {\n    template: string;\n    cellComps: CellComp[];\n}\n\nexport class RowComp extends Component {\n\n    public static DOM_DATA_KEY_RENDERED_ROW = 'renderedRow';\n\n    private static FULL_WIDTH_CELL_RENDERER = 'fullWidthCellRenderer';\n\n    private static GROUP_ROW_RENDERER = 'groupRowRenderer';\n    private static GROUP_ROW_RENDERER_COMP_NAME = 'agGroupRowRenderer';\n\n    private static LOADING_CELL_RENDERER = 'loadingCellRenderer';\n    private static LOADING_CELL_RENDERER_COMP_NAME = 'agLoadingCellRenderer';\n\n    private static DETAIL_CELL_RENDERER = 'detailCellRenderer';\n    private static DETAIL_CELL_RENDERER_COMP_NAME = 'agDetailCellRenderer';\n\n    private readonly rowNode: RowNode;\n\n    private readonly beans: Beans;\n\n    private ePinnedLeftRow: HTMLElement;\n    private ePinnedRightRow: HTMLElement;\n    private eBodyRow: HTMLElement;\n    private eAllRowContainers: HTMLElement[] = [];\n\n    private eFullWidthRow: HTMLElement;\n    private eFullWidthRowBody: HTMLElement;\n    private eFullWidthRowLeft: HTMLElement;\n    private eFullWidthRowRight: HTMLElement;\n\n    private readonly bodyContainerComp: RowContainerComponent;\n    private readonly fullWidthContainerComp: RowContainerComponent;\n    private readonly pinnedLeftContainerComp: RowContainerComponent;\n    private readonly pinnedRightContainerComp: RowContainerComponent;\n\n    private fullWidthRowComponent: ICellRendererComp;\n    private fullWidthRowComponentBody: ICellRendererComp;\n    private fullWidthRowComponentLeft: ICellRendererComp;\n    private fullWidthRowComponentRight: ICellRendererComp;\n\n    private firstRowOnPage: boolean;\n    private lastRowOnPage: boolean;\n\n    private active = true;\n\n    private fullWidthRow: boolean;\n\n    private editingRow: boolean;\n    private rowFocused: boolean;\n\n    private rowContainerReadyCount = 0;\n    private refreshNeeded = false;\n    private columnRefreshPending = false;\n\n    private cellComps: {[key: string]: CellComp} = {};\n\n    // for animations, there are bits we want done in the next VM turn, to all DOM to update first.\n    // instead of each row doing a setTimeout(func,0), we put the functions here and the rowRenderer\n    // executes them all in one timeout\n    private createSecondPassFuncs: Function[] = [];\n\n    // these get called before the row is destroyed - they set up the DOM for the remove animation (ie they\n    // set the DOM up for the animation), then the delayedDestroyFunctions get called when the animation is\n    // complete (ie removes from the dom).\n    private removeFirstPassFuncs: Function[] = [];\n\n    // for animations, these functions get called 400ms after the row is cleared, called by the rowRenderer\n    // so each row isn't setting up it's own timeout\n    private removeSecondPassFuncs: Function[] = [];\n\n    private fadeRowIn: boolean;\n    private slideRowIn: boolean;\n    private readonly useAnimationFrameForCreate: boolean;\n\n    private rowIsEven: boolean;\n\n    private paginationPage: number;\n\n    private parentScope: any;\n    private scope: any;\n\n    private initialised = false;\n\n    private elementOrderChanged = false;\n\n    private readonly printLayout: boolean;\n    private readonly embedFullWidth: boolean;\n\n    constructor(parentScope: any,\n                bodyContainerComp: RowContainerComponent,\n                pinnedLeftContainerComp: RowContainerComponent,\n                pinnedRightContainerComp: RowContainerComponent,\n                fullWidthContainerComp: RowContainerComponent,\n                rowNode: RowNode,\n                beans: Beans,\n                animateIn: boolean,\n                useAnimationFrameForCreate: boolean,\n                printLayout: boolean,\n                embedFullWidth: boolean) {\n        super();\n        this.parentScope = parentScope;\n        this.beans = beans;\n        this.bodyContainerComp = bodyContainerComp;\n        this.pinnedLeftContainerComp = pinnedLeftContainerComp;\n        this.pinnedRightContainerComp = pinnedRightContainerComp;\n        this.fullWidthContainerComp = fullWidthContainerComp;\n        this.rowNode = rowNode;\n        this.rowIsEven = this.rowNode.rowIndex % 2 === 0;\n        this.paginationPage = this.beans.paginationProxy.getCurrentPage();\n        this.useAnimationFrameForCreate = useAnimationFrameForCreate;\n        this.printLayout = printLayout;\n        this.embedFullWidth = embedFullWidth;\n\n        this.setAnimateFlags(animateIn);\n    }\n\n    public init(): void {\n        this.rowFocused = this.beans.focusedCellController.isRowFocused(this.rowNode.rowIndex, this.rowNode.rowPinned);\n\n        this.scope = this.createChildScopeOrNull(this.rowNode.data);\n\n        this.setupRowContainers();\n\n        this.addListeners();\n\n        if (this.slideRowIn) {\n            this.createSecondPassFuncs.push(() => {\n                this.onTopChanged();\n            });\n        }\n        if (this.fadeRowIn) {\n            this.createSecondPassFuncs.push(() => {\n                this.eAllRowContainers.forEach(eRow => _.removeCssClass(eRow, 'ag-opacity-zero'));\n            });\n        }\n    }\n\n    private createTemplate(contents: string, extraCssClass: string = null): string {\n        const templateParts: string[] = [];\n        const rowHeight = this.rowNode.rowHeight;\n        const rowClasses = this.getInitialRowClasses(extraCssClass).join(' ');\n        const rowIdSanitised = _.escape(this.rowNode.id);\n        const userRowStyles = this.preProcessStylesFromGridOptions();\n        const businessKey = this.getRowBusinessKey();\n        const businessKeySanitised = _.escape(businessKey);\n        const rowTopStyle = this.getInitialRowTopStyle();\n        const rowIdx = this.rowNode.getRowIndexString();\n        const headerRowCount = this.beans.gridPanel.headerRootComp.getHeaderRowCount();\n\n        templateParts.push(`<div`);\n        templateParts.push(` role=\"row\"`);\n        templateParts.push(` row-index=\"${rowIdx}\" aria-rowindex=\"${headerRowCount + this.rowNode.rowIndex + 1}\"`);\n        templateParts.push(rowIdSanitised ? ` row-id=\"${rowIdSanitised}\"` : ``);\n        templateParts.push(businessKey ? ` row-business-key=\"${businessKeySanitised}\"` : ``);\n        templateParts.push(` comp-id=\"${this.getCompId()}\"`);\n        templateParts.push(` class=\"${rowClasses}\"`);\n        templateParts.push(` style=\"height: ${rowHeight}px; ${rowTopStyle} ${userRowStyles}\">`);\n\n        // add in the template for the cells\n        templateParts.push(contents);\n        templateParts.push(`</div>`);\n\n        return templateParts.join('');\n    }\n\n    public getCellForCol(column: Column): HTMLElement {\n        const cellComp = this.cellComps[column.getColId()];\n\n        return cellComp ? cellComp.getGui() : null;\n    }\n\n    public afterFlush(): void {\n        if (this.initialised) { return; }\n\n        this.initialised = true;\n        this.executeProcessRowPostCreateFunc();\n    }\n\n    private executeProcessRowPostCreateFunc(): void {\n        const func = this.beans.gridOptionsWrapper.getProcessRowPostCreateFunc();\n        if (!func) { return; }\n\n        const params: ProcessRowParams = {\n            eRow: this.eBodyRow,\n            ePinnedLeftRow: this.ePinnedLeftRow,\n            ePinnedRightRow: this.ePinnedRightRow,\n            node: this.rowNode,\n            api: this.beans.gridOptionsWrapper.getApi(),\n            rowIndex: this.rowNode.rowIndex,\n            addRenderedRowListener: this.addEventListener.bind(this),\n            columnApi: this.beans.gridOptionsWrapper.getColumnApi(),\n            context: this.beans.gridOptionsWrapper.getContext()\n        };\n        func(params);\n    }\n\n    private getInitialRowTopStyle() {\n        // print layout uses normal flow layout for row positioning\n        if (this.printLayout) { return ''; }\n\n        // if sliding in, we take the old row top. otherwise we just set the current row top.\n        const pixels = this.slideRowIn ? this.roundRowTopToBounds(this.rowNode.oldRowTop) : this.rowNode.rowTop;\n        const afterPaginationPixels = this.applyPaginationOffset(pixels);\n        const afterScalingPixels = this.beans.maxDivHeightScaler.getRealPixelPosition(afterPaginationPixels);\n        const isSuppressRowTransform = this.beans.gridOptionsWrapper.isSuppressRowTransform();\n\n        return isSuppressRowTransform ? `top: ${afterScalingPixels}px; ` : `transform: translateY(${afterScalingPixels}px);`;\n    }\n\n    private getRowBusinessKey(): string {\n        const businessKeyForNodeFunc = this.beans.gridOptionsWrapper.getBusinessKeyForNodeFunc();\n        if (typeof businessKeyForNodeFunc !== 'function') { return ; }\n\n        return businessKeyForNodeFunc(this.rowNode);\n    }\n\n    private areAllContainersReady(): boolean {\n        return this.rowContainerReadyCount === 3;\n    }\n\n    private lazyCreateCells(cols: Column[], eRow: HTMLElement): void {\n        if (!this.active) { return; }\n\n        const cellTemplatesAndComps = this.createCells(cols);\n        eRow.innerHTML = cellTemplatesAndComps.template;\n        this.callAfterRowAttachedOnCells(cellTemplatesAndComps.cellComps, eRow);\n\n        this.rowContainerReadyCount++;\n\n        if (this.areAllContainersReady() && this.refreshNeeded) {\n            this.refreshCells();\n        }\n    }\n\n    private createRowContainer(rowContainerComp: RowContainerComponent, cols: Column[],\n                               callback: (eRow: HTMLElement) => void): void {\n\n        const useAnimationsFrameForCreate = this.useAnimationFrameForCreate;\n        const cellTemplatesAndComps: CellTemplate = useAnimationsFrameForCreate ? {cellComps: [], template: ''} : this.createCells(cols);\n        const rowTemplate = this.createTemplate(cellTemplatesAndComps.template);\n\n        // the RowRenderer is probably inserting many rows. rather than inserting each template one\n        // at a time, the grid inserts all rows together - so the callback here is called by the\n        // rowRenderer when all RowComps are created, then all the HTML is inserted in one go,\n        // and then all the callbacks are called. this is NOT done in an animation frame.\n        rowContainerComp.appendRowTemplate(rowTemplate, () => {\n            const eRow: HTMLElement = rowContainerComp.getRowElement(this.getCompId());\n            this.afterRowAttached(rowContainerComp, eRow);\n            callback(eRow);\n\n            if (useAnimationsFrameForCreate) {\n                this.beans.taskQueue.createTask(\n                    this.lazyCreateCells.bind(this, cols, eRow),\n                    this.rowNode.rowIndex,\n                    'createTasksP1'\n                );\n            } else {\n                this.callAfterRowAttachedOnCells(cellTemplatesAndComps.cellComps, eRow);\n                this.rowContainerReadyCount = 3;\n            }\n        });\n    }\n\n    private createChildScopeOrNull(data: any) {\n        const isAngularCompileRows = this.beans.gridOptionsWrapper.isAngularCompileRows();\n\n        if (!isAngularCompileRows) {\n            return null;\n        }\n\n        const newChildScope = this.parentScope.$new();\n        newChildScope.data = {...data };\n        newChildScope.rowNode = this.rowNode;\n        newChildScope.context = this.beans.gridOptionsWrapper.getContext();\n\n        this.addDestroyFunc(() => {\n            newChildScope.$destroy();\n            newChildScope.data = null;\n            newChildScope.rowNode = null;\n            newChildScope.context = null;\n        });\n\n        return newChildScope;\n    }\n\n    private setupRowContainers(): void {\n        const isFullWidthCell = this.rowNode.isFullWidthCell();\n        const isDetailCell = this.beans.doingMasterDetail && this.rowNode.detail;\n        const pivotMode = this.beans.columnController.isPivotMode();\n        // we only use full width for groups, not footers. it wouldn't make sense to include footers if not looking\n        // for totals. if users complain about this, then we should introduce a new property 'footerUseEntireRow'\n        // so each can be set independently (as a customer complained about footers getting full width, hence\n        // introducing this logic)\n        const isGroupRow = this.rowNode.group && !this.rowNode.footer;\n        const isFullWidthGroup =  isGroupRow && this.beans.gridOptionsWrapper.isGroupUseEntireRow(pivotMode);\n\n        if (this.rowNode.stub) {\n            this.createFullWidthRows(RowComp.LOADING_CELL_RENDERER, RowComp.LOADING_CELL_RENDERER_COMP_NAME);\n        } else if (isDetailCell) {\n            this.createFullWidthRows(RowComp.DETAIL_CELL_RENDERER, RowComp.DETAIL_CELL_RENDERER_COMP_NAME);\n        } else if (isFullWidthCell) {\n            this.createFullWidthRows(RowComp.FULL_WIDTH_CELL_RENDERER, null);\n        } else if (isFullWidthGroup) {\n            this.createFullWidthRows(RowComp.GROUP_ROW_RENDERER, RowComp.GROUP_ROW_RENDERER_COMP_NAME);\n        } else {\n            this.setupNormalRowContainers();\n        }\n    }\n\n    private setupNormalRowContainers(): void {\n        let centerCols: Column[];\n        let leftCols: Column[];\n        let rightCols: Column[];\n\n        if (this.printLayout) {\n            centerCols = this.beans.columnController.getAllDisplayedColumns();\n            leftCols = [];\n            rightCols = [];\n        } else {\n            centerCols = this.beans.columnController.getAllDisplayedCenterVirtualColumnsForRow(this.rowNode);\n            leftCols = this.beans.columnController.getDisplayedLeftColumnsForRow(this.rowNode);\n            rightCols = this.beans.columnController.getDisplayedRightColumnsForRow(this.rowNode);\n        }\n\n        this.createRowContainer(this.bodyContainerComp, centerCols, eRow => this.eBodyRow = eRow);\n        this.createRowContainer(this.pinnedRightContainerComp, rightCols, eRow => this.ePinnedRightRow = eRow);\n        this.createRowContainer(this.pinnedLeftContainerComp, leftCols, eRow => this.ePinnedLeftRow = eRow);\n    }\n\n    private createFullWidthRows(type: string, name: string): void {\n        this.fullWidthRow = true;\n\n        if (this.embedFullWidth) {\n            this.createFullWidthRowContainer(this.bodyContainerComp, null,\n                null, type, name,\n                (eRow: HTMLElement) => {\n                    this.eFullWidthRowBody = eRow;\n                },\n                (cellRenderer: ICellRendererComp) => {\n                    this.fullWidthRowComponentBody = cellRenderer;\n                });\n\n            // printLayout doesn't put components into the pinned sections\n            if (!this.printLayout) {\n                this.createFullWidthRowContainer(this.pinnedLeftContainerComp, Constants.PINNED_LEFT,\n                    'ag-cell-last-left-pinned', type, name,\n                    (eRow: HTMLElement) => {\n                        this.eFullWidthRowLeft = eRow;\n                    },\n                    (cellRenderer: ICellRendererComp) => {\n                        this.fullWidthRowComponentLeft = cellRenderer;\n                    });\n                this.createFullWidthRowContainer(this.pinnedRightContainerComp, Constants.PINNED_RIGHT,\n                    'ag-cell-first-right-pinned', type, name,\n                    (eRow: HTMLElement) => {\n                        this.eFullWidthRowRight = eRow;\n                    },\n                    (cellRenderer: ICellRendererComp) => {\n                        this.fullWidthRowComponentRight = cellRenderer;\n                    });\n            }\n        } else {\n            // otherwise we add to the fullWidth container as normal\n            // let previousFullWidth = ensureDomOrder ? this.lastPlacedElements.eFullWidth : null;\n            this.createFullWidthRowContainer(this.fullWidthContainerComp, null,\n                null, type, name,\n                (eRow: HTMLElement) => {\n                    this.eFullWidthRow = eRow;\n                },\n                (cellRenderer: ICellRendererComp) => {\n                    this.fullWidthRowComponent = cellRenderer;\n                }\n            );\n        }\n    }\n\n    private setAnimateFlags(animateIn: boolean): void {\n        if (animateIn) {\n            const oldRowTopExists = _.exists(this.rowNode.oldRowTop);\n            // if the row had a previous position, we slide it in (animate row top)\n            this.slideRowIn = oldRowTopExists;\n            // if the row had no previous position, we fade it in (animate\n            this.fadeRowIn = !oldRowTopExists;\n        } else {\n            this.slideRowIn = false;\n            this.fadeRowIn = false;\n        }\n    }\n\n    public isEditing(): boolean {\n        return this.editingRow;\n    }\n\n    public stopRowEditing(cancel: boolean): void {\n        this.stopEditing(cancel);\n    }\n\n    public isFullWidth(): boolean {\n        return this.fullWidthRow;\n    }\n\n    public refreshFullWidth(): boolean {\n\n        // returns 'true' if refresh succeeded\n        const tryRefresh = (eRow: HTMLElement, eCellComp: ICellRendererComp, pinned: string): boolean => {\n            if (!eRow || !eCellComp) {\n                // no refresh needed\n                return true;\n            }\n\n            if (!eCellComp.refresh) {\n                // no refresh method present, so can't refresh, hard refresh needed\n                return false;\n            }\n\n            const params = this.createFullWidthParams(eRow, pinned);\n            const refreshSucceeded = eCellComp.refresh(params);\n            return refreshSucceeded;\n        };\n\n        const normalSuccess = tryRefresh(this.eFullWidthRow, this.fullWidthRowComponent, null);\n        const bodySuccess = tryRefresh(this.eFullWidthRowBody, this.fullWidthRowComponentBody, null);\n        const leftSuccess = tryRefresh(this.eFullWidthRowLeft, this.fullWidthRowComponentLeft, Constants.PINNED_LEFT);\n        const rightSuccess = tryRefresh(this.eFullWidthRowRight, this.fullWidthRowComponentRight, Constants.PINNED_RIGHT);\n\n        const allFullWidthRowsRefreshed = normalSuccess && bodySuccess && leftSuccess && rightSuccess;\n\n        return allFullWidthRowsRefreshed;\n    }\n\n    private addListeners(): void {\n        this.addDestroyableEventListener(this.rowNode, RowNode.EVENT_HEIGHT_CHANGED, this.onRowHeightChanged.bind(this));\n        this.addDestroyableEventListener(this.rowNode, RowNode.EVENT_ROW_SELECTED, this.onRowSelected.bind(this));\n        this.addDestroyableEventListener(this.rowNode, RowNode.EVENT_ROW_INDEX_CHANGED, this.onRowIndexChanged.bind(this));\n        this.addDestroyableEventListener(this.rowNode, RowNode.EVENT_TOP_CHANGED, this.onTopChanged.bind(this));\n        this.addDestroyableEventListener(this.rowNode, RowNode.EVENT_EXPANDED_CHANGED, this.onExpandedChanged.bind(this));\n        this.addDestroyableEventListener(this.rowNode, RowNode.EVENT_DATA_CHANGED, this.onRowNodeDataChanged.bind(this));\n        this.addDestroyableEventListener(this.rowNode, RowNode.EVENT_CELL_CHANGED, this.onRowNodeCellChanged.bind(this));\n        this.addDestroyableEventListener(this.rowNode, RowNode.EVENT_DRAGGING_CHANGED, this.onRowNodeDraggingChanged.bind(this));\n\n        const eventService = this.beans.eventService;\n        this.addDestroyableEventListener(eventService, Events.EVENT_HEIGHT_SCALE_CHANGED, this.onTopChanged.bind(this));\n        this.addDestroyableEventListener(eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this));\n        this.addDestroyableEventListener(eventService, Events.EVENT_VIRTUAL_COLUMNS_CHANGED, this.onVirtualColumnsChanged.bind(this));\n        this.addDestroyableEventListener(eventService, Events.EVENT_COLUMN_RESIZED, this.onColumnResized.bind(this));\n        this.addDestroyableEventListener(eventService, Events.EVENT_CELL_FOCUSED, this.onCellFocusChanged.bind(this));\n        this.addDestroyableEventListener(eventService, Events.EVENT_PAGINATION_CHANGED, this.onPaginationChanged.bind(this));\n        this.addDestroyableEventListener(eventService, Events.EVENT_GRID_COLUMNS_CHANGED, this.onGridColumnsChanged.bind(this));\n        this.addDestroyableEventListener(eventService, Events.EVENT_MODEL_UPDATED, this.onModelUpdated.bind(this));\n        this.addDestroyableEventListener(eventService, Events.EVENT_COLUMN_MOVED, this.onColumnMoved.bind(this));\n\n        this.addListenersForCellComps();\n    }\n\n    private addListenersForCellComps(): void {\n\n        this.addDestroyableEventListener(this.rowNode, RowNode.EVENT_ROW_INDEX_CHANGED, () => {\n            this.forEachCellComp(cellComp => cellComp.onRowIndexChanged());\n        });\n        this.addDestroyableEventListener(this.rowNode, RowNode.EVENT_CELL_CHANGED, event => {\n            this.forEachCellComp(cellComp => cellComp.onCellChanged(event));\n        });\n\n    }\n\n    // when grid columns change, then all cells should be cleaned out,\n    // as the new columns could have same id as the previous columns and may conflict\n    private onGridColumnsChanged(): void {\n        this.removeRenderedCells(Object.keys(this.cellComps));\n    }\n\n    private onRowNodeDataChanged(event: DataChangedEvent): void {\n        // if this is an update, we want to refresh, as this will allow the user to put in a transition\n        // into the cellRenderer refresh method. otherwise this might be completely new data, in which case\n        // we will want to completely replace the cells\n        this.forEachCellComp(cellComp =>\n            cellComp.refreshCell({\n                suppressFlash: !event.update,\n                newData: !event.update\n            })\n        );\n\n        // check for selected also, as this could be after lazy loading of the row data, in which case\n        // the id might of just gotten set inside the row and the row selected state may of changed\n        // as a result. this is what happens when selected rows are loaded in virtual pagination.\n        // - niall note - since moving to the stub component, this may no longer be true, as replacing\n        // the stub component now replaces the entire row\n        this.onRowSelected();\n\n        // as data has changed, then the style and class needs to be recomputed\n        this.postProcessCss();\n    }\n\n    private onRowNodeCellChanged(event: CellChangedEvent): void {\n        // as data has changed, then the style and class needs to be recomputed\n        this.postProcessCss();\n    }\n\n    private postProcessCss(): void {\n        this.postProcessStylesFromGridOptions();\n        this.postProcessClassesFromGridOptions();\n        this.postProcessRowClassRules();\n        this.postProcessRowDragging();\n    }\n\n    private onRowNodeDraggingChanged(): void {\n        this.postProcessRowDragging();\n    }\n\n    private postProcessRowDragging(): void {\n        const dragging = this.rowNode.dragging;\n        this.eAllRowContainers.forEach(row => _.addOrRemoveCssClass(row, 'ag-row-dragging', dragging));\n    }\n\n    private onExpandedChanged(): void {\n        const rowNode = this.rowNode;\n        this.eAllRowContainers.forEach(row => _.addOrRemoveCssClass(row, 'ag-row-group-expanded', rowNode.expanded));\n        this.eAllRowContainers.forEach(row => _.addOrRemoveCssClass(row, 'ag-row-group-contracted', !rowNode.expanded));\n    }\n\n    private onDisplayedColumnsChanged(): void {\n        if (this.fullWidthRow) { return; }\n\n        this.refreshCells();\n    }\n\n    private destroyFullWidthComponents(): void {\n        if (this.fullWidthRowComponent) {\n            this.beans.detailRowCompCache.addOrDestroy(this.rowNode, null, this.fullWidthRowComponent);\n            this.fullWidthRowComponent = null;\n        }\n        if (this.fullWidthRowComponentBody) {\n            this.beans.detailRowCompCache.addOrDestroy(this.rowNode, null, this.fullWidthRowComponentBody);\n            this.fullWidthRowComponent = null;\n        }\n        if (this.fullWidthRowComponentLeft) {\n            this.beans.detailRowCompCache.addOrDestroy(this.rowNode, Constants.PINNED_LEFT, this.fullWidthRowComponentLeft);\n            this.fullWidthRowComponentLeft = null;\n        }\n        if (this.fullWidthRowComponentRight) {\n            this.beans.detailRowCompCache.addOrDestroy(this.rowNode, Constants.PINNED_RIGHT, this.fullWidthRowComponentRight);\n            this.fullWidthRowComponent = null;\n        }\n    }\n\n    private getContainerForCell(pinnedType: string): HTMLElement {\n        switch (pinnedType) {\n            case Constants.PINNED_LEFT: return this.ePinnedLeftRow;\n            case Constants.PINNED_RIGHT: return this.ePinnedRightRow;\n            default: return this.eBodyRow;\n        }\n    }\n\n    private onVirtualColumnsChanged(): void {\n        if (this.fullWidthRow) { return; }\n\n        this.refreshCells();\n    }\n\n    private onColumnResized(): void {\n        if (this.fullWidthRow) { return; }\n\n        this.refreshCells();\n    }\n\n    private refreshCells() {\n        if (!this.areAllContainersReady()) {\n            this.refreshNeeded = true;\n            return;\n        }\n\n        const suppressAnimationFrame = this.beans.gridOptionsWrapper.isSuppressAnimationFrame();\n        const skipAnimationFrame = suppressAnimationFrame || this.printLayout;\n\n        if (skipAnimationFrame) {\n            this.refreshCellsInAnimationFrame();\n        } else {\n            if (this.columnRefreshPending) { return; }\n\n            this.beans.taskQueue.createTask(\n                this.refreshCellsInAnimationFrame.bind(this),\n                this.rowNode.rowIndex,\n                'createTasksP1'\n            );\n        }\n    }\n\n    private refreshCellsInAnimationFrame() {\n        if (!this.active) { return; }\n        this.columnRefreshPending = false;\n\n        let centerCols: Column[];\n        let leftCols: Column[];\n        let rightCols: Column[];\n\n        if (this.printLayout) {\n            centerCols = this.beans.columnController.getAllDisplayedColumns();\n            leftCols = [];\n            rightCols = [];\n        } else {\n            centerCols = this.beans.columnController.getAllDisplayedCenterVirtualColumnsForRow(this.rowNode);\n            leftCols = this.beans.columnController.getDisplayedLeftColumnsForRow(this.rowNode);\n            rightCols = this.beans.columnController.getDisplayedRightColumnsForRow(this.rowNode);\n        }\n\n        this.insertCellsIntoContainer(this.eBodyRow, centerCols);\n        this.insertCellsIntoContainer(this.ePinnedLeftRow, leftCols);\n        this.insertCellsIntoContainer(this.ePinnedRightRow, rightCols);\n        this.elementOrderChanged = false;\n\n        const colIdsToRemove = Object.keys(this.cellComps);\n        centerCols.forEach(col => _.removeFromArray(colIdsToRemove, col.getId()));\n        leftCols.forEach(col => _.removeFromArray(colIdsToRemove, col.getId()));\n        rightCols.forEach(col => _.removeFromArray(colIdsToRemove, col.getId()));\n\n        // we never remove editing cells, as this would cause the cells to loose their values while editing\n        // as the grid is scrolling horizontally.\n        const eligibleToBeRemoved = colIdsToRemove.filter(this.isCellEligibleToBeRemoved.bind(this));\n\n        // remove old cells from gui, but we don't destroy them, we might use them again\n        this.removeRenderedCells(eligibleToBeRemoved);\n    }\n\n    private onColumnMoved() {\n        this.elementOrderChanged = true;\n    }\n\n    private removeRenderedCells(colIds: string[]): void {\n        colIds.forEach((key: string) => {\n            const cellComp = this.cellComps[key];\n            // could be old reference, ie removed cell\n            if (_.missing(cellComp)) { return; }\n\n            cellComp.detach();\n            cellComp.destroy();\n            this.cellComps[key] = null;\n        });\n    }\n\n    private isCellEligibleToBeRemoved(indexStr: string): boolean {\n        const displayedColumns = this.beans.columnController.getAllDisplayedColumns();\n\n        const REMOVE_CELL = true;\n        const KEEP_CELL = false;\n        const renderedCell = this.cellComps[indexStr];\n\n        if (!renderedCell) { return REMOVE_CELL; }\n\n        // always remove the cell if it's in the wrong pinned location\n        if (this.isCellInWrongRow(renderedCell)) { return REMOVE_CELL; }\n\n        // we want to try and keep editing and focused cells\n        const editing = renderedCell.isEditing();\n        const focused = this.beans.focusedCellController.isCellFocused(renderedCell.getCellPosition());\n\n        const mightWantToKeepCell = editing || focused;\n\n        if (mightWantToKeepCell) {\n            const column = renderedCell.getColumn();\n            const cellStillDisplayed = displayedColumns.indexOf(column) >= 0;\n            return cellStillDisplayed ? KEEP_CELL : REMOVE_CELL;\n        }\n\n        return REMOVE_CELL;\n\n    }\n\n    private ensureCellInCorrectContainer(cellComp: CellComp): void {\n        // for print layout, we always put cells into centre, otherwise we put in correct pinned section\n        if (this.printLayout) { return; }\n\n        const element = cellComp.getGui();\n        const column = cellComp.getColumn();\n        const pinnedType = column.getPinned();\n        const eContainer = this.getContainerForCell(pinnedType);\n\n        // if in wrong container, remove it\n        const eOldContainer = cellComp.getParentRow();\n        const inWrongRow = eOldContainer !== eContainer;\n        if (inWrongRow) {\n            // take out from old row\n            if (eOldContainer) {\n                eOldContainer.removeChild(element);\n            }\n\n            eContainer.appendChild(element);\n            cellComp.setParentRow(eContainer);\n            this.elementOrderChanged = true;\n        }\n    }\n\n    private isCellInWrongRow(cellComp: CellComp): boolean {\n        const column = cellComp.getColumn();\n        const rowWeWant = this.getContainerForCell(column.getPinned());\n\n        // if in wrong container, remove it\n        const oldRow = cellComp.getParentRow();\n        return oldRow !== rowWeWant;\n    }\n\n    private insertCellsIntoContainer(eRow: HTMLElement, cols: Column[]): void {\n        if (!eRow) { return; }\n\n        const cellTemplates: string[] = [];\n        const newCellComps: CellComp[] = [];\n\n        cols.forEach(col => {\n            const colId = col.getId();\n            const existingCell = this.cellComps[colId];\n\n            if (existingCell) {\n                this.ensureCellInCorrectContainer(existingCell);\n            } else {\n                this.createNewCell(col, eRow, cellTemplates, newCellComps);\n            }\n\n        });\n\n        if (cellTemplates.length > 0) {\n            _.appendHtml(eRow, cellTemplates.join(''));\n            this.callAfterRowAttachedOnCells(newCellComps, eRow);\n        }\n\n        if (this.elementOrderChanged && this.beans.gridOptionsWrapper.isEnsureDomOrder()) {\n            const correctChildOrder = cols.map(col => this.getCellForCol(col));\n            _.setDomChildOrder(eRow, correctChildOrder);\n        }\n    }\n\n    private addDomData(eRowContainer: Element): void {\n        const gow = this.beans.gridOptionsWrapper;\n        gow.setDomData(eRowContainer, RowComp.DOM_DATA_KEY_RENDERED_ROW, this);\n        this.addDestroyFunc(() => {\n            gow.setDomData(eRowContainer, RowComp.DOM_DATA_KEY_RENDERED_ROW, null); }\n        );\n    }\n\n    private createNewCell(col: Column, eContainer: HTMLElement, cellTemplates: string[], newCellComps: CellComp[]): void {\n        const newCellComp = new CellComp(this.scope, this.beans, col, this.rowNode, this, false, this.printLayout);\n        const cellTemplate = newCellComp.getCreateTemplate();\n        cellTemplates.push(cellTemplate);\n        newCellComps.push(newCellComp);\n        this.cellComps[col.getId()] = newCellComp;\n        newCellComp.setParentRow(eContainer);\n        this.elementOrderChanged = true;\n    }\n\n    public onMouseEvent(eventName: string, mouseEvent: MouseEvent): void {\n        switch (eventName) {\n            case 'dblclick': this.onRowDblClick(mouseEvent); break;\n            case 'click': this.onRowClick(mouseEvent); break;\n        }\n    }\n\n    private createRowEvent(type: string, domEvent?: Event): RowEvent {\n        return {\n            type: type,\n            node: this.rowNode,\n            data: this.rowNode.data,\n            rowIndex: this.rowNode.rowIndex,\n            rowPinned: this.rowNode.rowPinned,\n            context: this.beans.gridOptionsWrapper.getContext(),\n            api: this.beans.gridOptionsWrapper.getApi(),\n            columnApi: this.beans.gridOptionsWrapper.getColumnApi(),\n            event: domEvent\n        };\n    }\n\n    private createRowEventWithSource(type: string, domEvent: Event): RowEvent {\n        const event = this.createRowEvent(type, domEvent);\n        // when first developing this, we included the rowComp in the event.\n        // this seems very weird. so when introducing the event types, i left the 'source'\n        // out of the type, and just include the source in the two places where this event\n        // was fired (rowClicked and rowDoubleClicked). it doesn't make sense for any\n        // users to be using this, as the rowComp isn't an object we expose, so would be\n        // very surprising if a user was using it.\n        (event as any).source = this;\n        return event;\n    }\n\n    private onRowDblClick(mouseEvent: MouseEvent): void {\n        if (_.isStopPropagationForAgGrid(mouseEvent)) { return; }\n\n        const agEvent: RowDoubleClickedEvent = this.createRowEventWithSource(Events.EVENT_ROW_DOUBLE_CLICKED, mouseEvent);\n\n        this.beans.eventService.dispatchEvent(agEvent);\n    }\n\n    public onRowClick(mouseEvent: MouseEvent) {\n        const stop = _.isStopPropagationForAgGrid(mouseEvent);\n        if (stop) { return; }\n\n        const agEvent: RowClickedEvent = this.createRowEventWithSource(Events.EVENT_ROW_CLICKED, mouseEvent);\n\n        this.beans.eventService.dispatchEvent(agEvent);\n\n        // ctrlKey for windows, metaKey for Apple\n        const multiSelectKeyPressed = mouseEvent.ctrlKey || mouseEvent.metaKey;\n        const shiftKeyPressed = mouseEvent.shiftKey;\n\n        if (\n            // we do not allow selecting groups by clicking (as the click here expands the group), or if it's a detail row,\n            // so return if it's a group row\n            this.rowNode.group ||\n            // this is needed so we don't unselect other rows when we click this row, eg if this row is not selectable,\n            // and we click it, the selection should not change (ie any currently selected row should stay selected)\n            !this.rowNode.selectable ||\n            // we also don't allow selection of pinned rows\n            this.rowNode.rowPinned ||\n            // if no selection method enabled, do nothing\n            !this.beans.gridOptionsWrapper.isRowSelection() ||\n            // if click selection suppressed, do nothing\n            this.beans.gridOptionsWrapper.isSuppressRowClickSelection()\n        ) {\n            return;\n        }\n\n        const multiSelectOnClick = this.beans.gridOptionsWrapper.isRowMultiSelectWithClick();\n        const rowDeselectionWithCtrl = this.beans.gridOptionsWrapper.isRowDeselection();\n\n        if (this.rowNode.isSelected()) {\n            if (multiSelectOnClick) {\n                this.rowNode.setSelectedParams({newValue: false});\n            } else if (multiSelectKeyPressed) {\n                if (rowDeselectionWithCtrl) {\n                    this.rowNode.setSelectedParams({newValue: false});\n                }\n            } else {\n                // selected with no multi key, must make sure anything else is unselected\n                this.rowNode.setSelectedParams({newValue: true, clearSelection: true});\n            }\n        } else {\n            const clearSelection = multiSelectOnClick ? false : !multiSelectKeyPressed;\n            this.rowNode.setSelectedParams({newValue: true, clearSelection: clearSelection, rangeSelect: shiftKeyPressed});\n        }\n    }\n\n    private createFullWidthRowContainer(rowContainerComp: RowContainerComponent, pinned: string,\n                                        extraCssClass: string, cellRendererType: string, cellRendererName: string,\n                                        eRowCallback: (eRow: HTMLElement) => void,\n                                        cellRendererCallback: (comp: ICellRendererComp) => void): void {\n\n        const rowTemplate = this.createTemplate('', extraCssClass);\n        rowContainerComp.appendRowTemplate(rowTemplate, () => {\n\n            const eRow: HTMLElement = rowContainerComp.getRowElement(this.getCompId());\n            const params = this.createFullWidthParams(eRow, pinned);\n\n            const callback = (cellRenderer: ICellRendererComp) => {\n                if (this.isAlive()) {\n                    const gui = cellRenderer.getGui();\n                    eRow.appendChild(gui);\n                    cellRendererCallback(cellRenderer);\n                } else {\n                    if (cellRenderer.destroy) {\n                        cellRenderer.destroy();\n                    }\n                }\n            };\n\n            // if doing master detail, it's possible we have a cached row comp from last time detail was displayed\n            const cachedRowComp = this.beans.detailRowCompCache.get(this.rowNode, pinned);\n            if (cachedRowComp) {\n                callback(cachedRowComp);\n            } else {\n                const res = this.beans.userComponentFactory.newFullWidthCellRenderer(params, cellRendererType, cellRendererName);\n                if (!res) {\n                    const masterDetailModuleLoaded = ModuleRegistry.isRegistered(ModuleNames.MasterDetailModule);\n                    if (cellRendererName === 'agDetailCellRenderer' && !masterDetailModuleLoaded) {\n                        console.warn(`ag-Grid: cell renderer agDetailCellRenderer (for master detail) not found. Did you forget to include the master detail module?`);\n                    } else {\n                        console.error(`ag-Grid: fullWidthCellRenderer ${cellRendererName} not found`);\n                    }\n                    return;\n                }\n                res.then(callback);\n            }\n\n            this.afterRowAttached(rowContainerComp, eRow);\n            eRowCallback(eRow);\n\n            this.angular1Compile(eRow);\n        });\n    }\n\n    private angular1Compile(element: Element): void {\n        if (!this.scope) { return ; }\n\n        this.beans.$compile(element)(this.scope);\n    }\n\n    private createFullWidthParams(eRow: HTMLElement, pinned: string): any {\n        const params = {\n            fullWidth: true,\n            data: this.rowNode.data,\n            node: this.rowNode,\n            value: this.rowNode.key,\n            $scope: this.scope ? this.scope : this.parentScope,\n            $compile: this.beans.$compile,\n            rowIndex: this.rowNode.rowIndex,\n            api: this.beans.gridOptionsWrapper.getApi(),\n            columnApi: this.beans.gridOptionsWrapper.getColumnApi(),\n            context: this.beans.gridOptionsWrapper.getContext(),\n            // these need to be taken out, as part of 'afterAttached' now\n            eGridCell: eRow,\n            eParentOfValue: eRow,\n            pinned: pinned,\n            addRenderedRowListener: this.addEventListener.bind(this)\n        };\n\n        return params;\n    }\n\n    private getInitialRowClasses(extraCssClass: string): string[] {\n        const classes: string[] = [];\n        const isTreeData = this.beans.gridOptionsWrapper.isTreeData();\n        const rowNode = this.rowNode;\n\n        if (_.exists(extraCssClass)) {\n            classes.push(extraCssClass);\n        }\n\n        classes.push('ag-row');\n        classes.push(this.rowFocused ? 'ag-row-focus' : 'ag-row-no-focus');\n\n        if (this.fadeRowIn) {\n            classes.push('ag-opacity-zero');\n        }\n\n        classes.push(this.rowIsEven ? 'ag-row-even' : 'ag-row-odd');\n\n        if (rowNode.isSelected()) {\n            classes.push('ag-row-selected');\n        }\n\n        if (rowNode.group) {\n            classes.push('ag-row-group');\n            // if a group, put the level of the group in\n            classes.push('ag-row-level-' + rowNode.level);\n\n            if (rowNode.footer) {\n                classes.push('ag-row-footer');\n            }\n        } else {\n            // if a leaf, and a parent exists, put a level of the parent, else put level of 0 for top level item\n            classes.push('ag-row-level-' + (rowNode.parent ? (rowNode.parent.level + 1) : '0'));\n        }\n\n        if (rowNode.stub) {\n            classes.push('ag-row-stub');\n        }\n\n        if (this.fullWidthRow) {\n            classes.push('ag-full-width-row');\n        }\n\n        const addExpandedClass = isTreeData ?\n            // if doing tree data, we add the expanded classes if any children, as any node can be a parent\n            rowNode.allChildrenCount :\n            // if normal row grouping, we add expanded classes to groups only\n            rowNode.group && !rowNode.footer;\n        if (addExpandedClass) {\n            classes.push(rowNode.expanded ? 'ag-row-group-expanded' : 'ag-row-group-contracted');\n        }\n\n        if (rowNode.dragging) {\n            classes.push('ag-row-dragging');\n        }\n\n        _.pushAll(classes, this.processClassesFromGridOptions());\n        _.pushAll(classes, this.preProcessRowClassRules());\n\n        // we use absolute position unless we are doing print layout\n        classes.push(this.printLayout ? 'ag-row-position-relative' : 'ag-row-position-absolute');\n\n        this.firstRowOnPage = this.isFirstRowOnPage();\n        this.lastRowOnPage = this.isLastRowOnPage();\n\n        if (this.firstRowOnPage) {\n            classes.push('ag-row-first');\n        }\n\n        if (this.lastRowOnPage) {\n            classes.push('ag-row-last');\n        }\n\n        return classes;\n    }\n\n    private isFirstRowOnPage(): boolean {\n        return this.rowNode.rowIndex === this.beans.paginationProxy.getPageFirstRow();\n    }\n\n    private isLastRowOnPage(): boolean {\n        return this.rowNode.rowIndex === this.beans.paginationProxy.getPageLastRow();\n    }\n\n    private onModelUpdated(): void {\n        const newFirst = this.isFirstRowOnPage();\n        const newLast = this.isLastRowOnPage();\n\n        if (this.firstRowOnPage !== newFirst) {\n            this.firstRowOnPage = newFirst;\n            this.eAllRowContainers.forEach((row) => _.addOrRemoveCssClass(row, 'ag-row-first', newFirst));\n        }\n        if (this.lastRowOnPage !== newLast) {\n            this.lastRowOnPage = newLast;\n            this.eAllRowContainers.forEach((row) => _.addOrRemoveCssClass(row, 'ag-row-last', newLast));\n        }\n    }\n\n    private preProcessRowClassRules(): string[] {\n        const res: string[] = [];\n\n        this.processRowClassRules(\n            (className: string) => {\n                res.push(className);\n            },\n            (className: string) => {\n                // not catered for, if creating, no need\n                // to remove class as it was never there\n            }\n        );\n\n        return res;\n    }\n\n    private processRowClassRules(onApplicableClass: (className: string) => void, onNotApplicableClass?: (className: string) => void): void {\n        this.beans.stylingService.processClassRules(\n            this.beans.gridOptionsWrapper.rowClassRules(),\n            {\n                value: undefined,\n                colDef:undefined,\n                data: this.rowNode.data,\n                node: this.rowNode,\n                rowIndex: this.rowNode.rowIndex,\n                api: this.beans.gridOptionsWrapper.getApi(),\n                columnApi: this.beans.gridOptionsWrapper.getColumnApi(),\n                $scope: this.scope,\n                context: this.beans.gridOptionsWrapper.getContext()\n            }, onApplicableClass, onNotApplicableClass);\n    }\n\n    public stopEditing(cancel = false): void {\n        this.forEachCellComp(renderedCell => {\n            renderedCell.stopEditing(cancel);\n        });\n\n        if (!this.editingRow) { return; }\n\n        if (!cancel) {\n            const event: RowValueChangedEvent = this.createRowEvent(Events.EVENT_ROW_VALUE_CHANGED);\n            this.beans.eventService.dispatchEvent(event);\n        }\n        this.setEditingRow(false);\n    }\n\n    private setEditingRow(value: boolean): void {\n        this.editingRow = value;\n        this.eAllRowContainers.forEach(row => _.addOrRemoveCssClass(row, 'ag-row-editing', value));\n\n        const event: RowEvent = value ?\n            this.createRowEvent(Events.EVENT_ROW_EDITING_STARTED) as RowEditingStartedEvent\n            : this.createRowEvent(Events.EVENT_ROW_EDITING_STOPPED) as RowEditingStoppedEvent;\n\n        this.beans.eventService.dispatchEvent(event);\n    }\n\n    public startRowEditing(keyPress: number | null = null, charPress: string | null = null, sourceRenderedCell: CellComp | null = null): void {\n        // don't do it if already editing\n        if (this.editingRow) { return; }\n\n        this.forEachCellComp(renderedCell => {\n            const cellStartedEdit = renderedCell === sourceRenderedCell;\n            if (cellStartedEdit) {\n                renderedCell.startEditingIfEnabled(keyPress, charPress, cellStartedEdit);\n            } else {\n                renderedCell.startEditingIfEnabled(null, null, cellStartedEdit);\n            }\n        });\n        this.setEditingRow(true);\n    }\n\n    public forEachCellComp(callback: (renderedCell: CellComp) => void): void {\n        _.iterateObject(this.cellComps, (key: any, cellComp: CellComp) => {\n            if (!cellComp) { return; }\n\n            callback(cellComp);\n        });\n    }\n\n    private postProcessClassesFromGridOptions(): void {\n        const cssClasses = this.processClassesFromGridOptions();\n        if (!cssClasses || !cssClasses.length) { return; }\n\n        cssClasses.forEach(classStr => {\n            this.eAllRowContainers.forEach(row => _.addCssClass(row, classStr));\n        });\n    }\n\n    private postProcessRowClassRules(): void {\n        this.processRowClassRules(\n            (className: string) => {\n                this.eAllRowContainers.forEach(row => _.addCssClass(row, className));\n            },\n            (className: string) => {\n                this.eAllRowContainers.forEach(row => _.removeCssClass(row, className));\n            }\n        );\n    }\n\n    private processClassesFromGridOptions(): string[] {\n        const res: string[] = [];\n\n        const process = (rowCls: string | string[]) => {\n            if (typeof rowCls === 'string') {\n                res.push(rowCls);\n            } else if (Array.isArray(rowCls)) {\n                rowCls.forEach(e => res.push(e));\n            }\n        };\n\n        // part 1 - rowClass\n        const rowClass = this.beans.gridOptionsWrapper.getRowClass();\n        if (rowClass) {\n            if (typeof rowClass === 'function') {\n                console.warn('ag-Grid: rowClass should not be a function, please use getRowClass instead');\n                return;\n            }\n            process(rowClass);\n        }\n\n        // part 2 - rowClassFunc\n        const rowClassFunc = this.beans.gridOptionsWrapper.getRowClassFunc();\n        if (rowClassFunc) {\n            const params = {\n                node: this.rowNode,\n                data: this.rowNode.data,\n                rowIndex: this.rowNode.rowIndex,\n                context: this.beans.gridOptionsWrapper.getContext(),\n                api: this.beans.gridOptionsWrapper.getApi()\n            };\n            const rowClassFuncResult = rowClassFunc(params);\n            process(rowClassFuncResult);\n        }\n\n        return res;\n    }\n\n    private preProcessStylesFromGridOptions(): string {\n        const rowStyles = this.processStylesFromGridOptions();\n        return _.cssStyleObjectToMarkup(rowStyles);\n    }\n\n    private postProcessStylesFromGridOptions(): void {\n        const rowStyles = this.processStylesFromGridOptions();\n        this.eAllRowContainers.forEach(row => _.addStylesToElement(row, rowStyles));\n    }\n\n    private processStylesFromGridOptions(): any {\n        // part 1 - rowStyle\n        const rowStyle = this.beans.gridOptionsWrapper.getRowStyle();\n\n        if (rowStyle && typeof rowStyle === 'function') {\n            console.warn('ag-Grid: rowStyle should be an object of key/value styles, not be a function, use getRowStyle() instead');\n            return;\n        }\n\n        // part 1 - rowStyleFunc\n        const rowStyleFunc = this.beans.gridOptionsWrapper.getRowStyleFunc();\n        let rowStyleFuncResult: any;\n\n        if (rowStyleFunc) {\n            const params = {\n                data: this.rowNode.data,\n                node: this.rowNode,\n                api: this.beans.gridOptionsWrapper.getApi(),\n                context: this.beans.gridOptionsWrapper.getContext(),\n                $scope: this.scope\n            };\n            rowStyleFuncResult = rowStyleFunc(params);\n        }\n\n        return _.assign({}, rowStyle, rowStyleFuncResult);\n    }\n\n    private createCells(cols: Column[]): {template: string, cellComps: CellComp[]} {\n        const templateParts: string[] = [];\n        const newCellComps: CellComp[] = [];\n\n        cols.forEach(col => {\n            const newCellComp = new CellComp(this.scope, this.beans, col, this.rowNode, this,\n                false, this.printLayout);\n            const cellTemplate = newCellComp.getCreateTemplate();\n            templateParts.push(cellTemplate);\n            newCellComps.push(newCellComp);\n            this.cellComps[col.getId()] = newCellComp;\n        });\n\n        const templateAndComps = {\n            template: templateParts.join(''),\n            cellComps: newCellComps\n        };\n        return templateAndComps;\n    }\n\n    private onRowSelected(): void {\n        const selected = this.rowNode.isSelected();\n        this.eAllRowContainers.forEach((row) => _.addOrRemoveCssClass(row, 'ag-row-selected', selected));\n    }\n\n    // called:\n    // + after row created for first time\n    // + after horizontal scroll, so new cells due to column virtualisation\n    private callAfterRowAttachedOnCells(newCellComps: CellComp[], eRow: HTMLElement): void {\n        newCellComps.forEach(cellComp => {\n            cellComp.setParentRow(eRow);\n            cellComp.afterAttached();\n\n            // if we are editing the row, then the cell needs to turn\n            // into edit mode\n            if (this.editingRow) {\n                cellComp.startEditingIfEnabled();\n            }\n        });\n    }\n\n    private afterRowAttached(rowContainerComp: RowContainerComponent, eRow: HTMLElement): void {\n        this.addDomData(eRow);\n\n        this.removeSecondPassFuncs.push(() => {\n            rowContainerComp.removeRowElement(eRow);\n        });\n\n        this.removeFirstPassFuncs.push(() => {\n            if (_.exists(this.rowNode.rowTop)) {\n                // the row top is updated anyway, however we set it here again\n                // to something more reasonable for the animation - ie if the\n                // row top is 10000px away, the row will flash out, so this\n                // gives it a rounded value, so row animates out more slowly\n                const rowTop = this.roundRowTopToBounds(this.rowNode.rowTop);\n                this.setRowTop(rowTop);\n            } else {\n                _.addCssClass(eRow, 'ag-opacity-zero');\n            }\n        });\n\n        this.eAllRowContainers.push(eRow);\n\n        // adding hover functionality adds listener to this row, so we\n        // do it lazily in an animation frame\n        if (this.useAnimationFrameForCreate) {\n            this.beans.taskQueue.createTask(\n                this.addHoverFunctionality.bind(this, eRow),\n                this.rowNode.rowIndex,\n                'createTasksP2'\n            );\n        } else {\n            this.addHoverFunctionality(eRow);\n        }\n    }\n\n    private addHoverFunctionality(eRow: HTMLElement): void {\n        // because we use animation frames to do this, it's possible the row no longer exists\n        // by the time we get to add it\n        if (!this.active) { return; }\n\n        // because mouseenter and mouseleave do not propagate, we cannot listen on the gridPanel\n        // like we do for all the other mouse events.\n\n        // because of the pinning, we cannot simply add / remove the class based on the eRow. we\n        // have to check all eRow's (body & pinned). so the trick is if any of the rows gets a\n        // mouse hover, it sets such in the rowNode, and then all three reflect the change as\n        // all are listening for event on the row node.\n\n        // step 1 - add listener, to set flag on row node\n        this.addDestroyableEventListener(eRow, 'mouseenter', () => this.rowNode.onMouseEnter());\n        this.addDestroyableEventListener(eRow, 'mouseleave', () => this.rowNode.onMouseLeave());\n\n        // step 2 - listen for changes on row node (which any eRow can trigger)\n        this.addDestroyableEventListener(this.rowNode, RowNode.EVENT_MOUSE_ENTER, () => {\n            // if hover turned off, we don't add the class. we do this here so that if the application\n            // toggles this property mid way, we remove the hover form the last row, but we stop\n            // adding hovers from that point onwards.\n            if (!this.beans.gridOptionsWrapper.isSuppressRowHoverHighlight()) {\n                _.addCssClass(eRow, 'ag-row-hover');\n            }\n        });\n\n        this.addDestroyableEventListener(this.rowNode, RowNode.EVENT_MOUSE_LEAVE, () => {\n            _.removeCssClass(eRow, 'ag-row-hover');\n        });\n    }\n\n    // for animation, we don't want to animate entry or exit to a very far away pixel,\n    // otherwise the row would move so fast, it would appear to disappear. so this method\n    // moves the row closer to the viewport if it is far away, so the row slide in / out\n    // at a speed the user can see.\n    private roundRowTopToBounds(rowTop: number): number {\n        const range = this.beans.gridPanel.getVScrollPosition();\n        const minPixel = this.applyPaginationOffset(range.top, true) - 100;\n        const maxPixel = this.applyPaginationOffset(range.bottom, true) + 100;\n\n        return Math.min(Math.max(minPixel, rowTop), maxPixel);\n    }\n\n    protected getFrameworkOverrides(): IFrameworkOverrides {\n        return this.beans.frameworkOverrides;\n    }\n\n    private onRowHeightChanged(): void {\n        // check for exists first - if the user is resetting the row height, then\n        // it will be null (or undefined) momentarily until the next time the flatten\n        // stage is called where the row will then update again with a new height\n        if (_.exists(this.rowNode.rowHeight)) {\n            const heightPx = `${this.rowNode.rowHeight}px`;\n\n            this.eAllRowContainers.forEach(row => row.style.height = heightPx);\n        }\n    }\n\n    public addEventListener(eventType: string, listener: Function): void {\n        if (eventType === 'renderedRowRemoved' || eventType === 'rowRemoved') {\n            eventType = Events.EVENT_VIRTUAL_ROW_REMOVED;\n            console.warn('ag-Grid: Since version 11, event renderedRowRemoved is now called ' + Events.EVENT_VIRTUAL_ROW_REMOVED);\n        }\n        super.addEventListener(eventType, listener);\n    }\n\n    public removeEventListener(eventType: string, listener: Function): void {\n        if (eventType === 'renderedRowRemoved' || eventType === 'rowRemoved') {\n            eventType = Events.EVENT_VIRTUAL_ROW_REMOVED;\n            console.warn('ag-Grid: Since version 11, event renderedRowRemoved and rowRemoved is now called ' + Events.EVENT_VIRTUAL_ROW_REMOVED);\n        }\n        super.removeEventListener(eventType, listener);\n    }\n\n    public destroy(animate = false): void {\n        super.destroy();\n\n        this.active = false;\n\n        // why do we have this method? shouldn't everything below be added as a destroy func beside\n        // the corresponding create logic?\n\n        this.destroyFullWidthComponents();\n\n        if (animate) {\n            this.removeFirstPassFuncs.forEach(func => func());\n            this.removeSecondPassFuncs.push(this.destroyContainingCells.bind(this));\n        } else {\n            this.destroyContainingCells();\n\n            // we are not animating, so execute the second stage of removal now.\n            // we call getAndClear, so that they are only called once\n            const delayedDestroyFunctions = this.getAndClearDelayedDestroyFunctions();\n            delayedDestroyFunctions.forEach(func => func());\n        }\n\n        const event: VirtualRowRemovedEvent = this.createRowEvent(Events.EVENT_VIRTUAL_ROW_REMOVED);\n\n        this.dispatchEvent(event);\n        this.beans.eventService.dispatchEvent(event);\n    }\n\n    private destroyContainingCells(): void {\n        this.forEachCellComp(renderedCell => renderedCell.destroy());\n        this.destroyFullWidthComponents();\n    }\n\n    // we clear so that the functions are never executed twice\n    public getAndClearDelayedDestroyFunctions(): Function[] {\n        const result = this.removeSecondPassFuncs;\n        this.removeSecondPassFuncs = [];\n        return result;\n    }\n\n    private onCellFocusChanged(): void {\n        const rowFocused = this.beans.focusedCellController.isRowFocused(this.rowNode.rowIndex, this.rowNode.rowPinned);\n\n        if (rowFocused !== this.rowFocused) {\n            this.eAllRowContainers.forEach(row => _.addOrRemoveCssClass(row, 'ag-row-focus', rowFocused));\n            this.eAllRowContainers.forEach(row => _.addOrRemoveCssClass(row, 'ag-row-no-focus', !rowFocused));\n            this.rowFocused = rowFocused;\n        }\n\n        // if we are editing, then moving the focus out of a row will stop editing\n        if (!rowFocused && this.editingRow) {\n            this.stopEditing(false);\n        }\n    }\n\n    private onPaginationChanged(): void {\n        const currentPage = this.beans.paginationProxy.getCurrentPage();\n        // it is possible this row is in the new page, but the page number has changed, which means\n        // it needs to reposition itself relative to the new page\n        if (this.paginationPage !== currentPage) {\n            this.paginationPage = currentPage;\n            this.onTopChanged();\n        }\n    }\n\n    private onTopChanged(): void {\n        this.setRowTop(this.rowNode.rowTop);\n    }\n\n    // applies pagination offset, eg if on second page, and page height is 500px, then removes\n    // 500px from the top position, so a row with rowTop 600px is displayed at location 100px.\n    // reverse will take the offset away rather than add.\n    private applyPaginationOffset(topPx: number, reverse = false): number {\n        if (this.rowNode.isRowPinned()) {\n            return topPx;\n        }\n\n        const pixelOffset = this.beans.paginationProxy.getPixelOffset();\n        const multiplier = reverse ? 1 : -1;\n\n        return topPx + (pixelOffset * multiplier);\n    }\n\n    private setRowTop(pixels: number): void {\n        // print layout uses normal flow layout for row positioning\n        if (this.printLayout) { return; }\n\n        // need to make sure rowTop is not null, as this can happen if the node was once\n        // visible (ie parent group was expanded) but is now not visible\n        if (_.exists(pixels)) {\n            const afterPaginationPixels = this.applyPaginationOffset(pixels);\n            const afterScalingPixels = this.beans.maxDivHeightScaler.getRealPixelPosition(afterPaginationPixels);\n            const topPx = `${afterScalingPixels}px`;\n\n            if (this.beans.gridOptionsWrapper.isSuppressRowTransform()) {\n                this.eAllRowContainers.forEach(row => row.style.top = topPx);\n            } else {\n                this.eAllRowContainers.forEach(row => row.style.transform = `translateY(${topPx})`);\n            }\n        }\n    }\n\n    // we clear so that the functions are never executed twice\n    public getAndClearNextVMTurnFunctions(): Function[] {\n        const result = this.createSecondPassFuncs;\n        this.createSecondPassFuncs = [];\n        return result;\n    }\n\n    public getRowNode(): RowNode {\n        return this.rowNode;\n    }\n\n    public getRenderedCellForColumn(column: Column): CellComp | undefined {\n        const cellComp = this.cellComps[column.getColId()];\n\n        if (cellComp) {\n            return cellComp;\n        }\n\n        const spanList = Object.keys(this.cellComps)\n            .map(name => this.cellComps[name])\n            .filter(cmp => cmp && cmp.getColSpanningList().indexOf(column) !== -1);\n\n        return spanList.length ? spanList[0] : undefined;\n    }\n\n    private onRowIndexChanged(): void {\n        this.onCellFocusChanged();\n        this.updateRowIndexes();\n    }\n\n    private updateRowIndexes(): void {\n        const rowIndexStr = this.rowNode.getRowIndexString();\n        const rowIsEven = this.rowNode.rowIndex % 2 === 0;\n        const rowIsEvenChanged = this.rowIsEven !== rowIsEven;\n        const headerRowCount = this.beans.gridPanel.headerRootComp.getHeaderRowCount();\n\n        if (rowIsEvenChanged) {\n            this.rowIsEven = rowIsEven;\n        }\n\n        this.eAllRowContainers.forEach(eRow => {\n            eRow.setAttribute('row-index', rowIndexStr);\n            eRow.setAttribute('aria-rowindex', (headerRowCount + this.rowNode.rowIndex + 1).toString());\n\n            if (!rowIsEvenChanged) { return; }\n            _.addOrRemoveCssClass(eRow, 'ag-row-even', rowIsEven);\n            _.addOrRemoveCssClass(eRow, 'ag-row-odd', !rowIsEven);\n        });\n    }\n\n    public ensureDomOrder(): void {\n        const sides = [\n            {\n                el: this.getBodyRowElement(),\n                ct: this.bodyContainerComp\n            },\n            {\n                el: this.getPinnedLeftRowElement(),\n                ct: this.pinnedLeftContainerComp\n            }, {\n                el: this.getPinnedRightRowElement(),\n                ct: this.pinnedRightContainerComp\n            }, {\n                el: this.getFullWidthRowElement(),\n                ct: this.fullWidthContainerComp\n            }\n        ];\n\n        sides.forEach(side => {\n            if (!side.el) { return; }\n            side.ct.ensureDomOrder(side.el);\n        });\n    }\n\n    // returns the pinned left container, either the normal one, or the embedded full with one if exists\n    public getPinnedLeftRowElement(): HTMLElement {\n        return this.ePinnedLeftRow ? this.ePinnedLeftRow : this.eFullWidthRowLeft;\n    }\n\n    // returns the pinned right container, either the normal one, or the embedded full with one if exists\n    public getPinnedRightRowElement(): HTMLElement {\n        return this.ePinnedRightRow ? this.ePinnedRightRow : this.eFullWidthRowRight;\n    }\n\n    // returns the body container, either the normal one, or the embedded full with one if exists\n    public getBodyRowElement(): HTMLElement {\n        return this.eBodyRow ? this.eBodyRow : this.eFullWidthRowBody;\n    }\n\n    // returns the full width container\n    public getFullWidthRowElement(): HTMLElement {\n        return this.eFullWidthRow;\n    }\n\n}\n"]}