{"version":3,"sources":["../../src/ts/rendering/cellEditors/largeTextCellEditor.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,+DAA8D;AAC9D,6CAA4C;AAE5C,qCAAgC;AAQhC;IAAyC,uCAAc;IAWnD;eACI,kBAAM,mBAAmB,CAAC,QAAQ,CAAC;IACvC,CAAC;IAEM,kCAAI,GAAX,UAAY,MAA6B;QACrC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAErB,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,eAAe,CAAC;QAEjD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QACnD,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC;QACtE,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;QACtD,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;QAEtD,IAAI,SAAC,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;YACxB,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;SACjD;QAED,IAAI,CAAC,MAAM,EAAE,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE7E,IAAI,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACnE,CAAC;IAEO,uCAAS,GAAjB,UAAkB,KAAmB;QACjC,IAAM,GAAG,GAAG,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC;QACzC,IAAI,GAAG,IAAI,qBAAS,CAAC,QAAQ;YACzB,GAAG,IAAI,qBAAS,CAAC,MAAM;YACvB,GAAG,IAAI,qBAAS,CAAC,SAAS;YAC1B,GAAG,IAAI,qBAAS,CAAC,QAAQ;YACzB,CAAC,KAAK,CAAC,QAAQ,IAAI,GAAG,IAAI,qBAAS,CAAC,SAAS,CAAC,EAAE,EAAE,kCAAkC;YACpF,KAAK,CAAC,eAAe,EAAE,CAAC;SAC3B;IACL,CAAC;IAEM,8CAAgB,GAAvB;QACI,IAAI,IAAI,CAAC,kBAAkB,EAAE;YACzB,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;SACzB;IACL,CAAC;IAEM,sCAAQ,GAAf;QACI,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACvD,CAAC;IApDc,4BAAQ;IACnB,2EAA2E;IAC3E,0CAA0C;QAC1C,uCAAuC;QACvC,QAAQ,CAAC;IAiDjB,0BAAC;CAtDD,AAsDC,CAtDwC,+BAAc,GAsDtD;AAtDY,kDAAmB","file":"largeTextCellEditor.js","sourcesContent":["import { PopupComponent } from \"../../widgets/popupComponent\";\nimport { Constants } from \"../../constants\";\nimport { ICellEditorComp, ICellEditorParams } from \"../../interfaces/iCellEditor\";\nimport { _ } from \"../../utils\";\n\nexport interface ILargeTextEditorParams extends ICellEditorParams {\n    maxLength: number;\n    rows: number;\n    cols: number;\n}\n\nexport class LargeTextCellEditor extends PopupComponent implements ICellEditorComp {\n    private static TEMPLATE =\n        // tab index is needed so we can focus, which is needed for keyboard events\n        '<div class=\"ag-large-text\" tabindex=\"0\">' +\n        '<div class=\"ag-large-textarea\"></div>' +\n        '</div>';\n\n    private params: ILargeTextEditorParams;\n    private textarea: any;\n    private focusAfterAttached: boolean;\n\n    constructor() {\n        super(LargeTextCellEditor.TEMPLATE);\n    }\n\n    public init(params:ILargeTextEditorParams): void {\n        this.params = params;\n\n        this.focusAfterAttached = params.cellStartedEdit;\n\n        this.textarea = document.createElement(\"textarea\");\n        this.textarea.maxLength = params.maxLength ? params.maxLength : \"200\";\n        this.textarea.cols = params.cols ? params.cols : \"60\";\n        this.textarea.rows = params.rows ? params.rows : \"10\";\n\n        if (_.exists(params.value)) {\n            this.textarea.value = params.value.toString();\n        }\n\n        this.getGui().querySelector('.ag-large-textarea').appendChild(this.textarea);\n\n        this.addGuiEventListener('keydown', this.onKeyDown.bind(this));\n    }\n\n    private onKeyDown(event:KeyboardEvent): void {\n        const key = event.which || event.keyCode;\n        if (key == Constants.KEY_LEFT ||\n            key == Constants.KEY_UP ||\n            key == Constants.KEY_RIGHT ||\n            key == Constants.KEY_DOWN ||\n            (event.shiftKey && key == Constants.KEY_ENTER)) { // shift+enter allows for newlines\n            event.stopPropagation();\n        }\n    }\n\n    public afterGuiAttached(): void {\n        if (this.focusAfterAttached) {\n            this.textarea.focus();\n        }\n    }\n\n    public getValue(): any {\n        return this.params.parseValue(this.textarea.value);\n    }\n}\n"]}