{"version":3,"sources":["../../src/ts/dragAndDrop/dragAndDropService.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AACA,8CAA2F;AAM3F,kCAA6B;AAa7B,IAAY,cAA6D;AAAzE,WAAY,cAAc;IAAG,6DAAS,CAAA;IAAE,+DAAU,CAAA;IAAE,yDAAO,CAAA;IAAE,+DAAU,CAAA;AAAC,CAAC,EAA7D,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAA+C;AA2CzE,IAAY,iBAA8B;AAA1C,WAAY,iBAAiB;IAAG,qDAAE,CAAA;IAAE,yDAAI,CAAA;AAAC,CAAC,EAA9B,iBAAiB,GAAjB,yBAAiB,KAAjB,yBAAiB,QAAa;AAC1C,IAAY,mBAAmC;AAA/C,WAAY,mBAAmB;IAAG,6DAAI,CAAA;IAAE,+DAAK,CAAA;AAAC,CAAC,EAAnC,mBAAmB,GAAnB,2BAAmB,KAAnB,2BAAmB,QAAgB;AAc/C;IAAA;QAyBY,4BAAuB,GAA6D,EAAE,CAAC;QAWvF,gBAAW,GAAiB,EAAE,CAAC;IAiU3C,CAAC;2BArWY,kBAAkB;IAmDnB,iCAAI,GAAZ;QACI,IAAI,CAAC,WAAW,GAAG,SAAC,CAAC,UAAU,CAAC,eAAe,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;QAChF,IAAI,CAAC,SAAS,GAAG,SAAC,CAAC,UAAU,CAAC,eAAe,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;QAC9E,IAAI,CAAC,WAAW,GAAG,SAAC,CAAC,UAAU,CAAC,gBAAgB,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;QACjF,IAAI,CAAC,SAAS,GAAG,SAAC,CAAC,UAAU,CAAC,gBAAgB,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;QAC/E,IAAI,CAAC,SAAS,GAAG,SAAC,CAAC,UAAU,CAAC,gBAAgB,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;QAC/E,IAAI,CAAC,UAAU,GAAG,SAAC,CAAC,UAAU,CAAC,iBAAiB,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;QACjF,IAAI,CAAC,UAAU,GAAG,SAAC,CAAC,UAAU,CAAC,iBAAiB,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;QACjF,IAAI,CAAC,cAAc,GAAG,SAAC,CAAC,UAAU,CAAC,iBAAiB,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;QACrF,IAAI,CAAC,UAAU,GAAG,SAAC,CAAC,UAAU,CAAC,iBAAiB,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;QACjF,IAAI,CAAC,mBAAmB,GAAG,SAAC,CAAC,UAAU,CAAC,gBAAgB,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;IAC7F,CAAC;IAEO,qCAAQ,GAAhB,UAA6C,aAA4B;QACrE,IAAI,CAAC,MAAM,GAAG,aAAa,CAAC,MAAM,CAAC,gCAAgC,CAAC,CAAC;IACzE,CAAC;IAEM,0CAAa,GAApB,UAAqB,UAAsB,EAAE,UAAkB;QAAlB,2BAAA,EAAA,kBAAkB;QAC3D,IAAM,MAAM,GAAuB;YAC/B,QAAQ,EAAE,UAAU,CAAC,QAAQ;YAC7B,eAAe,EAAE,UAAU,CAAC,eAAe;YAC3C,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC;YACpD,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;YACtC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;SACzC,CAAC;QAEF,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,CAAC;QAE9E,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;IACvD,CAAC;IAEM,6CAAgB,GAAvB,UAAwB,UAAsB;QAC1C,IAAM,eAAe,GAAG,SAAC,CAAC,IAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,UAAU,KAAK,UAAU,EAA9B,CAA8B,CAAC,CAAC;QAErG,IAAI,eAAe,EAAE;YACjB,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;YAC1D,SAAC,CAAC,eAAe,CAAC,IAAI,CAAC,uBAAuB,EAAE,eAAe,CAAC,CAAC;SACpE;IACL,CAAC;IAGO,oCAAO,GAAf;QADA,iBAIC;QAFG,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,UAAA,eAAe,IAAI,OAAA,KAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,eAAe,CAAC,MAAM,CAAC,EAAzD,CAAyD,CAAC,CAAC;QACnH,IAAI,CAAC,uBAAuB,CAAC,MAAM,GAAG,CAAC,CAAC;IAC5C,CAAC;IAEM,kCAAK,GAAZ;QACI,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;SAC7C;IACL,CAAC;IAEO,wCAAW,GAAnB,UAAoB,UAAsB,EAAE,UAAsB;QAC9D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC;QAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;QAC9C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC;QAE3D,IAAI,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE;YAC/B,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,CAAC;SACnC;QAED,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAEO,uCAAU,GAAlB,UAAmB,UAAsB;QACrC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QAEtB,IAAI,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE;YAC/B,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,CAAC;SACnC;QAED,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE;YACvD,IAAM,aAAa,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,cAAc,EAAE,UAAU,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YACrG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;SACjD;QAED,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAEO,uCAAU,GAAlB,UAAmB,UAAsB,EAAE,SAAkB;QACzD,IAAM,UAAU,GAAG,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC;QAC3D,IAAM,UAAU,GAAG,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC;QAEzD,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC;QAEhC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QAE/B,8DAA8D;QAC9D,IAAM,UAAU,GAAG,SAAC,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC;QAE7F,IAAI,UAAU,KAAK,IAAI,CAAC,cAAc,EAAE;YACpC,IAAI,CAAC,uBAAuB,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;YAC5E,IAAI,CAAC,uBAAuB,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;YACxF,IAAI,CAAC,cAAc,GAAG,UAAU,CAAC;SACpC;aAAM,IAAI,UAAU,EAAE;YACnB,IAAM,aAAa,GAAG,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;YAC5G,UAAU,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;SACxC;IACL,CAAC;IAEO,oDAAuB,GAA/B,UAAgC,UAAsB,EAAE,UAAsB,EAAE,UAA+B,EAAE,UAA6B,EAAE,SAAkB;QAC9J,IAAI,CAAC,UAAU,EAAE;YAAE,OAAO;SAAE;QAE5B,IAAI,UAAU,CAAC,WAAW,EAAE;YACxB,IAAM,cAAc,GAAG,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;YAE7G,UAAU,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;SAC1C;QAED,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAChF,CAAC;IAEO,oDAAuB,GAA/B,UAAgC,UAAsB,EAAE,UAA+B,EAAE,UAA6B,EAAE,SAAkB;QACtI,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YAAE,OAAO;SAAE;QAErC,IAAI,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE;YACjC,IAAM,cAAc,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,cAAc,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;YAEtH,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;SACnD;QAED,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;IAEO,2DAA8B,GAAtC,UAAuC,UAAsB;QACzD,IAAI,UAAU,GAAG,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC,CAAC;QAC7C,IAAM,mBAAmB,GAAG,UAAU,CAAC,sBAAsB,CAAC,CAAC,CAAC,UAAU,CAAC,sBAAsB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QAE3G,IAAI,mBAAmB,EAAE;YACrB,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;SACvD;QAED,OAAO,UAAU,CAAC;IACtB,CAAC;IAED,2FAA2F;IACnF,gDAAmB,GAA3B,UAA4B,UAAsB,EAAE,UAAsB;QACtE,IAAI,eAAe,GAAG,KAAK,CAAC;QAE5B,IAAI,CAAC,8BAA8B,CAAC,UAAU,CAAC;aAC1C,MAAM,CAAC,UAAA,UAAU,IAAI,OAAA,UAAU,EAAV,CAAU,CAAC,CAAC,2BAA2B;aAC5D,OAAO,CAAC,UAAA,UAAU;YACf,IAAM,IAAI,GAAG,UAAU,CAAC,qBAAqB,EAAE,CAAC;YAEhD,4DAA4D;YAC5D,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;gBACvC,OAAO;aACV;YAED,IAAM,aAAa,GAAG,UAAU,CAAC,OAAO,IAAI,IAAI,CAAC,IAAI,IAAI,UAAU,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC;YAC1F,IAAM,WAAW,GAAG,UAAU,CAAC,OAAO,IAAI,IAAI,CAAC,GAAG,IAAI,UAAU,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC;YAExF,IAAI,aAAa,IAAI,WAAW,EAAE;gBAC9B,eAAe,GAAG,IAAI,CAAC;aAC1B;QACL,CAAC,CAAC,CAAC;QAEP,OAAO,eAAe,IAAI,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAC9E,CAAC;IAEM,0CAAa,GAApB,UAAqB,UAAsB;QACvC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACtC,CAAC;IAEM,mDAAsB,GAA7B,UAA8B,KAAiB;QAC3C,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,EAAE;YAC5C,OAAO,mBAAmB,CAAC,IAAI,CAAC;SACnC;aAAM,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,EAAE;YACnD,OAAO,mBAAmB,CAAC,KAAK,CAAC;SACpC;aAAM;YACH,OAAO,IAAI,CAAC;SACf;IACL,CAAC;IAEM,iDAAoB,GAA3B,UAA4B,KAAiB;QACzC,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,EAAE;YAC5C,OAAO,iBAAiB,CAAC,EAAE,CAAC;SAC/B;aAAM,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,EAAE;YACnD,OAAO,iBAAiB,CAAC,IAAI,CAAC;SACjC;aAAM;YACH,OAAO,IAAI,CAAC;SACf;IACL,CAAC;IAEM,kDAAqB,GAA5B,UAA6B,UAAsB,EAAE,KAAiB,EAAE,UAA+B,EAAE,UAA6B,EAAE,SAAkB;QACtJ,2CAA2C;QAC3C,IAAM,IAAI,GAAG,UAAU,CAAC,YAAY,EAAE,CAAC,qBAAqB,EAAE,CAAC;QAC/D,IAAM,CAAC,GAAG,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;QACpC,IAAM,CAAC,GAAG,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC;QAEnC,OAAO;YACH,KAAK,OAAA;YACL,CAAC,GAAA;YACD,CAAC,GAAA;YACD,UAAU,YAAA;YACV,UAAU,YAAA;YACV,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,SAAS,WAAA;YACT,QAAQ,EAAE,IAAI,CAAC,QAAQ;SAC1B,CAAC;IACN,CAAC;IAEO,0CAAa,GAArB,UAAsB,KAAiB;QACnC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,qBAAqB,EAAE,CAAC;QACtD,IAAM,WAAW,GAAG,SAAS,CAAC,MAAM,CAAC;QAErC,iFAAiF;QACjF,iFAAiF;QACjF,+CAA+C;QAC/C,IAAM,YAAY,GAAG,SAAC,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;QAC1C,IAAM,aAAa,GAAG,SAAC,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC;QAE5C,2CAA2C;QAC3C,IAAI,GAAG,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;QAC1C,gDAAgD;QAChD,IAAI,IAAI,GAAG,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;QAE5B,IAAM,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;QAC1D,IAAM,aAAa,GAAG,MAAM,CAAC,WAAW,IAAI,WAAW,CAAC,eAAe,CAAC,SAAS,CAAC;QAClF,IAAM,aAAa,GAAG,MAAM,CAAC,WAAW,IAAI,WAAW,CAAC,eAAe,CAAC,UAAU,CAAC;QAEnF,uDAAuD;QACvD,IAAI,YAAY,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,YAAY,GAAG,aAAa,CAAC,CAAC,EAAE;YACzF,IAAI,GAAG,YAAY,GAAG,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;SACjE;QAED,IAAI,IAAI,GAAG,CAAC,EAAE;YACV,IAAI,GAAG,CAAC,CAAC;SACZ;QAED,IAAI,aAAa,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,GAAG,aAAa,CAAC,CAAC,EAAE;YAC3F,GAAG,GAAG,aAAa,GAAG,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;SAClE;QAED,IAAI,GAAG,GAAG,CAAC,EAAE;YACT,GAAG,GAAG,CAAC,CAAC;SACX;QAED,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC;QACrC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC;IACvC,CAAC;IAEO,wCAAW,GAAnB;QACI,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,YAAY,EAAE;YAClC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC9C;QAED,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACvB,CAAC;IAEO,wCAAW,GAAnB;QACI,IAAI,CAAC,MAAM,GAAG,SAAC,CAAC,YAAY,CAAC,oBAAkB,CAAC,cAAc,CAAC,CAAC;QACxD,IAAA,yCAAK,CAAiC;QAE9C,IAAI,KAAK,EAAE;YACP,SAAC,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;SACrC;QAED,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,oBAAoB,CAAgB,CAAC;QAEjF,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAExB,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,qBAAqB,CAAgB,CAAC;QAC9E,KAAK,CAAC,SAAS,GAAG,SAAC,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QAEzD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;QAClC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC;QAEhC,IAAM,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;QAC1D,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC,aAAa,CAAC,MAAM,CAAgB,CAAC;QAErE,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACpB,OAAO,CAAC,IAAI,CAAC,0EAA0E,CAAC,CAAC;SAC5F;aAAM;YACH,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC9C;IACL,CAAC;IAEM,yCAAY,GAAnB,UAAoB,QAAgB,EAAE,KAAa;QAAb,sBAAA,EAAA,aAAa;QAC/C,SAAC,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAEhC,IAAI,KAAkB,CAAC;QAEvB,QAAQ,QAAQ,EAAE;YACd,KAAK,oBAAkB,CAAC,QAAQ;gBAAE,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;gBAAC,MAAM;YAChE,KAAK,oBAAkB,CAAC,WAAW;gBAAE,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC;gBAAC,MAAM;YACrE,KAAK,oBAAkB,CAAC,SAAS;gBAAE,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;gBAAC,MAAM;YACjE,KAAK,oBAAkB,CAAC,SAAS;gBAAE,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;gBAAC,MAAM;YACjE,KAAK,oBAAkB,CAAC,UAAU;gBAAE,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;gBAAC,MAAM;YACnE,KAAK,oBAAkB,CAAC,UAAU;gBAAE,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;gBAAC,MAAM;YACnE,KAAK,oBAAkB,CAAC,cAAc;gBAAE,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC;gBAAC,MAAM;YAC3E,KAAK,oBAAkB,CAAC,UAAU;gBAAE,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;gBAAC,MAAM;YACnE,KAAK,oBAAkB,CAAC,gBAAgB;gBAAE,KAAK,GAAG,IAAI,CAAC,mBAAmB,CAAC;gBAAC,MAAM;YAClF;gBAAS,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC;gBAAC,MAAM;SAC5C;QAED,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAEnC,SAAC,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAU,EAAE,wBAAwB,EAAE,KAAK,CAAC,CAAC;IAC5E,CAAC;;IA9Va,8BAAW,GAAG,QAAQ,CAAC;IACvB,2BAAQ,GAAG,KAAK,CAAC;IACjB,4BAAS,GAAG,MAAM,CAAC;IACnB,4BAAS,GAAG,MAAM,CAAC;IACnB,6BAAU,GAAG,OAAO,CAAC;IACrB,6BAAU,GAAG,OAAO,CAAC;IACrB,iCAAc,GAAG,WAAW,CAAC;IAC7B,6BAAU,GAAG,OAAO,CAAC;IACrB,mCAAgB,GAAG,YAAY,CAAC;IAEhC,iCAAc,GACxB,4BAA4B;QAC5B,kEAAkE;QAClE,oCAAoC;QACpC,UAAU;QACV,QAAQ,CAAC;IAnBoB;QAAhC,mBAAS,CAAC,oBAAoB,CAAC;kEAAgD;IACtD;QAAzB,mBAAS,CAAC,aAAa,CAAC;2DAAkC;IACjC;QAAzB,mBAAS,CAAC,aAAa,CAAC;2DAAkC;IA+C3D;QADC,uBAAa;kDAYb;IAED;QAAkB,WAAA,mBAAS,CAAC,eAAe,CAAC,CAAA;sDAE3C;IA0BD;QADC,oBAAU;qDAIV;IA/FQ,kBAAkB;QAD9B,cAAI,CAAC,oBAAoB,CAAC;OACd,kBAAkB,CAqW9B;IAAD,yBAAC;CArWD,AAqWC,IAAA;AArWY,gDAAkB","file":"dragAndDropService.js","sourcesContent":["import { Logger, LoggerFactory } from \"../logger\";\nimport { Qualifier, PostConstruct, Bean, Autowired, PreDestroy } from \"../context/context\";\nimport { Column } from \"../entities/column\";\nimport { GridOptionsWrapper } from \"../gridOptionsWrapper\";\nimport { DragService, DragListenerParams } from \"./dragService\";\nimport { Environment } from \"../environment\";\nimport { RowNode } from \"../entities/rowNode\";\nimport { _ } from \"../utils\";\n\nexport interface DragItem {\n    /** When dragging a row, this contains the row node being dragged */\n    rowNode?: RowNode;\n\n    /** When dragging columns, this contains the columns being dragged */\n    columns?: Column[];\n\n    /** When dragging columns, this contains the visible state of the columns */\n    visibleState?: { [key: string]: boolean };\n}\n\nexport enum DragSourceType { ToolPanel, HeaderCell, RowDrag, ChartPanel }\n\nexport interface DragSource {\n    /** The type of the drag source, used by the drop target to know where the drag originated from. */\n    type: DragSourceType;\n    /** Element which, when dragged, will kick off the DnD process */\n    eElement: HTMLElement;\n    /** If eElement is dragged, then the dragItem is the object that gets passed around. */\n    getDragItem: () => DragItem;\n    /** This name appears in the ghost icon when dragging */\n    dragItemName: string | null;\n    /** The drop target associated with this dragSource. When dragging starts, this target does not get an\n     * onDragEnter event. */\n    dragSourceDropTarget?: DropTarget;\n    /** After how many pixels of dragging should the drag operation start. Default is 4. */\n    dragStartPixels?: number;\n    /** Callback for drag started */\n    onDragStarted?: () => void;\n    /** Callback for drag stopped */\n    onDragStopped?: () => void;\n}\n\nexport interface DropTarget {\n    /** The main container that will get the drop. */\n    getContainer(): HTMLElement;\n    /** If any secondary containers. For example when moving columns in ag-Grid, we listen for drops\n     * in the header as well as the body (main rows and pinned rows) of the grid. */\n    getSecondaryContainers?(): HTMLElement[];\n    /** Icon to show when drag is over */\n    getIconName?(): string;\n\n    isInterestedIn(type: DragSourceType): boolean;\n\n    /** Callback for when drag enters */\n    onDragEnter?(params: DraggingEvent): void;\n    /** Callback for when drag leaves */\n    onDragLeave?(params: DraggingEvent): void;\n    /** Callback for when dragging */\n    onDragging?(params: DraggingEvent): void;\n    /** Callback for when drag stops */\n    onDragStop?(params: DraggingEvent): void;\n}\n\nexport enum VerticalDirection { Up, Down }\nexport enum HorizontalDirection { Left, Right }\n\nexport interface DraggingEvent {\n    event: MouseEvent;\n    x: number;\n    y: number;\n    vDirection: VerticalDirection;\n    hDirection: HorizontalDirection;\n    dragSource: DragSource;\n    dragItem: DragItem;\n    fromNudge: boolean;\n}\n\n@Bean('dragAndDropService')\nexport class DragAndDropService {\n\n    @Autowired('gridOptionsWrapper') private gridOptionsWrapper: GridOptionsWrapper;\n    @Autowired('dragService') private dragService: DragService;\n    @Autowired('environment') private environment: Environment;\n\n    public static ICON_PINNED = 'pinned';\n    public static ICON_ADD = 'add';\n    public static ICON_MOVE = 'move';\n    public static ICON_LEFT = 'left';\n    public static ICON_RIGHT = 'right';\n    public static ICON_GROUP = 'group';\n    public static ICON_AGGREGATE = 'aggregate';\n    public static ICON_PIVOT = 'pivot';\n    public static ICON_NOT_ALLOWED = 'notAllowed';\n\n    public static GHOST_TEMPLATE =\n        '<div class=\"ag-dnd-ghost\">' +\n        '  <span class=\"ag-dnd-ghost-icon ag-shake-left-to-right\"></span>' +\n        '  <div class=\"ag-dnd-ghost-label\">' +\n        '  </div>' +\n        '</div>';\n\n    private logger: Logger;\n\n    private dragSourceAndParamsList: { params: DragListenerParams, dragSource: DragSource }[] = [];\n\n    private dragItem: DragItem;\n    private eventLastTime: MouseEvent;\n    private dragSource: DragSource;\n    private dragging: boolean;\n\n    private eGhost: HTMLElement;\n    private eGhostParent: HTMLElement;\n    private eGhostIcon: HTMLElement;\n\n    private dropTargets: DropTarget[] = [];\n    private lastDropTarget: DropTarget;\n\n    private ePinnedIcon: HTMLElement;\n    private ePlusIcon: HTMLElement;\n    private eHiddenIcon: HTMLElement;\n    private eMoveIcon: HTMLElement;\n    private eLeftIcon: HTMLElement;\n    private eRightIcon: HTMLElement;\n    private eGroupIcon: HTMLElement;\n    private eAggregateIcon: HTMLElement;\n    private ePivotIcon: HTMLElement;\n    private eDropNotAllowedIcon: HTMLElement;\n\n    @PostConstruct\n    private init(): void {\n        this.ePinnedIcon = _.createIcon('columnMovePin', this.gridOptionsWrapper, null);\n        this.ePlusIcon = _.createIcon('columnMoveAdd', this.gridOptionsWrapper, null);\n        this.eHiddenIcon = _.createIcon('columnMoveHide', this.gridOptionsWrapper, null);\n        this.eMoveIcon = _.createIcon('columnMoveMove', this.gridOptionsWrapper, null);\n        this.eLeftIcon = _.createIcon('columnMoveLeft', this.gridOptionsWrapper, null);\n        this.eRightIcon = _.createIcon('columnMoveRight', this.gridOptionsWrapper, null);\n        this.eGroupIcon = _.createIcon('columnMoveGroup', this.gridOptionsWrapper, null);\n        this.eAggregateIcon = _.createIcon('columnMoveValue', this.gridOptionsWrapper, null);\n        this.ePivotIcon = _.createIcon('columnMovePivot', this.gridOptionsWrapper, null);\n        this.eDropNotAllowedIcon = _.createIcon('dropNotAllowed', this.gridOptionsWrapper, null);\n    }\n\n    private setBeans(@Qualifier('loggerFactory') loggerFactory: LoggerFactory) {\n        this.logger = loggerFactory.create('OldToolPanelDragAndDropService');\n    }\n\n    public addDragSource(dragSource: DragSource, allowTouch = false): void {\n        const params: DragListenerParams = {\n            eElement: dragSource.eElement,\n            dragStartPixels: dragSource.dragStartPixels,\n            onDragStart: this.onDragStart.bind(this, dragSource),\n            onDragStop: this.onDragStop.bind(this),\n            onDragging: this.onDragging.bind(this)\n        };\n\n        this.dragSourceAndParamsList.push({ params: params, dragSource: dragSource });\n\n        this.dragService.addDragSource(params, allowTouch);\n    }\n\n    public removeDragSource(dragSource: DragSource): void {\n        const sourceAndParams = _.find(this.dragSourceAndParamsList, item => item.dragSource === dragSource);\n\n        if (sourceAndParams) {\n            this.dragService.removeDragSource(sourceAndParams.params);\n            _.removeFromArray(this.dragSourceAndParamsList, sourceAndParams);\n        }\n    }\n\n    @PreDestroy\n    private destroy(): void {\n        this.dragSourceAndParamsList.forEach(sourceAndParams => this.dragService.removeDragSource(sourceAndParams.params));\n        this.dragSourceAndParamsList.length = 0;\n    }\n\n    public nudge(): void {\n        if (this.dragging) {\n            this.onDragging(this.eventLastTime, true);\n        }\n    }\n\n    private onDragStart(dragSource: DragSource, mouseEvent: MouseEvent): void {\n        this.dragging = true;\n        this.dragSource = dragSource;\n        this.eventLastTime = mouseEvent;\n        this.dragItem = this.dragSource.getDragItem();\n        this.lastDropTarget = this.dragSource.dragSourceDropTarget;\n\n        if (this.dragSource.onDragStarted) {\n            this.dragSource.onDragStarted();\n        }\n\n        this.createGhost();\n    }\n\n    private onDragStop(mouseEvent: MouseEvent): void {\n        this.eventLastTime = null;\n        this.dragging = false;\n\n        if (this.dragSource.onDragStopped) {\n            this.dragSource.onDragStopped();\n        }\n\n        if (this.lastDropTarget && this.lastDropTarget.onDragStop) {\n            const draggingEvent = this.createDropTargetEvent(this.lastDropTarget, mouseEvent, null, null, false);\n            this.lastDropTarget.onDragStop(draggingEvent);\n        }\n\n        this.lastDropTarget = null;\n        this.dragItem = null;\n        this.removeGhost();\n    }\n\n    private onDragging(mouseEvent: MouseEvent, fromNudge: boolean): void {\n        const hDirection = this.getHorizontalDirection(mouseEvent);\n        const vDirection = this.getVerticalDirection(mouseEvent);\n\n        this.eventLastTime = mouseEvent;\n\n        this.positionGhost(mouseEvent);\n\n        // check if mouseEvent intersects with any of the drop targets\n        const dropTarget = _.find(this.dropTargets, this.isMouseOnDropTarget.bind(this, mouseEvent));\n\n        if (dropTarget !== this.lastDropTarget) {\n            this.leaveLastTargetIfExists(mouseEvent, hDirection, vDirection, fromNudge);\n            this.enterDragTargetIfExists(dropTarget, mouseEvent, hDirection, vDirection, fromNudge);\n            this.lastDropTarget = dropTarget;\n        } else if (dropTarget) {\n            const draggingEvent = this.createDropTargetEvent(dropTarget, mouseEvent, hDirection, vDirection, fromNudge);\n            dropTarget.onDragging(draggingEvent);\n        }\n    }\n\n    private enterDragTargetIfExists(dropTarget: DropTarget, mouseEvent: MouseEvent, hDirection: HorizontalDirection, vDirection: VerticalDirection, fromNudge: boolean): void {\n        if (!dropTarget) { return; }\n\n        if (dropTarget.onDragEnter) {\n            const dragEnterEvent = this.createDropTargetEvent(dropTarget, mouseEvent, hDirection, vDirection, fromNudge);\n\n            dropTarget.onDragEnter(dragEnterEvent);\n        }\n\n        this.setGhostIcon(dropTarget.getIconName ? dropTarget.getIconName() : null);\n    }\n\n    private leaveLastTargetIfExists(mouseEvent: MouseEvent, hDirection: HorizontalDirection, vDirection: VerticalDirection, fromNudge: boolean): void {\n        if (!this.lastDropTarget) { return; }\n\n        if (this.lastDropTarget.onDragLeave) {\n            const dragLeaveEvent = this.createDropTargetEvent(this.lastDropTarget, mouseEvent, hDirection, vDirection, fromNudge);\n\n            this.lastDropTarget.onDragLeave(dragLeaveEvent);\n        }\n\n        this.setGhostIcon(null);\n    }\n\n    private getAllContainersFromDropTarget(dropTarget: DropTarget): HTMLElement[] {\n        let containers = [dropTarget.getContainer()];\n        const secondaryContainers = dropTarget.getSecondaryContainers ? dropTarget.getSecondaryContainers() : null;\n\n        if (secondaryContainers) {\n            containers = containers.concat(secondaryContainers);\n        }\n\n        return containers;\n    }\n\n    // checks if the mouse is on the drop target. it checks eContainer and eSecondaryContainers\n    private isMouseOnDropTarget(mouseEvent: MouseEvent, dropTarget: DropTarget): boolean {\n        let mouseOverTarget = false;\n\n        this.getAllContainersFromDropTarget(dropTarget)\n            .filter(eContainer => eContainer) // secondary can be missing\n            .forEach(eContainer => {\n                const rect = eContainer.getBoundingClientRect();\n\n                // if element is not visible, then width and height are zero\n                if (rect.width === 0 || rect.height === 0) {\n                    return;\n                }\n\n                const horizontalFit = mouseEvent.clientX >= rect.left && mouseEvent.clientX <= rect.right;\n                const verticalFit = mouseEvent.clientY >= rect.top && mouseEvent.clientY <= rect.bottom;\n\n                if (horizontalFit && verticalFit) {\n                    mouseOverTarget = true;\n                }\n            });\n\n        return mouseOverTarget && dropTarget.isInterestedIn(this.dragSource.type);\n    }\n\n    public addDropTarget(dropTarget: DropTarget) {\n        this.dropTargets.push(dropTarget);\n    }\n\n    public getHorizontalDirection(event: MouseEvent): HorizontalDirection {\n        if (this.eventLastTime.clientX > event.clientX) {\n            return HorizontalDirection.Left;\n        } else if (this.eventLastTime.clientX < event.clientX) {\n            return HorizontalDirection.Right;\n        } else {\n            return null;\n        }\n    }\n\n    public getVerticalDirection(event: MouseEvent): VerticalDirection {\n        if (this.eventLastTime.clientY > event.clientY) {\n            return VerticalDirection.Up;\n        } else if (this.eventLastTime.clientY < event.clientY) {\n            return VerticalDirection.Down;\n        } else {\n            return null;\n        }\n    }\n\n    public createDropTargetEvent(dropTarget: DropTarget, event: MouseEvent, hDirection: HorizontalDirection, vDirection: VerticalDirection, fromNudge: boolean): DraggingEvent {\n        // localise x and y to the target component\n        const rect = dropTarget.getContainer().getBoundingClientRect();\n        const x = event.clientX - rect.left;\n        const y = event.clientY - rect.top;\n\n        return {\n            event,\n            x,\n            y,\n            vDirection,\n            hDirection,\n            dragSource: this.dragSource,\n            fromNudge,\n            dragItem: this.dragItem\n        };\n    }\n\n    private positionGhost(event: MouseEvent): void {\n        const ghostRect = this.eGhost.getBoundingClientRect();\n        const ghostHeight = ghostRect.height;\n\n        // for some reason, without the '-2', it still overlapped by 1 or 2 pixels, which\n        // then brought in scrollbars to the browser. no idea why, but putting in -2 here\n        // works around it which is good enough for me.\n        const browserWidth = _.getBodyWidth() - 2;\n        const browserHeight = _.getBodyHeight() - 2;\n\n        // put ghost vertically in middle of cursor\n        let top = event.pageY - (ghostHeight / 2);\n        // horizontally, place cursor just right of icon\n        let left = event.pageX - 30;\n\n        const usrDocument = this.gridOptionsWrapper.getDocument();\n        const windowScrollY = window.pageYOffset || usrDocument.documentElement.scrollTop;\n        const windowScrollX = window.pageXOffset || usrDocument.documentElement.scrollLeft;\n\n        // check ghost is not positioned outside of the browser\n        if (browserWidth > 0 && ((left + this.eGhost.clientWidth) > (browserWidth + windowScrollX))) {\n            left = browserWidth + windowScrollX - this.eGhost.clientWidth;\n        }\n\n        if (left < 0) {\n            left = 0;\n        }\n\n        if (browserHeight > 0 && ((top + this.eGhost.clientHeight) > (browserHeight + windowScrollY))) {\n            top = browserHeight + windowScrollY - this.eGhost.clientHeight;\n        }\n\n        if (top < 0) {\n            top = 0;\n        }\n\n        this.eGhost.style.left = left + 'px';\n        this.eGhost.style.top = top + 'px';\n    }\n\n    private removeGhost(): void {\n        if (this.eGhost && this.eGhostParent) {\n            this.eGhostParent.removeChild(this.eGhost);\n        }\n\n        this.eGhost = null;\n    }\n\n    private createGhost(): void {\n        this.eGhost = _.loadTemplate(DragAndDropService.GHOST_TEMPLATE);\n        const { theme } = this.environment.getTheme();\n\n        if (theme) {\n            _.addCssClass(this.eGhost, theme);\n        }\n\n        this.eGhostIcon = this.eGhost.querySelector('.ag-dnd-ghost-icon') as HTMLElement;\n\n        this.setGhostIcon(null);\n\n        const eText = this.eGhost.querySelector('.ag-dnd-ghost-label') as HTMLElement;\n        eText.innerHTML = _.escape(this.dragSource.dragItemName);\n\n        this.eGhost.style.height = '25px';\n        this.eGhost.style.top = '20px';\n        this.eGhost.style.left = '20px';\n\n        const usrDocument = this.gridOptionsWrapper.getDocument();\n        this.eGhostParent = usrDocument.querySelector('body') as HTMLElement;\n\n        if (!this.eGhostParent) {\n            console.warn('ag-Grid: could not find document body, it is needed for dragging columns');\n        } else {\n            this.eGhostParent.appendChild(this.eGhost);\n        }\n    }\n\n    public setGhostIcon(iconName: string, shake = false): void {\n        _.clearElement(this.eGhostIcon);\n\n        let eIcon: HTMLElement;\n\n        switch (iconName) {\n            case DragAndDropService.ICON_ADD: eIcon = this.ePlusIcon; break;\n            case DragAndDropService.ICON_PINNED: eIcon = this.ePinnedIcon; break;\n            case DragAndDropService.ICON_MOVE: eIcon = this.eMoveIcon; break;\n            case DragAndDropService.ICON_LEFT: eIcon = this.eLeftIcon; break;\n            case DragAndDropService.ICON_RIGHT: eIcon = this.eRightIcon; break;\n            case DragAndDropService.ICON_GROUP: eIcon = this.eGroupIcon; break;\n            case DragAndDropService.ICON_AGGREGATE: eIcon = this.eAggregateIcon; break;\n            case DragAndDropService.ICON_PIVOT: eIcon = this.ePivotIcon; break;\n            case DragAndDropService.ICON_NOT_ALLOWED: eIcon = this.eDropNotAllowedIcon; break;\n            default: eIcon = this.eHiddenIcon; break;\n        }\n\n        this.eGhostIcon.appendChild(eIcon);\n\n        _.addOrRemoveCssClass(this.eGhostIcon, 'ag-shake-left-to-right', shake);\n    }\n}\n"]}