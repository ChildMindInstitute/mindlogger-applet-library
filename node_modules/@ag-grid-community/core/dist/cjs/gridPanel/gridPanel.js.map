{"version":3,"sources":["../../src/ts/gridPanel/gridPanel.ts"],"names":[],"mappings":"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","file":"gridPanel.js","sourcesContent":["import {GridOptionsWrapper} from \"../gridOptionsWrapper\";\nimport {ColumnController} from \"../columnController/columnController\";\nimport {ColumnApi} from \"../columnController/columnApi\";\nimport {RowRenderer} from \"../rendering/rowRenderer\";\nimport {Autowired, Optional, PostConstruct} from \"../context/context\";\nimport {EventService} from \"../eventService\";\nimport {BodyHeightChangedEvent, BodyScrollEvent, CellKeyDownEvent, CellKeyPressEvent, Events} from \"../events\";\nimport {DragListenerParams, DragService} from \"../dragAndDrop/dragService\";\nimport {IRangeController} from \"../interfaces/iRangeController\";\nimport {Constants} from \"../constants\";\nimport {MouseEventService} from \"./mouseEventService\";\nimport {IClipboardService} from \"../interfaces/iClipboardService\";\nimport {FocusedCellController} from \"../focusedCellController\";\nimport {IContextMenuFactory} from \"../interfaces/iContextMenuFactory\";\nimport {ScrollVisibleService, SetScrollsVisibleParams} from \"./scrollVisibleService\";\nimport {Column} from \"../entities/column\";\nimport {RowContainerComponent} from \"../rendering/rowContainerComponent\";\nimport {RowNode} from \"../entities/rowNode\";\nimport {PaginationProxy} from \"../pagination/paginationProxy\";\nimport {PaginationAutoPageSizeService} from \"../pagination/paginationAutoPageSizeService\";\nimport {PopupEditorWrapper} from \"../rendering/cellEditors/popupEditorWrapper\";\nimport {AlignedGridsService} from \"../alignedGridsService\";\nimport {GridApi} from \"../gridApi\";\nimport {AnimationFrameService} from \"../misc/animationFrameService\";\nimport {RowComp} from \"../rendering/rowComp\";\nimport {NavigationService} from \"./navigationService\";\nimport {CellComp} from \"../rendering/cellComp\";\nimport {ValueService} from \"../valueService/valueService\";\nimport {LongTapEvent, TouchListener} from \"../widgets/touchListener\";\nimport {DragAndDropService} from \"../dragAndDrop/dragAndDropService\";\nimport {RowDragFeature} from \"./rowDragFeature\";\nimport {MaxDivHeightScaler} from \"../rendering/maxDivHeightScaler\";\nimport {OverlayWrapperComponent} from \"../rendering/overlays/overlayWrapperComponent\";\nimport {Component} from \"../widgets/component\";\nimport {AutoHeightCalculator} from \"../rendering/autoHeightCalculator\";\nimport {ColumnAnimationService} from \"../rendering/columnAnimationService\";\nimport {AutoWidthCalculator} from \"../rendering/autoWidthCalculator\";\nimport {Beans} from \"../rendering/beans\";\nimport {RefSelector} from \"../widgets/componentAnnotations\";\nimport {HeaderRootComp} from \"../headerRendering/headerRootComp\";\nimport {ResizeObserverService} from \"../misc/resizeObserverService\";\nimport {_} from \"../utils\";\nimport {PinnedRowModel} from \"../pinnedRowModel/pinnedRowModel\";\nimport {ModuleRegistry} from \"../modules/moduleRegistry\";\nimport {ModuleNames} from \"../modules/moduleNames\";\nimport {UndoRedoService} from \"../undoRedo/undoRedoService\";\n\n// in the html below, it is important that there are no white space between some of the divs, as if there is white space,\n// it won't render correctly in safari, as safari renders white space as a gap\nconst GRID_PANEL_NORMAL_TEMPLATE =\n    `<div class=\"ag-root ag-unselectable\" role=\"grid\" unselectable=\"on\">\n        <ag-header-root ref=\"headerRoot\" unselectable=\"on\"></ag-header-root>\n        <div class=\"ag-floating-top\" ref=\"eTop\" role=\"presentation\" unselectable=\"on\">\n            <div class=\"ag-pinned-left-floating-top\" ref=\"eLeftTop\" role=\"presentation\" unselectable=\"on\"></div>\n            <div class=\"ag-floating-top-viewport\" ref=\"eTopViewport\" role=\"presentation\" unselectable=\"on\">\n                <div class=\"ag-floating-top-container\" ref=\"eTopContainer\" role=\"presentation\" unselectable=\"on\"></div>\n            </div>\n            <div class=\"ag-pinned-right-floating-top\" ref=\"eRightTop\" role=\"presentation\" unselectable=\"on\"></div>\n            <div class=\"ag-floating-top-full-width-container\" ref=\"eTopFullWidthContainer\" role=\"presentation\" unselectable=\"on\"></div>\n        </div>\n        <div class=\"ag-body-viewport\" ref=\"eBodyViewport\" role=\"presentation\" unselectable=\"on\">\n            <div class=\"ag-pinned-left-cols-container\" ref=\"eLeftContainer\" role=\"presentation\" unselectable=\"on\"></div>\n            <div class=\"ag-center-cols-clipper\" ref=\"eCenterColsClipper\" role=\"presentation\" unselectable=\"on\">\n                <div class=\"ag-center-cols-viewport\" ref=\"eCenterViewport\" role=\"presentation\" unselectable=\"on\">\n                    <div class=\"ag-center-cols-container\" ref=\"eCenterContainer\" role=\"rowgroup\" unselectable=\"on\"></div>\n                </div>\n            </div>\n            <div class=\"ag-pinned-right-cols-container\" ref=\"eRightContainer\" role=\"presentation\" unselectable=\"on\"></div>\n            <div class=\"ag-full-width-container\" ref=\"eFullWidthContainer\" role=\"presentation\" unselectable=\"on\"></div>\n        </div>\n        <div class=\"ag-floating-bottom\" ref=\"eBottom\" role=\"presentation\" unselectable=\"on\">\n            <div class=\"ag-pinned-left-floating-bottom\" ref=\"eLeftBottom\" role=\"presentation\" unselectable=\"on\"></div>\n            <div class=\"ag-floating-bottom-viewport\" ref=\"eBottomViewport\" role=\"presentation\" unselectable=\"on\">\n                <div class=\"ag-floating-bottom-container\" ref=\"eBottomContainer\" role=\"presentation\" unselectable=\"on\"></div>\n            </div>\n            <div class=\"ag-pinned-right-floating-bottom\" ref=\"eRightBottom\" role=\"presentation\" unselectable=\"on\"></div>\n            <div class=\"ag-floating-bottom-full-width-container\" ref=\"eBottomFullWidthContainer\" role=\"presentation\" unselectable=\"on\"></div>\n        </div>\n        <div class=\"ag-body-horizontal-scroll\" ref=\"eHorizontalScrollBody\" aria-hidden=\"true\">\n            <div class=\"ag-horizontal-left-spacer\" ref=\"eHorizontalLeftSpacer\"></div>\n            <div class=\"ag-body-horizontal-scroll-viewport\" ref=\"eBodyHorizontalScrollViewport\">\n                <div class=\"ag-body-horizontal-scroll-container\" ref=\"eBodyHorizontalScrollContainer\"></div>\n            </div>\n            <div class=\"ag-horizontal-right-spacer\" ref=\"eHorizontalRightSpacer\"></div>\n        </div>\n        <ag-overlay-wrapper ref=\"overlayWrapper\"></ag-overlay-wrapper>\n    </div>`;\n\nexport type RowContainerComponentNames =\n    'fullWidth' |\n    'body' |\n    'pinnedLeft' |\n    'pinnedRight' |\n    'floatingTop' |\n    'floatingTopPinnedLeft' |\n    'floatingTopPinnedRight' |\n    'floatingTopFullWidth' |\n    'floatingBottom' |\n    'floatingBottomPinnedLeft' |\n    'floatingBottomPinnedRight' |\n    'floatingBottomFullWith';\n\nexport type RowContainerComponents = { [K in RowContainerComponentNames]: RowContainerComponent };\n\nexport class GridPanel extends Component {\n\n    @Autowired('alignedGridsService') private alignedGridsService: AlignedGridsService;\n    @Autowired('gridOptionsWrapper') private gridOptionsWrapper: GridOptionsWrapper;\n    @Autowired('columnController') private columnController: ColumnController;\n    @Autowired('rowRenderer') private rowRenderer: RowRenderer;\n    @Autowired('pinnedRowModel') private pinnedRowModel: PinnedRowModel;\n    @Autowired('eventService') private eventService: EventService;\n    @Autowired('animationFrameService') private animationFrameService: AnimationFrameService;\n    @Autowired('navigationService') private navigationService: NavigationService;\n    @Autowired('autoHeightCalculator') private autoHeightCalculator: AutoHeightCalculator;\n    @Autowired('columnAnimationService') private columnAnimationService: ColumnAnimationService;\n    @Autowired('autoWidthCalculator') private autoWidthCalculator: AutoWidthCalculator;\n    @Autowired('paginationAutoPageSizeService') private paginationAutoPageSizeService: PaginationAutoPageSizeService;\n    @Autowired('beans') private beans: Beans;\n    @Autowired('paginationProxy') private paginationProxy: PaginationProxy;\n    @Autowired('columnApi') private columnApi: ColumnApi;\n    @Autowired('gridApi') private gridApi: GridApi;\n    @Autowired('dragService') private dragService: DragService;\n    @Autowired('mouseEventService') private mouseEventService: MouseEventService;\n    @Autowired('focusedCellController') private focusedCellController: FocusedCellController;\n    @Autowired('$scope') private $scope: any;\n    @Autowired('scrollVisibleService') private scrollVisibleService: ScrollVisibleService;\n    @Autowired('valueService') private valueService: ValueService;\n    @Autowired('dragAndDropService') private dragAndDropService: DragAndDropService;\n    @Autowired('maxDivHeightScaler') private heightScaler: MaxDivHeightScaler;\n    @Autowired('resizeObserverService') private resizeObserverService: ResizeObserverService;\n    @Autowired('undoRedoService') private undoRedoService: UndoRedoService;\n\n    @Optional('rangeController') private rangeController: IRangeController;\n    @Optional('contextMenuFactory') private contextMenuFactory: IContextMenuFactory;\n    @Optional('clipboardService') private clipboardService: IClipboardService;\n\n    @RefSelector('eBodyViewport') private eBodyViewport: HTMLElement;\n    @RefSelector('eCenterContainer') private eCenterContainer: HTMLElement;\n    @RefSelector('eCenterViewport') private eCenterViewport: HTMLElement;\n    @RefSelector('eLeftContainer') private eLeftContainer: HTMLElement;\n    @RefSelector('eRightContainer') private eRightContainer: HTMLElement;\n    @RefSelector('eCenterColsClipper') private eCenterColsClipper: HTMLElement;\n\n    // fake horizontal scroller\n    @RefSelector('eHorizontalScrollBody') private eHorizontalScrollBody: HTMLElement;\n    @RefSelector('eHorizontalLeftSpacer') private eHorizontalLeftSpacer: HTMLElement;\n    @RefSelector('eHorizontalRightSpacer') private eHorizontalRightSpacer: HTMLElement;\n    @RefSelector('eBodyHorizontalScrollViewport') private eBodyHorizontalScrollViewport: HTMLElement;\n    @RefSelector('eBodyHorizontalScrollContainer') private eBodyHorizontalScrollContainer: HTMLElement;\n\n    @RefSelector('eFullWidthContainer') private eFullWidthContainer: HTMLElement;\n\n    @RefSelector('eTop') private eTop: HTMLElement;\n    @RefSelector('eLeftTop') private eLeftTop: HTMLElement;\n    @RefSelector('eRightTop') private eRightTop: HTMLElement;\n    @RefSelector('eTopContainer') private eTopContainer: HTMLElement;\n    @RefSelector('eTopViewport') private eTopViewport: HTMLElement;\n    @RefSelector('eTopFullWidthContainer') private eTopFullWidthContainer: HTMLElement;\n\n    @RefSelector('eBottom') private eBottom: HTMLElement;\n    @RefSelector('eLeftBottom') private eLeftBottom: HTMLElement;\n    @RefSelector('eRightBottom') private eRightBottom: HTMLElement;\n    @RefSelector('eBottomContainer') private eBottomContainer: HTMLElement;\n    @RefSelector('eBottomViewport') private eBottomViewport: HTMLElement;\n    @RefSelector('eBottomFullWidthContainer') private eBottomFullWidthContainer: HTMLElement;\n\n    @RefSelector('headerRoot') headerRootComp: HeaderRootComp;\n    @RefSelector('overlayWrapper') private overlayWrapper: OverlayWrapperComponent;\n\n    private rowContainerComponents: RowContainerComponents;\n    private eAllCellContainers: HTMLElement[];\n\n    private scrollLeft = -1;\n    private scrollTop = -1;\n\n    private lastHorizontalScrollElement: HTMLElement | undefined | null;\n    private readonly resetLastHorizontalScrollElementDebounce: () => void;\n\n    private bodyHeight: number;\n\n    // properties we use a lot, so keep reference\n    private enableRtl: boolean;\n    private scrollWidth: number;\n\n    // used to track if pinned panels are showing, so we can turn them off if not\n    private pinningRight: boolean;\n    private pinningLeft: boolean;\n\n    private printLayout: boolean;\n\n    constructor() {\n        super(GRID_PANEL_NORMAL_TEMPLATE);\n        this.resetLastHorizontalScrollElementDebounce = _.debounce(this.resetLastHorizontalScrollElement.bind(this), 500);\n    }\n\n    public getVScrollPosition(): { top: number, bottom: number } {\n        const result = {\n            top: this.eBodyViewport.scrollTop,\n            bottom: this.eBodyViewport.scrollTop + this.eBodyViewport.offsetHeight\n        };\n        return result;\n    }\n\n    public getHScrollPosition(): { left: number, right: number } {\n        const result = {\n            left: this.eCenterViewport.scrollLeft,\n            right: this.eCenterViewport.scrollLeft + this.eCenterViewport.offsetWidth\n        };\n        return result;\n    }\n\n    private onRowDataChanged(): void {\n        this.showOrHideOverlay();\n    }\n\n    private showOrHideOverlay(): void {\n        const isEmpty = this.paginationProxy.isEmpty();\n        const isSuppressNoRowsOverlay = this.gridOptionsWrapper.isSuppressNoRowsOverlay();\n        const method = isEmpty && !isSuppressNoRowsOverlay ? 'showNoRowsOverlay' : 'hideOverlay';\n\n        this[method]();\n    }\n\n    private onNewColumnsLoaded(): void {\n        // hide overlay if columns and rows exist, this can happen if columns are loaded after data.\n        // this problem exists before of the race condition between the services (column controller in this case)\n        // and the view (grid panel). if the model beans were all initialised first, and then the view beans second,\n        // this race condition would not happen.\n        if (this.columnController.isReady() && !this.paginationProxy.isEmpty()) {\n            this.hideOverlay();\n        }\n    }\n\n    @PostConstruct\n    private init() {\n        this.scrollWidth = this.gridOptionsWrapper.getScrollbarWidth();\n        this.enableRtl = this.gridOptionsWrapper.isEnableRtl();\n        this.printLayout = this.gridOptionsWrapper.getDomLayout() === Constants.DOM_LAYOUT_PRINT;\n\n        // these elements have different CSS when layout changes\n        this.gridOptionsWrapper.addLayoutElement(this.getGui());\n        this.gridOptionsWrapper.addLayoutElement(this.eBodyViewport);\n\n        this.suppressScrollOnFloatingRow();\n        this.setupRowAnimationCssClass();\n        this.buildRowContainerComponents();\n\n        this.addEventListeners();\n        this.addDragListeners();\n\n        this.addScrollListener();\n\n        if (this.gridOptionsWrapper.isRowModelDefault() && !this.gridOptionsWrapper.getRowData()) {\n            this.showLoadingOverlay();\n        }\n        this.setCellTextSelection(this.gridOptionsWrapper.isEnableCellTextSelect());\n\n        this.setPinnedContainerSize();\n        this.setHeaderAndFloatingHeights();\n        this.disableBrowserDragging();\n        this.addMouseListeners();\n        this.addKeyboardEvents();\n        this.addBodyViewportListener();\n        this.addStopEditingWhenGridLosesFocus();\n        this.mockContextMenuForIPad();\n        this.addRowDragListener();\n\n        if (this.$scope) {\n            this.addAngularApplyCheck();\n        }\n\n        this.onDisplayedColumnsWidthChanged();\n\n        this.gridApi.registerGridComp(this);\n        this.alignedGridsService.registerGridComp(this);\n        this.headerRootComp.registerGridComp(this);\n        this.navigationService.registerGridComp(this);\n        this.heightScaler.registerGridComp(this);\n        this.autoHeightCalculator.registerGridComp(this);\n        this.columnAnimationService.registerGridComp(this);\n        this.autoWidthCalculator.registerGridComp(this);\n        this.paginationAutoPageSizeService.registerGridComp(this);\n        this.beans.registerGridComp(this);\n        this.rowRenderer.registerGridComp(this);\n\n        if (this.rangeController) {\n            this.rangeController.registerGridComp(this);\n        }\n\n        [this.eCenterViewport, this.eBodyViewport].forEach(viewport => {\n            const unsubscribeFromResize = this.resizeObserverService.observeResize(\n                viewport, this.onCenterViewportResized.bind(this));\n            this.addDestroyFunc(() => unsubscribeFromResize());\n        });\n    }\n\n    private onDomLayoutChanged(): void {\n        const newPrintLayout = this.gridOptionsWrapper.getDomLayout() === Constants.DOM_LAYOUT_PRINT;\n\n        if (this.printLayout !== newPrintLayout) {\n            this.printLayout = newPrintLayout;\n            this.setWidthsOfContainers();\n            // pinned containers are always hidden for print layout\n            this.setPinnedContainerSize();\n        }\n    }\n\n    private onCenterViewportResized(): void {\n        if (_.isVisible(this.eCenterViewport)) {\n            this.checkViewportAndScrolls();\n            this.columnController.refreshFlexedColumns(\n                this.getCenterWidth()\n            );\n        } else {\n            this.bodyHeight = 0;\n        }\n    }\n\n    // used by ColumnAnimationService\n    public setColumnMovingCss(moving: boolean): void {\n        this.addOrRemoveCssClass('ag-column-moving', moving);\n    }\n\n    public setCellTextSelection(selectable: boolean = false): void {\n        [this.eTop, this.eBodyViewport, this.eBottom]\n            .forEach(ct => _.addOrRemoveCssClass(ct, 'ag-selectable', selectable));\n    }\n\n    private addRowDragListener(): void {\n        const rowDragFeature = new RowDragFeature(this.eBodyViewport, this);\n\n        this.getContext().wireBean(rowDragFeature);\n        this.dragAndDropService.addDropTarget(rowDragFeature);\n    }\n\n    private addStopEditingWhenGridLosesFocus(): void {\n        if (!this.gridOptionsWrapper.isStopEditingWhenGridLosesFocus()) { return; }\n\n        const focusOutListener = (event: FocusEvent): void => {\n            // this is the element the focus is moving to\n            const elementWithFocus = event.relatedTarget;\n\n            // see if the element the focus is going to is part of the grid\n            let clickInsideGrid = false;\n            let pointer: any = elementWithFocus;\n\n            while (_.exists(pointer) && !clickInsideGrid) {\n                const isPopup = !!this.gridOptionsWrapper.getDomData(pointer, PopupEditorWrapper.DOM_KEY_POPUP_EDITOR_WRAPPER);\n                const isBody = this.eBodyViewport === pointer || this.eBottom === pointer || this.eTop === pointer;\n\n                clickInsideGrid = isPopup || isBody;\n                pointer = pointer.parentNode;\n            }\n\n            if (!clickInsideGrid) {\n                this.rowRenderer.stopEditing();\n            }\n        };\n\n        this.addDestroyableEventListener(this.eBodyViewport, 'focusout', focusOutListener);\n        this.addDestroyableEventListener(this.eTop, 'focusout', focusOutListener);\n        this.addDestroyableEventListener(this.eBottom, 'focusout', focusOutListener);\n    }\n\n    private addAngularApplyCheck(): void {\n        // this makes sure if we queue up requests, we only execute oe\n        let applyTriggered = false;\n\n        const listener = () => {\n            // only need to do one apply at a time\n            if (applyTriggered) { return; }\n            applyTriggered = true; // mark 'need apply' to true\n            window.setTimeout(() => {\n                applyTriggered = false;\n                this.$scope.$apply();\n            }, 0);\n        };\n\n        // these are the events we need to do an apply after - these are the ones that can end up\n        // with columns added or removed\n        this.addDestroyableEventListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, listener);\n        this.addDestroyableEventListener(this.eventService, Events.EVENT_VIRTUAL_COLUMNS_CHANGED, listener);\n    }\n\n    // if we do not do this, then the user can select a pic in the grid (eg an image in a custom cell renderer)\n    // and then that will start the browser native drag n' drop, which messes up with our own drag and drop.\n    private disableBrowserDragging(): void {\n        this.addGuiEventListener('dragstart', (event: MouseEvent) => {\n            if (event.target instanceof HTMLImageElement) {\n                event.preventDefault();\n                return false;\n            }\n        });\n    }\n\n    private addEventListeners(): void {\n        this.addDestroyableEventListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this));\n        this.addDestroyableEventListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, this.onDisplayedColumnsWidthChanged.bind(this));\n        this.addDestroyableEventListener(this.eventService, Events.EVENT_PINNED_ROW_DATA_CHANGED, this.setHeaderAndFloatingHeights.bind(this));\n        this.addDestroyableEventListener(this.eventService, Events.EVENT_ROW_DATA_CHANGED, this.onRowDataChanged.bind(this));\n        this.addDestroyableEventListener(this.eventService, Events.EVENT_ROW_DATA_UPDATED, this.onRowDataChanged.bind(this));\n        this.addDestroyableEventListener(this.eventService, Events.EVENT_NEW_COLUMNS_LOADED, this.onNewColumnsLoaded.bind(this));\n\n        this.addDestroyableEventListener(this.gridOptionsWrapper, GridOptionsWrapper.PROP_HEADER_HEIGHT, this.setHeaderAndFloatingHeights.bind(this));\n        this.addDestroyableEventListener(this.gridOptionsWrapper, GridOptionsWrapper.PROP_PIVOT_HEADER_HEIGHT, this.setHeaderAndFloatingHeights.bind(this));\n        this.addDestroyableEventListener(this.gridOptionsWrapper, GridOptionsWrapper.PROP_GROUP_HEADER_HEIGHT, this.setHeaderAndFloatingHeights.bind(this));\n        this.addDestroyableEventListener(this.gridOptionsWrapper, GridOptionsWrapper.PROP_PIVOT_GROUP_HEADER_HEIGHT, this.setHeaderAndFloatingHeights.bind(this));\n        this.addDestroyableEventListener(this.gridOptionsWrapper, GridOptionsWrapper.PROP_FLOATING_FILTERS_HEIGHT, this.setHeaderAndFloatingHeights.bind(this));\n        this.addDestroyableEventListener(this.gridOptionsWrapper, GridOptionsWrapper.PROP_DOM_LAYOUT, this.onDomLayoutChanged.bind(this));\n    }\n\n    private addDragListeners(): void {\n        if (\n            !this.gridOptionsWrapper.isEnableRangeSelection() || // no range selection if no property\n            _.missing(this.rangeController) // no range selection if not enterprise version\n        ) {\n            return;\n        }\n\n        const containers = [\n            this.eLeftContainer,\n            this.eRightContainer,\n            this.eCenterContainer,\n            this.eTop,\n            this.eBottom\n        ];\n\n        containers.forEach(container => {\n            const params: DragListenerParams = {\n                eElement: container,\n                onDragStart: this.rangeController.onDragStart.bind(this.rangeController),\n                onDragStop: this.rangeController.onDragStop.bind(this.rangeController),\n                onDragging: this.rangeController.onDragging.bind(this.rangeController)\n            };\n\n            this.dragService.addDragSource(params);\n            this.addDestroyFunc(() => this.dragService.removeDragSource(params));\n        });\n    }\n\n    private addMouseListeners(): void {\n        const eventNames = ['click', 'mousedown', 'dblclick', 'contextmenu', 'mouseover', 'mouseout'];\n\n        eventNames.forEach(eventName => {\n            const listener = this.processMouseEvent.bind(this, eventName);\n            this.eAllCellContainers.forEach(container =>\n                this.addDestroyableEventListener(container, eventName, listener)\n            );\n        });\n    }\n\n    private addKeyboardEvents(): void {\n        const eventNames = ['keydown', 'keypress'];\n\n        eventNames.forEach(eventName => {\n            const listener = this.processKeyboardEvent.bind(this, eventName);\n            this.eAllCellContainers.forEach(container => {\n                this.addDestroyableEventListener(container, eventName, listener);\n            });\n        });\n    }\n\n    private addBodyViewportListener(): void {\n        // we want to listen for clicks directly on the eBodyViewport, so the user has a way of showing\n        // the context menu if no rows or columns are displayed, or user simply clicks outside of a cell\n        const listener = (mouseEvent: MouseEvent) => {\n            const target = _.getTarget(mouseEvent);\n            if (target === this.eBodyViewport || target === this.eCenterViewport) {\n                // show it\n                this.onContextMenu(mouseEvent, null, null, null, null);\n                this.preventDefaultOnContextMenu(mouseEvent);\n            }\n        };\n\n        this.addDestroyableEventListener(this.eBodyViewport, 'contextmenu', listener);\n    }\n\n    // + rangeController - used to know when to scroll when user is dragging outside the\n    // main viewport while doing a range selection\n    public getBodyClientRect(): ClientRect {\n        if (!this.eBodyViewport) { return; }\n\n        return this.eBodyViewport.getBoundingClientRect();\n    }\n\n    private getRowForEvent(event: Event): RowComp {\n        let sourceElement = _.getTarget(event);\n\n        while (sourceElement) {\n            const renderedRow = this.gridOptionsWrapper.getDomData(sourceElement, RowComp.DOM_DATA_KEY_RENDERED_ROW);\n            if (renderedRow) {\n                return renderedRow;\n            }\n\n            sourceElement = sourceElement.parentElement;\n        }\n\n        return null;\n    }\n\n    private processKeyboardEvent(eventName: string, keyboardEvent: KeyboardEvent): void {\n        const cellComp = _.getCellCompForEvent(this.gridOptionsWrapper, keyboardEvent);\n\n        if (!cellComp) { return; }\n\n        const rowNode = cellComp.getRenderedRow().getRowNode();\n        const column = cellComp.getColumn();\n        const editing = cellComp.isEditing();\n\n        const gridProcessingAllowed = !_.isUserSuppressingKeyboardEvent(this.gridOptionsWrapper, keyboardEvent, rowNode, column, editing);\n\n        if (gridProcessingAllowed) {\n            switch (eventName) {\n                case 'keydown':\n                    // first see if it's a scroll key, page up / down, home / end etc\n                    const wasScrollKey = !editing && this.navigationService.handlePageScrollingKey(keyboardEvent);\n\n                    // if not a scroll key, then we pass onto cell\n                    if (!wasScrollKey) {\n                        cellComp.onKeyDown(keyboardEvent);\n                    }\n\n                    // perform clipboard and undo / redo operations\n                    this.doGridOperations(keyboardEvent, cellComp);\n\n                    break;\n                case 'keypress':\n                    cellComp.onKeyPress(keyboardEvent);\n                    break;\n            }\n        }\n\n        if (eventName === 'keydown') {\n            const cellKeyDownEvent: CellKeyDownEvent = cellComp.createEvent(keyboardEvent, Events.EVENT_CELL_KEY_DOWN);\n            this.beans.eventService.dispatchEvent(cellKeyDownEvent);\n        }\n\n        if (eventName === 'keypress') {\n            const cellKeyPressEvent: CellKeyPressEvent = cellComp.createEvent(keyboardEvent, Events.EVENT_CELL_KEY_PRESS);\n            this.beans.eventService.dispatchEvent(cellKeyPressEvent);\n        }\n    }\n\n    private doGridOperations(keyboardEvent: KeyboardEvent, cellComp: CellComp): void {\n        // check if ctrl or meta key pressed\n        if (!keyboardEvent.ctrlKey && !keyboardEvent.metaKey) { return; }\n\n        // if the cell the event came from is editing, then we do not\n        // want to do the default shortcut keys, otherwise the editor\n        // (eg a text field) would not be able to do the normal cut/copy/paste\n        if (cellComp.isEditing()) { return; }\n\n        // for copy / paste, we don't want to execute when the event\n        // was from a child grid (happens in master detail)\n        if (!this.mouseEventService.isEventFromThisGrid(keyboardEvent)) { return; }\n\n        switch (keyboardEvent.which) {\n            case Constants.KEY_A:\n                return this.onCtrlAndA(keyboardEvent);\n            case Constants.KEY_C:\n                return this.onCtrlAndC(keyboardEvent);\n            case Constants.KEY_V:\n                return this.onCtrlAndV();\n            case Constants.KEY_D:\n                return this.onCtrlAndD(keyboardEvent);\n            case Constants.KEY_Z:\n                return keyboardEvent.shiftKey ? this.undoRedoService.redo() : this.undoRedoService.undo();\n            case Constants.KEY_Y:\n                return this.undoRedoService.redo();\n        }\n    }\n\n    // gets called by rowRenderer when new data loaded, as it will want to scroll to the top\n    public scrollToTop(): void {\n        this.eBodyViewport.scrollTop = 0;\n    }\n\n    private processMouseEvent(eventName: string, mouseEvent: MouseEvent): void {\n        if (\n            !this.mouseEventService.isEventFromThisGrid(mouseEvent) ||\n            _.isStopPropagationForAgGrid(mouseEvent)\n        ) {\n            return;\n        }\n\n        const rowComp = this.getRowForEvent(mouseEvent);\n        const cellComp = this.mouseEventService.getRenderedCellForEvent(mouseEvent);\n\n        if (eventName === \"contextmenu\") {\n            this.handleContextMenuMouseEvent(mouseEvent, null, rowComp, cellComp);\n        } else {\n            if (cellComp) {\n                cellComp.onMouseEvent(eventName, mouseEvent);\n            }\n            if (rowComp) {\n                rowComp.onMouseEvent(eventName, mouseEvent);\n            }\n        }\n\n        this.preventDefaultOnContextMenu(mouseEvent);\n    }\n\n    private mockContextMenuForIPad(): void {\n        // we do NOT want this when not in iPad, otherwise we will be doing\n        if (!_.isIOSUserAgent()) { return; }\n\n        this.eAllCellContainers.forEach(container => {\n            const touchListener = new TouchListener(container);\n            const longTapListener = (event: LongTapEvent) => {\n                const rowComp = this.getRowForEvent(event.touchEvent);\n                const cellComp = this.mouseEventService.getRenderedCellForEvent(event.touchEvent);\n\n                this.handleContextMenuMouseEvent(null, event.touchEvent, rowComp, cellComp);\n            };\n\n            this.addDestroyableEventListener(touchListener, TouchListener.EVENT_LONG_TAP, longTapListener);\n            this.addDestroyFunc(() => touchListener.destroy());\n        });\n\n    }\n\n    private handleContextMenuMouseEvent(mouseEvent: MouseEvent, touchEvent: TouchEvent, rowComp: RowComp, cellComp: CellComp) {\n        const rowNode = rowComp ? rowComp.getRowNode() : null;\n        const column = cellComp ? cellComp.getColumn() : null;\n        let value = null;\n\n        if (column) {\n            const event = mouseEvent ? mouseEvent : touchEvent;\n            cellComp.dispatchCellContextMenuEvent(event);\n            value = this.valueService.getValue(column, rowNode);\n        }\n\n        this.onContextMenu(mouseEvent, touchEvent, rowNode, column, value);\n    }\n\n    private onContextMenu(mouseEvent: MouseEvent, touchEvent: TouchEvent, rowNode: RowNode, column: Column, value: any): void {\n        // to allow us to debug in chrome, we ignore the event if ctrl is pressed.\n        // not everyone wants this, so first 'if' below allows to turn this hack off.\n        if (!this.gridOptionsWrapper.isAllowContextMenuWithControlKey()) {\n            // then do the check\n            if (mouseEvent && (mouseEvent.ctrlKey || mouseEvent.metaKey)) { return; }\n        }\n\n        if (this.contextMenuFactory && !this.gridOptionsWrapper.isSuppressContextMenu()) {\n            const eventOrTouch: (MouseEvent | Touch) = mouseEvent ? mouseEvent : touchEvent.touches[0];\n            this.contextMenuFactory.showMenu(rowNode, column, value, eventOrTouch);\n            const event = mouseEvent ? mouseEvent : touchEvent;\n            event.preventDefault();\n        }\n    }\n\n    private preventDefaultOnContextMenu(mouseEvent: MouseEvent): void {\n        // if we don't do this, then middle click will never result in a 'click' event, as 'mousedown'\n        // will be consumed by the browser to mean 'scroll' (as you can scroll with the middle mouse\n        // button in the browser). so this property allows the user to receive middle button clicks if\n        // they want.\n        const { gridOptionsWrapper } = this;\n        const { which } = mouseEvent;\n\n        if (\n            gridOptionsWrapper.isPreventDefaultOnContextMenu() ||\n            (gridOptionsWrapper.isSuppressMiddleClickScrolls() && which === 2)\n        ) {\n            mouseEvent.preventDefault();\n        }\n    }\n\n    private onCtrlAndA(event: KeyboardEvent): void {\n\n        const {columnController, pinnedRowModel, paginationProxy, rangeController} = this;\n        const {PINNED_BOTTOM, PINNED_TOP} = Constants;\n\n        if (rangeController && paginationProxy.isRowsToRender()) {\n            const  [isEmptyPinnedTop, isEmptyPinnedBottom] = [\n                pinnedRowModel.isEmpty(PINNED_TOP),\n                pinnedRowModel.isEmpty(PINNED_BOTTOM)\n            ];\n\n            const floatingStart = isEmptyPinnedTop ? null : PINNED_TOP;\n            let floatingEnd: string;\n            let rowEnd: number;\n\n            if (isEmptyPinnedBottom) {\n                floatingEnd = null;\n                rowEnd = this.paginationProxy.getRowCount() - 1;\n            } else {\n                floatingEnd = PINNED_BOTTOM;\n                rowEnd = pinnedRowModel.getPinnedBottomRowData().length - 1;\n            }\n\n            const allDisplayedColumns = columnController.getAllDisplayedColumns();\n            if (_.missingOrEmpty(allDisplayedColumns)) { return; }\n\n            rangeController.setCellRange({\n                rowStartIndex: 0,\n                rowStartPinned: floatingStart,\n                rowEndIndex: rowEnd,\n                rowEndPinned: floatingEnd,\n                columnStart: allDisplayedColumns[0],\n                columnEnd: _.last(allDisplayedColumns)\n            });\n        }\n        event.preventDefault();\n    }\n\n    private onCtrlAndC(event: KeyboardEvent): void {\n\n        if (!this.clipboardService || this.gridOptionsWrapper.isEnableCellTextSelection()) { return; }\n\n        const focusedCell = this.focusedCellController.getFocusedCell();\n\n        this.clipboardService.copyToClipboard();\n        event.preventDefault();\n\n        // the copy operation results in loosing focus on the cell,\n        // because of the trickery the copy logic uses with a temporary\n        // widget. so we set it back again.\n        if (focusedCell) {\n            this.focusedCellController.setFocusedCell(focusedCell.rowIndex, focusedCell.column, focusedCell.rowPinned, true);\n        }\n    }\n\n    private onCtrlAndV(): void {\n        if (ModuleRegistry.isRegistered(ModuleNames.ClipboardModule)) {\n            this.clipboardService.pasteFromClipboard();\n        }\n    }\n\n    private onCtrlAndD(event: KeyboardEvent): void {\n        if (ModuleRegistry.isRegistered(ModuleNames.ClipboardModule)) {\n            this.clipboardService.copyRangeDown();\n            event.preventDefault();\n        }\n    }\n\n    // Valid values for position are bottom, middle and top\n    // position should be {'top','middle','bottom', or undefined/null}.\n    // if undefined/null, then the grid will to the minimal amount of scrolling,\n    // eg if grid needs to scroll up, it scrolls until row is on top,\n    //    if grid needs to scroll down, it scrolls until row is on bottom,\n    //    if row is already in view, grid does not scroll\n    // fixme - how does this work in the new way\n    public ensureIndexVisible(index: any, position?: string) {\n        // if for print or auto height, everything is always visible\n        if (this.printLayout) { return; }\n\n        const rowCount = this.paginationProxy.getRowCount();\n\n        if (typeof index !== 'number' || index < 0 || index >= rowCount) {\n            console.warn('invalid row index for ensureIndexVisible: ' + index);\n            return;\n        }\n\n        this.paginationProxy.goToPageWithIndex(index);\n\n        const rowNode = this.paginationProxy.getRow(index);\n        let rowGotShiftedDuringOperation: boolean;\n\n        do {\n            const startingRowTop = rowNode.rowTop;\n            const startingRowHeight = rowNode.rowHeight;\n\n            const paginationOffset = this.paginationProxy.getPixelOffset();\n            const rowTopPixel = rowNode.rowTop - paginationOffset;\n            const rowBottomPixel = rowTopPixel + rowNode.rowHeight;\n\n            const scrollPosition = this.getVScrollPosition();\n            const heightOffset = this.heightScaler.getOffset();\n\n            const vScrollTop = scrollPosition.top + heightOffset;\n            const vScrollBottom = scrollPosition.bottom + heightOffset;\n\n            const viewportHeight = vScrollBottom - vScrollTop;\n\n            // work out the pixels for top, middle and bottom up front,\n            // make the if/else below easier to read\n            const pxTop = this.heightScaler.getScrollPositionForPixel(rowTopPixel);\n            const pxBottom = this.heightScaler.getScrollPositionForPixel(rowBottomPixel - viewportHeight);\n            // make sure if middle, the row is not outside the top of the grid\n            const pxMiddle = Math.min((pxTop + pxBottom) / 2, rowTopPixel);\n\n            const rowBelowViewport = vScrollTop > rowTopPixel;\n            const rowAboveViewport = vScrollBottom < rowBottomPixel;\n\n            let newScrollPosition: number = null;\n\n            if (position === 'top') {\n                newScrollPosition = pxTop;\n            } else if (position === 'bottom') {\n                newScrollPosition = pxBottom;\n            } else if (position === 'middle') {\n                newScrollPosition = pxMiddle;\n            } else if (rowBelowViewport) {\n                // if row is before, scroll up with row at top\n                newScrollPosition = pxTop;\n            } else if (rowAboveViewport) {\n                // if row is below, scroll down with row at bottom\n                newScrollPosition = pxBottom;\n            }\n\n            if (newScrollPosition !== null) {\n                this.eBodyViewport.scrollTop = newScrollPosition;\n                this.rowRenderer.redrawAfterScroll();\n            }\n\n            // the row can get shifted if during the rendering (during rowRenderer.redrawAfterScroll()),\n            // the height of a row changes due to lazy calculation of row heights when using\n            // colDef.autoHeight or gridOptions.getRowHeight.\n            // if row was shifted, then the position we scrolled to is incorrect.\n            rowGotShiftedDuringOperation = (startingRowTop !== rowNode.rowTop)\n                || (startingRowHeight !== rowNode.rowHeight);\n\n        } while (rowGotShiftedDuringOperation);\n\n        // so when we return back to user, the cells have rendered\n        this.animationFrameService.flushAllFrames();\n    }\n\n    // + moveColumnController\n    public getCenterWidth(): number {\n        return this.eCenterViewport.clientWidth;\n    }\n\n    public isVerticalScrollShowing(): boolean {\n        const isAlwaysShowVerticalScroll = this.gridOptionsWrapper.isAlwaysShowVerticalScroll();\n        _.addOrRemoveCssClass(this.eBodyViewport, 'ag-force-vertical-scroll', isAlwaysShowVerticalScroll);\n        return isAlwaysShowVerticalScroll || _.isVerticalScrollShowing(this.eBodyViewport);\n    }\n\n    public isHorizontalScrollShowing(): boolean {\n        return _.isHorizontalScrollShowing(this.eCenterViewport);\n    }\n\n    // gets called every time the viewport size changes. we use this to check visibility of scrollbars\n    // in the grid panel, and also to check size and position of viewport for row and column virtualisation.\n    public checkViewportAndScrolls(): void {\n        // results in updating anything that depends on scroll showing\n        this.updateScrollVisibleService();\n\n        // fires event if height changes, used by PaginationService, HeightScalerService, RowRenderer\n        this.checkBodyHeight();\n\n        // check for virtual columns for ColumnController\n        this.onHorizontalViewportChanged();\n\n        this.setPinnedContainerSize();\n\n        // this is to cater for AG-3274, where grid is removed from the dom and then inserted back in again.\n        // (which happens with some implementations of tabbing). this can result in horizontal scroll getting\n        // reset back to the left, however no scroll event is fired. so we need to get header to also scroll\n        // back to the left to be kept in sync.\n        // adding and removing the grid from the DOM both resets the scroll position and\n        // triggers a resize event, so notify listeners if the scroll position has changed\n        if (this.scrollLeft !== this.getCenterViewportScrollLeft()) {\n            this.onBodyHorizontalScroll(this.eCenterViewport);\n        }\n    }\n\n    private updateScrollVisibleService(): void {\n        // because of column animation (which takes 200ms), we have to do this twice.\n        // eg if user removes cols anywhere except at the RHS, then the cols on the RHS\n        // will animate to the left to fill the gap. this animation means just after\n        // the cols are removed, the remaining cols are still in the original location\n        // at the start of the animation, so pre animation the H scrollbar is still needed,\n        // but post animation it is not.\n        this.updateScrollVisibleServiceImpl();\n        setTimeout(this.updateScrollVisibleServiceImpl.bind(this), 500);\n    }\n\n    private updateScrollVisibleServiceImpl(): void {\n        const params: SetScrollsVisibleParams = {\n            horizontalScrollShowing: false,\n            verticalScrollShowing: false\n        };\n\n        params.verticalScrollShowing = this.isVerticalScrollShowing();\n        params.horizontalScrollShowing = this.isHorizontalScrollShowing();\n\n        this.scrollVisibleService.setScrollsVisible(params);\n\n        this.setHorizontalScrollVisible(params.horizontalScrollShowing);\n        this.setVerticalScrollPaddingVisible(params.verticalScrollShowing);\n    }\n\n    private setHorizontalScrollVisible(visible: boolean): void {\n        const isSuppressHorizontalScroll = this.gridOptionsWrapper.isSuppressHorizontalScroll();\n        const scrollSize = visible ? (this.gridOptionsWrapper.getScrollbarWidth() || 0) : 0;\n        const scrollContainerSize = !isSuppressHorizontalScroll ? scrollSize : 0;\n        const addIEPadding = _.isBrowserIE() && visible;\n\n        this.eCenterViewport.style.height = `calc(100% + ${scrollSize}px)`;\n        _.setFixedHeight(this.eHorizontalScrollBody, scrollContainerSize);\n        // we have to add an extra pixel to the scroller viewport on IE because\n        // if the container has the same size as the scrollbar, the scroll button won't work\n        _.setFixedHeight(this.eBodyHorizontalScrollViewport, scrollContainerSize + (addIEPadding ? 1 : 0));\n        _.setFixedHeight(this.eBodyHorizontalScrollContainer, scrollContainerSize);\n    }\n\n    private setVerticalScrollPaddingVisible(show: boolean): void {\n        const scroller = show ? 'scroll' : 'hidden';\n\n        this.eTop.style.overflowY = this.eBottom.style.overflowY = scroller;\n        this.setFakeHScrollSpacerWidths();\n    }\n\n    public updateRowCount(): void {\n        const headerCount = this.headerRootComp.getHeaderRowCount();\n        const rowCount = this.paginationProxy.getRowCount();\n        const total = (headerCount + rowCount).toString();\n\n        this.getGui().setAttribute('aria-rowcount', total);\n    }\n\n    private updateColumnCount(): void {\n        const columns = this.beans.columnController.getAllDisplayedColumns();\n\n        this.getGui().setAttribute('aria-colcount', columns.length.toString());\n    }\n\n    public ensureColumnVisible(key: any): void {\n        const column = this.columnController.getGridColumn(key);\n\n        if (!column) { return; }\n\n        if (column.isPinned()) {\n            console.warn('calling ensureIndexVisible on a ' + column.getPinned() + ' pinned column doesn\\'t make sense for column ' + column.getColId());\n            return;\n        }\n\n        if (!this.columnController.isColumnDisplayed(column)) {\n            console.warn('column is not currently visible');\n            return;\n        }\n\n        const colLeftPixel = column.getLeft();\n        const colRightPixel = colLeftPixel + column.getActualWidth();\n\n        const viewportWidth = this.eCenterViewport.clientWidth;\n        const scrollPosition = this.getCenterViewportScrollLeft();\n\n        const bodyWidth = this.columnController.getBodyContainerWidth();\n\n        let viewportLeftPixel: number;\n        let viewportRightPixel: number;\n\n        // the logic of working out left and right viewport px is both here and in the ColumnController,\n        // need to refactor it out to one place\n        if (this.enableRtl) {\n            viewportLeftPixel = bodyWidth - scrollPosition - viewportWidth;\n            viewportRightPixel = bodyWidth - scrollPosition;\n        } else {\n            viewportLeftPixel = scrollPosition;\n            viewportRightPixel = viewportWidth + scrollPosition;\n        }\n\n        const viewportScrolledPastCol = viewportLeftPixel > colLeftPixel;\n        const viewportScrolledBeforeCol = viewportRightPixel < colRightPixel;\n        const colToSmallForViewport = viewportWidth < column.getActualWidth();\n\n        const alignColToLeft = viewportScrolledPastCol || colToSmallForViewport;\n        const alignColToRight = viewportScrolledBeforeCol;\n\n        let newScrollPosition = this.getCenterViewportScrollLeft();\n        if (alignColToLeft || alignColToRight) {\n            if (this.enableRtl) {\n                newScrollPosition = alignColToLeft ? (bodyWidth - viewportWidth - colLeftPixel) : (bodyWidth - colRightPixel);\n            } else {\n                newScrollPosition = alignColToLeft ? colLeftPixel : (colRightPixel - viewportWidth);\n            }\n            this.setCenterViewportScrollLeft(newScrollPosition);\n        }  else {\n            // otherwise, col is already in view, so do nothing\n        }\n\n        // this will happen anyway, as the move will cause a 'scroll' event on the body, however\n        // it is possible that the ensureColumnVisible method is called from within ag-Grid and\n        // the caller will need to have the columns rendered to continue, which will be before\n        // the event has been worked on (which is the case for cell navigation).\n        this.onHorizontalViewportChanged();\n\n        // so when we return back to user, the cells have rendered\n        this.animationFrameService.flushAllFrames();\n    }\n\n    public showLoadingOverlay() {\n        if (!this.gridOptionsWrapper.isSuppressLoadingOverlay()) {\n            this.overlayWrapper.showLoadingOverlay();\n        }\n    }\n\n    public showNoRowsOverlay() {\n        if (!this.gridOptionsWrapper.isSuppressNoRowsOverlay()) {\n            this.overlayWrapper.showNoRowsOverlay();\n        }\n    }\n\n    public hideOverlay() {\n        this.overlayWrapper.hideOverlay();\n    }\n\n    // method will call itself if no available width. this covers if the grid\n    // isn't visible, but is just about to be visible.\n    public sizeColumnsToFit(nextTimeout?: number) {\n        const availableWidth = this.eBodyViewport.clientWidth;\n\n        if (availableWidth > 0) {\n            this.columnController.sizeColumnsToFit(availableWidth, \"sizeColumnsToFit\");\n            return;\n        }\n\n        if (nextTimeout === undefined) {\n            window.setTimeout(() => {\n                this.sizeColumnsToFit(100);\n            }, 0);\n        } else if (nextTimeout === 100) {\n            window.setTimeout(() => {\n                this.sizeColumnsToFit(500);\n            }, 100);\n        } else if (nextTimeout === 500) {\n            window.setTimeout(() => {\n                this.sizeColumnsToFit(-1);\n            }, 500);\n        } else {\n            console.warn('ag-Grid: tried to call sizeColumnsToFit() but the grid is coming back with ' +\n                'zero width, maybe the grid is not visible yet on the screen?');\n        }\n    }\n\n    // used by autoWidthCalculator and autoHeightCalculator\n    public getCenterContainer(): HTMLElement {\n        return this.eCenterContainer;\n    }\n\n    public getDropTargetBodyContainers(): HTMLElement[] {\n        return [this.eCenterViewport, this.eTopViewport, this.eBottomViewport];\n    }\n\n    public getDropTargetLeftContainers(): HTMLElement[] {\n        return [this.eLeftContainer, this.eLeftBottom, this.eLeftTop];\n    }\n\n    public getDropTargetRightContainers(): HTMLElement[] {\n        return [this.eRightContainer, this.eRightBottom, this.eRightTop];\n    }\n\n    private buildRowContainerComponents() {\n        this.eAllCellContainers = [\n            this.eLeftContainer, this.eRightContainer, this.eCenterContainer,\n            this.eTop, this.eBottom, this.eFullWidthContainer];\n\n        this.rowContainerComponents = {\n            body: new RowContainerComponent({\n                eContainer: this.eCenterContainer,\n                eWrapper: this.eCenterColsClipper,\n                eViewport: this.eBodyViewport\n            }),\n            fullWidth: new RowContainerComponent({\n                eContainer: this.eFullWidthContainer\n            }),\n            pinnedLeft: new RowContainerComponent({eContainer: this.eLeftContainer}),\n            pinnedRight: new RowContainerComponent({eContainer: this.eRightContainer}),\n\n            floatingTop: new RowContainerComponent({eContainer: this.eTopContainer}),\n            floatingTopPinnedLeft: new RowContainerComponent({eContainer: this.eLeftTop}),\n            floatingTopPinnedRight: new RowContainerComponent({eContainer: this.eRightTop}),\n            floatingTopFullWidth: new RowContainerComponent({\n                eContainer: this.eTopFullWidthContainer,\n                hideWhenNoChildren: true\n            }),\n\n            floatingBottom: new RowContainerComponent({eContainer: this.eBottomContainer}),\n            floatingBottomPinnedLeft: new RowContainerComponent({eContainer: this.eLeftBottom}),\n            floatingBottomPinnedRight: new RowContainerComponent({eContainer: this.eRightBottom}),\n            floatingBottomFullWith: new RowContainerComponent({\n                eContainer: this.eBottomFullWidthContainer,\n                hideWhenNoChildren: true\n            }),\n        };\n\n        _.iterateObject(this.rowContainerComponents, (key: string, container: RowContainerComponent) => {\n            if (container) {\n                this.getContext().wireBean(container);\n            }\n        });\n    }\n\n    private setupRowAnimationCssClass(): void {\n        const listener = () => {\n            // we don't want to use row animation if scaling, as rows jump strangely as you scroll,\n            // when scaling and doing row animation.\n            const animateRows = this.gridOptionsWrapper.isAnimateRows() && !this.heightScaler.isScaling();\n            _.addOrRemoveCssClass(this.eBodyViewport, 'ag-row-animation', animateRows);\n            _.addOrRemoveCssClass(this.eBodyViewport, 'ag-row-no-animation', !animateRows);\n        };\n\n        listener();\n\n        this.addDestroyableEventListener(this.eventService, Events.EVENT_HEIGHT_SCALE_CHANGED, listener);\n    }\n\n    // when editing a pinned row, if the cell is half outside the scrollable area, the browser can\n    // scroll the column into view. we do not want this, the pinned sections should never scroll.\n    // so we listen to scrolls on these containers and reset the scroll if we find one.\n    private suppressScrollOnFloatingRow(): void {\n        const resetTopScroll = () => this.eTopViewport.scrollLeft = 0;\n        const resetBottomScroll = () => this.eTopViewport.scrollLeft = 0;\n\n        this.addDestroyableEventListener(this.eTopViewport, 'scroll', resetTopScroll);\n        this.addDestroyableEventListener(this.eBottomViewport, 'scroll', resetBottomScroll);\n    }\n\n    public getRowContainers(): RowContainerComponents {\n        return this.rowContainerComponents;\n    }\n\n    public getFloatingTopBottom(): HTMLElement[] {\n        return [this.eTop, this.eBottom];\n    }\n\n    public onDisplayedColumnsChanged(): void {\n        this.setPinnedContainerSize();\n        this.setHeaderAndFloatingHeights();\n        this.onHorizontalViewportChanged();\n        this.updateScrollVisibleService();\n        this.updateColumnCount();\n    }\n\n    private onDisplayedColumnsWidthChanged(): void {\n        this.setWidthsOfContainers();\n        this.onHorizontalViewportChanged();\n        this.updateScrollVisibleService();\n\n        if (this.enableRtl) {\n            // because RTL is all backwards, a change in the width of the row\n            // can cause a change in the scroll position, without a scroll event,\n            // because the scroll position in RTL is a function that depends on\n            // the width. to be convinced of this, take out this line, enable RTL,\n            // scroll all the way to the left and then resize a column\n            this.horizontallyScrollHeaderCenterAndFloatingCenter();\n        }\n    }\n\n    private setWidthsOfContainers(): void {\n        this.setCenterWidth();\n        this.setPinnedContainerSize();\n    }\n\n    private setCenterWidth(): void {\n        let width = this.columnController.getBodyContainerWidth();\n\n        if (this.printLayout) {\n            const pinnedContainerWidths = this.columnController.getPinnedLeftContainerWidth()\n                + this.columnController.getPinnedRightContainerWidth();\n            width += pinnedContainerWidths;\n        }\n\n        this.headerRootComp.setHeaderContainerWidth(width);\n\n        const widthPx = `${width}px`;\n\n        this.eCenterContainer.style.width = widthPx;\n        this.eBottomContainer.style.width = widthPx;\n        this.eTopContainer.style.width = widthPx;\n\n        if (!this.printLayout) {\n            this.eBodyHorizontalScrollContainer.style.width = widthPx;\n        }\n    }\n\n    private setPinnedLeftWidth(): void {\n        const oldPinning = this.pinningLeft;\n        const widthOfCols = this.columnController.getPinnedLeftContainerWidth();\n        const newPinning = this.pinningLeft = !this.printLayout && widthOfCols > 0;\n        const containers = [this.eLeftContainer, this.eLeftTop, this.eLeftBottom];\n\n        if (oldPinning !== newPinning) {\n            this.headerRootComp.setLeftVisible(newPinning);\n        }\n\n        containers.forEach(e => _.setDisplayed(e, this.pinningLeft));\n\n        if (newPinning) {\n            containers.forEach(ct => _.setFixedWidth(ct, widthOfCols));\n        }\n    }\n\n    private setPinnedRightWidth(): void {\n        const oldPinning = this.pinningRight;\n        const widthOfCols = this.columnController.getPinnedRightContainerWidth();\n        const newPinning = this.pinningRight = !this.printLayout && widthOfCols > 0;\n        const containers = [this.eRightContainer, this.eRightTop, this.eRightBottom];\n\n        if (oldPinning !== newPinning) {\n            this.headerRootComp.setRightVisible(newPinning);\n        }\n\n        containers.forEach(ct => _.setDisplayed(ct, newPinning));\n\n        if (newPinning) {\n            containers.forEach(ct => _.setFixedWidth(ct, widthOfCols));\n        }\n    }\n\n    private setPinnedContainerSize() {\n        this.setPinnedLeftWidth();\n        this.setPinnedRightWidth();\n        this.setFakeHScrollSpacerWidths();\n    }\n\n    private setFakeHScrollSpacerWidths(): void {\n\n        // we pad the right based on a) if cols are pinned to the right and\n        // b) if v scroll is showing on the right (normal position of scroll)\n        let rightSpacing = this.columnController.getPinnedRightContainerWidth();\n        const scrollOnRight = !this.enableRtl && this.isVerticalScrollShowing();\n\n        if (scrollOnRight) {\n            rightSpacing += this.scrollWidth;\n        }\n        _.setFixedWidth(this.eHorizontalRightSpacer, rightSpacing);\n        _.addOrRemoveCssClass(this.eHorizontalRightSpacer, 'ag-scroller-corner', rightSpacing <= this.scrollWidth);\n\n        // we pad the left based on a) if cols are pinned to the left and\n        // b) if v scroll is showing on the left (happens in LTR layout only)\n        let leftSpacing = this.columnController.getPinnedLeftContainerWidth();\n        const scrollOnLeft = this.enableRtl && this.isVerticalScrollShowing();\n\n        if (scrollOnLeft) {\n            leftSpacing += this.scrollWidth;\n        }\n        _.setFixedWidth(this.eHorizontalLeftSpacer, leftSpacing);\n        _.addOrRemoveCssClass(this.eHorizontalLeftSpacer, 'ag-scroller-corner', leftSpacing <= this.scrollWidth);\n    }\n\n    private checkBodyHeight(): void {\n        const bodyHeight = this.eBodyViewport.clientHeight;\n\n        if (this.bodyHeight !== bodyHeight) {\n            this.bodyHeight = bodyHeight;\n            const event: BodyHeightChangedEvent = {\n                type: Events.EVENT_BODY_HEIGHT_CHANGED,\n                api: this.gridApi,\n                columnApi: this.columnApi\n            };\n            this.eventService.dispatchEvent(event);\n        }\n    }\n\n    public setHeaderAndFloatingHeights(): void {\n        const { columnController, gridOptionsWrapper, pinnedRowModel, eTop, eBottom } = this;\n\n        let numberOfFloating = 0;\n        let headerRowCount = columnController.getHeaderRowCount();\n        let totalHeaderHeight: number;\n        let groupHeight: number;\n        let headerHeight: number;\n\n        if (!columnController.isPivotMode()) {\n            if (gridOptionsWrapper.isFloatingFilter()) {\n                headerRowCount++;\n            }\n            numberOfFloating = (gridOptionsWrapper.isFloatingFilter()) ? 1 : 0;\n            groupHeight = gridOptionsWrapper.getGroupHeaderHeight();\n            headerHeight = gridOptionsWrapper.getHeaderHeight();\n        } else {\n            numberOfFloating = 0;\n            groupHeight = gridOptionsWrapper.getPivotGroupHeaderHeight();\n            headerHeight = gridOptionsWrapper.getPivotHeaderHeight();\n        }\n\n        const numberOfNonGroups = 1 + numberOfFloating;\n        const numberOfGroups = headerRowCount - numberOfNonGroups;\n\n        totalHeaderHeight = numberOfFloating * gridOptionsWrapper.getFloatingFiltersHeight();\n        totalHeaderHeight += numberOfGroups * groupHeight;\n        totalHeaderHeight += headerHeight;\n\n        this.headerRootComp.setHeight(totalHeaderHeight);\n        let floatingTopHeight = pinnedRowModel.getPinnedTopTotalHeight();\n\n        if (floatingTopHeight) {\n            // adding 1px for cell bottom border\n            floatingTopHeight += 1;\n        }\n\n        let floatingBottomHeight = pinnedRowModel.getPinnedBottomTotalHeight();\n\n        if (floatingBottomHeight) {\n            // adding 1px for cell bottom border\n            floatingBottomHeight += 1;\n        }\n        const floatingTopHeightString = `${floatingTopHeight}px`;\n        const floatingBottomHeightString = `${floatingBottomHeight}px`;\n\n        eTop.style.minHeight = floatingTopHeightString;\n        eTop.style.height = floatingTopHeightString;\n        eTop.style.display = floatingTopHeight ? 'inherit' : 'none';\n        eBottom.style.minHeight = floatingBottomHeightString;\n        eBottom.style.height = floatingBottomHeightString;\n        eBottom.style.display = floatingBottomHeight ? 'inherit' : 'none';\n\n        this.checkBodyHeight();\n    }\n\n    public getBodyHeight(): number {\n        return this.bodyHeight;\n    }\n\n    // called by scrollHorizontally method and alignedGridsService\n    public setHorizontalScrollPosition(hScrollPosition: number): void {\n        this.eCenterViewport.scrollLeft = hScrollPosition;\n\n        // we need to manually do the event handling (rather than wait for the event)\n        // for the alignedGridsService, as if we don't, the aligned grid service gets\n        // notified async, and then it's 'consuming' flag doesn't get used right, and\n        // we can end up with an infinite loop\n        this.doHorizontalScroll(hScrollPosition);\n    }\n\n    public setVerticalScrollPosition(vScrollPosition: number): void {\n        this.eBodyViewport.scrollTop = vScrollPosition;\n    }\n\n    // called by the headerRootComp and moveColumnController\n    public scrollHorizontally(pixels: number): number {\n        const oldScrollPosition = this.eCenterViewport.scrollLeft;\n\n        this.setHorizontalScrollPosition(oldScrollPosition + pixels);\n        return this.eCenterViewport.scrollLeft - oldScrollPosition;\n    }\n\n    // called by rowDragFeature\n    public scrollVertically(pixels: number): number {\n        const oldScrollPosition = this.eBodyViewport.scrollTop;\n\n        this.setVerticalScrollPosition(oldScrollPosition + pixels);\n        return this.eBodyViewport.scrollTop - oldScrollPosition;\n    }\n\n    private addScrollListener() {\n        this.addDestroyableEventListener(this.eCenterViewport, 'scroll', this.onCenterViewportScroll.bind(this));\n        this.addDestroyableEventListener(this.eBodyHorizontalScrollViewport, 'scroll', this.onFakeHorizontalScroll.bind(this));\n        this.addDestroyableEventListener(this.eBodyViewport, 'scroll', this.onVerticalScroll.bind(this));\n    }\n\n    private onVerticalScroll(): void {\n        const scrollTop: number = this.eBodyViewport.scrollTop;\n        this.animationFrameService.setScrollTop(scrollTop);\n\n        this.scrollTop = scrollTop;\n        this.redrawRowsAfterScroll();\n    }\n\n    private isControllingScroll(eDiv: HTMLElement): boolean {\n        if (!this.lastHorizontalScrollElement) {\n            this.lastHorizontalScrollElement = eDiv;\n            return true;\n        }\n\n        return eDiv === this.lastHorizontalScrollElement;\n    }\n\n    private onFakeHorizontalScroll(): void {\n        if (!this.isControllingScroll(this.eBodyHorizontalScrollViewport)) { return; }\n        this.onBodyHorizontalScroll(this.eBodyHorizontalScrollViewport);\n    }\n\n    private onCenterViewportScroll(): void {\n        if (!this.isControllingScroll(this.eCenterViewport)) { return; }\n        this.onBodyHorizontalScroll(this.eCenterViewport);\n    }\n\n    private onBodyHorizontalScroll(eSource: HTMLElement): void {\n        const {scrollWidth, clientWidth} = this.eCenterViewport;\n        // in chrome, fractions can be in the scroll left, eg 250.342234 - which messes up our 'scrollWentPastBounds'\n        // formula. so we floor it to allow the formula to work.\n        const scrollLeft = Math.floor(_.getScrollLeft(eSource, this.enableRtl));\n\n        // touch devices allow elastic scroll - which temporally scrolls the panel outside of the viewport\n        // (eg user uses touch to go to the left of the grid, but drags past the left, the rows will actually\n        // scroll past the left until the user releases the mouse). when this happens, we want ignore the scroll,\n        // as otherwise it was causing the rows and header to flicker.\n        const scrollWentPastBounds = scrollLeft < 0 || (scrollLeft + clientWidth > scrollWidth);\n\n        if (scrollWentPastBounds) { return; }\n\n        this.doHorizontalScroll(scrollLeft);\n        this.resetLastHorizontalScrollElementDebounce();\n    }\n\n    private resetLastHorizontalScrollElement() {\n        this.lastHorizontalScrollElement = null;\n    }\n\n    private doHorizontalScroll(scrollLeft: number): void {\n        this.scrollLeft = scrollLeft;\n\n        const event: BodyScrollEvent = {\n            type: Events.EVENT_BODY_SCROLL,\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            direction: 'horizontal',\n            left: this.scrollLeft,\n            top: this.scrollTop\n        };\n\n        this.eventService.dispatchEvent(event);\n        this.horizontallyScrollHeaderCenterAndFloatingCenter(scrollLeft);\n        this.onHorizontalViewportChanged();\n    }\n\n    private redrawRowsAfterScroll(): void {\n        const event: BodyScrollEvent = {\n            type: Events.EVENT_BODY_SCROLL,\n            direction: 'vertical',\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            left: this.scrollLeft,\n            top: this.scrollTop\n        };\n        this.eventService.dispatchEvent(event);\n    }\n\n    // this gets called whenever a change in the viewport, so we can inform column controller it has to work\n    // out the virtual columns again. gets called from following locations:\n    // + ensureColVisible, scroll, init, layoutChanged, displayedColumnsChanged, API (doLayout)\n    private onHorizontalViewportChanged(): void {\n        const scrollWidth = this.eCenterViewport.clientWidth;\n        const scrollPosition = this.getCenterViewportScrollLeft();\n\n        this.columnController.setVirtualViewportPosition(scrollWidth, scrollPosition);\n    }\n\n    public getCenterViewportScrollLeft(): number {\n        // we defer to a util, as how you calculated scrollLeft when doing RTL depends on the browser\n        return _.getScrollLeft(this.eCenterViewport, this.enableRtl);\n    }\n\n    private setCenterViewportScrollLeft(value: number): void {\n        // we defer to a util, as how you calculated scrollLeft when doing RTL depends on the browser\n        _.setScrollLeft(this.eCenterViewport, value, this.enableRtl);\n    }\n\n    public horizontallyScrollHeaderCenterAndFloatingCenter(scrollLeft?: number): void {\n        if (scrollLeft === undefined) {\n            scrollLeft = this.getCenterViewportScrollLeft();\n        }\n\n        const offset = this.enableRtl ? scrollLeft : -scrollLeft;\n        const {clientWidth, scrollWidth} = this.eCenterViewport;\n        const scrollWentPastBounds = Math.abs(offset) + clientWidth > scrollWidth;\n\n        if (\n            scrollWentPastBounds ||\n            (this.enableRtl && offset < 0) ||\n            (!this.enableRtl && offset > 0)\n        ) {\n            return;\n        }\n\n        this.headerRootComp.setHorizontalScroll(offset);\n        this.eBottomContainer.style.transform = `translateX(${offset}px)`;\n        this.eTopContainer.style.transform = `translateX(${offset}px)`;\n\n        const partner = this.lastHorizontalScrollElement === this.eCenterViewport ? this.eBodyHorizontalScrollViewport : this.eCenterViewport;\n\n        _.setScrollLeft(partner, scrollLeft, this.enableRtl);\n    }\n\n    // + rangeController\n    public addScrollEventListener(listener: () => void): void {\n        this.eBodyViewport.addEventListener('scroll', listener);\n    }\n\n    // + rangeController\n    public removeScrollEventListener(listener: () => void): void {\n        this.eBodyViewport.removeEventListener('scroll', listener);\n    }\n}\n"]}