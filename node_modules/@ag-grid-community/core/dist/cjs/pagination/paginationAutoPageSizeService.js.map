{"version":3,"sources":["../../src/ts/pagination/paginationAutoPageSizeService.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,gDAA6C;AAE7C,oCAAiC;AACjC,8CAAmD;AAMnD;IAAmD,iDAAQ;IAA3D;;IAyCA,CAAC;IAjCU,wDAAgB,GAAvB,UAAwB,SAAoB;QACxC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAE3B,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,YAAY,EAAE,eAAM,CAAC,yBAAyB,EAAE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC3H,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,YAAY,EAAE,eAAM,CAAC,+BAA+B,EAAE,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACvI,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAEO,iDAAS,GAAjB;QACI,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,wBAAwB,EAAE,CAAC;IAC/D,CAAC;IAEO,iEAAyB,GAAjC;QACI,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAEO,2DAAmB,GAA3B;QACI,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAEO,qDAAa,GAArB;QACI,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;YAClB,OAAO;SACV;QAED,IAAM,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC;QACjE,IAAM,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC;QAElD,IAAI,UAAU,GAAG,CAAC,EAAE;YAChB,IAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,SAAS,CAAC,CAAC;YACvD,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,oBAAoB,EAAE,WAAW,CAAC,CAAC;SAC1E;IACL,CAAC;IAtC0B;QAA1B,mBAAS,CAAC,cAAc,CAAC;uEAAoC;IAC7B;QAAhC,mBAAS,CAAC,oBAAoB,CAAC;6EAAgD;IAC7C;QAAlC,mBAAS,CAAC,sBAAsB,CAAC;+EAAoD;IAJ7E,6BAA6B;QADzC,cAAI,CAAC,+BAA+B,CAAC;OACzB,6BAA6B,CAyCzC;IAAD,oCAAC;CAzCD,AAyCC,CAzCkD,mBAAQ,GAyC1D;AAzCY,sEAA6B","file":"paginationAutoPageSizeService.js","sourcesContent":["import {BeanStub} from \"../context/beanStub\";\nimport {EventService} from \"../eventService\";\nimport {Events} from \"../events\";\nimport {Autowired, Bean} from \"../context/context\";\nimport {GridOptionsWrapper} from \"../gridOptionsWrapper\";\nimport {GridPanel} from \"../gridPanel/gridPanel\";\nimport {ScrollVisibleService} from \"../gridPanel/scrollVisibleService\";\n\n@Bean('paginationAutoPageSizeService')\nexport class PaginationAutoPageSizeService extends BeanStub {\n\n    @Autowired('eventService') private eventService: EventService;\n    @Autowired('gridOptionsWrapper') private gridOptionsWrapper: GridOptionsWrapper;\n    @Autowired('scrollVisibleService') private scrollVisibleService: ScrollVisibleService;\n\n    private gridPanel: GridPanel;\n\n    public registerGridComp(gridPanel: GridPanel): void {\n        this.gridPanel = gridPanel;\n\n        this.addDestroyableEventListener(this.eventService, Events.EVENT_BODY_HEIGHT_CHANGED, this.onBodyHeightChanged.bind(this));\n        this.addDestroyableEventListener(this.eventService, Events.EVENT_SCROLL_VISIBILITY_CHANGED, this.onScrollVisibilityChanged.bind(this));\n        this.checkPageSize();\n    }\n\n    private notActive(): boolean {\n        return !this.gridOptionsWrapper.isPaginationAutoPageSize();\n    }\n\n    private onScrollVisibilityChanged(): void {\n        this.checkPageSize();\n    }\n\n    private onBodyHeightChanged(): void {\n        this.checkPageSize();\n    }\n\n    private checkPageSize(): void {\n        if (this.notActive()) {\n            return;\n        }\n\n        const rowHeight = this.gridOptionsWrapper.getRowHeightAsNumber();\n        const bodyHeight = this.gridPanel.getBodyHeight();\n\n        if (bodyHeight > 0) {\n            const newPageSize = Math.floor(bodyHeight / rowHeight);\n            this.gridOptionsWrapper.setProperty('paginationPageSize', newPageSize);\n        }\n    }\n}"]}