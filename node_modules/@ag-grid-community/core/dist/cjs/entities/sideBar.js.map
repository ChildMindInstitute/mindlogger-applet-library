{"version":3,"sources":["../../src/ts/entities/sideBar.ts"],"names":[],"mappings":"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","file":"sideBar.js","sourcesContent":["import { IToolPanelComp } from \"../interfaces/iToolPanel\";\n\nexport interface ToolPanelDef {\n    id: string;\n    labelDefault: string;\n    labelKey: string;\n    // To allow binding this to an specific icon\n    iconKey: string;\n    toolPanel?: {new(): IToolPanelComp} | string;\n    toolPanelFramework?: any;\n    toolPanelParams?: any;\n}\n\nexport interface SideBarDef {\n    toolPanels?: (ToolPanelDef | string) [];\n    defaultToolPanel?: string;\n    hiddenByDefault?: boolean;\n    position?: 'left' | 'right';\n}\n\nexport class SideBarDefParser {\n    static readonly DEFAULT_COLUMN_COMP: ToolPanelDef = {\n        id: 'columns',\n        labelDefault: 'Columns',\n        labelKey: 'columns',\n        iconKey: 'columns',\n        toolPanel: 'agColumnsToolPanel',\n    };\n\n    static readonly DEFAULT_FILTER_COMP: ToolPanelDef = {\n        id: 'filters',\n        labelDefault: 'Filters',\n        labelKey: 'filters',\n        iconKey: 'filter',\n        toolPanel: 'agFiltersToolPanel',\n    };\n\n    static readonly DEFAULT_BY_KEY: {[p: string]: ToolPanelDef} = {\n        columns: SideBarDefParser.DEFAULT_COLUMN_COMP,\n        filters: SideBarDefParser.DEFAULT_FILTER_COMP\n    };\n\n    static parse(toParse: SideBarDef | string | string[] | boolean): SideBarDef {\n        if (!toParse) { return null; }\n        if (toParse === true) {\n            return {\n                toolPanels: [\n                    SideBarDefParser.DEFAULT_COLUMN_COMP,\n                    SideBarDefParser.DEFAULT_FILTER_COMP,\n                ],\n                defaultToolPanel: 'columns'\n            };\n        }\n\n        if (typeof toParse === 'string') { return SideBarDefParser.parse([toParse]); }\n\n        if (Array.isArray(toParse)) {\n            const comps: ToolPanelDef [] = [];\n            toParse.forEach(key => {\n                const lookupResult = SideBarDefParser.DEFAULT_BY_KEY [key];\n                if (! lookupResult) {\n                    console.warn(`ag-grid: the key ${key} is not a valid key for specifying a tool panel, valid keys are: ${Object.keys(SideBarDefParser.DEFAULT_BY_KEY).join(',')}`);\n                    return;\n                }\n\n                comps.push(lookupResult);\n            });\n\n            if (comps.length === 0) {\n                return null;\n            }\n\n            return {\n                toolPanels: comps,\n                defaultToolPanel: comps[0].id\n            };\n        }\n\n        const result: SideBarDef = {\n            toolPanels: SideBarDefParser.parseComponents(toParse.toolPanels),\n            defaultToolPanel: toParse.defaultToolPanel,\n            hiddenByDefault: toParse.hiddenByDefault,\n            position: toParse.position\n        };\n\n        return result;\n    }\n\n    static parseComponents(from: (ToolPanelDef | string)[]) : ToolPanelDef[] {\n        const result:ToolPanelDef[] = [];\n\n        from.forEach((it: ToolPanelDef | string) => {\n            let toAdd: ToolPanelDef = null;\n            if (typeof it === 'string') {\n                const lookupResult = SideBarDefParser.DEFAULT_BY_KEY [it];\n                if (! lookupResult) {\n                    console.warn(`ag-grid: the key ${it} is not a valid key for specifying a tool panel, valid keys are: ${Object.keys(SideBarDefParser.DEFAULT_BY_KEY).join(',')}`);\n                    return;\n                }\n\n                toAdd = lookupResult;\n            } else {\n                toAdd = it;\n            }\n\n            result.push(toAdd);\n        });\n\n        return result;\n    }\n}"]}