{"version":3,"sources":["../../src/ts/entities/cellPosition.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,8CAA0C;AAU1C;IAAA;IAkBA,CAAC;IAhBU,oCAAQ,GAAf,UAAgB,YAA0B;QAC9B,IAAA,gCAAQ,EAAE,kCAAS,EAAE,4BAAM,CAAkB;QACrD,OAAO,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;IAChE,CAAC;IAEM,8CAAkB,GAAzB,UAA0B,QAAgB,EAAE,MAAc,EAAE,SAA6B;QACrF,OAAU,QAAQ,UAAI,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,UAAI,MAAM,CAAC,KAAK,EAAI,CAAC;IACrF,CAAC;IAEM,kCAAM,GAAb,UAAc,KAAmB,EAAE,KAAmB;QAClD,IAAM,SAAS,GAAG,KAAK,CAAC,MAAM,KAAK,KAAK,CAAC,MAAM,CAAC;QAChD,IAAM,aAAa,GAAG,KAAK,CAAC,SAAS,KAAK,KAAK,CAAC,SAAS,CAAC;QAC1D,IAAM,UAAU,GAAG,KAAK,CAAC,QAAQ,KAAK,KAAK,CAAC,QAAQ,CAAC;QACrD,OAAO,SAAS,IAAI,aAAa,IAAI,UAAU,CAAC;IACpD,CAAC;IAhBQ,iBAAiB;QAD7B,cAAI,CAAC,mBAAmB,CAAC;OACb,iBAAiB,CAkB7B;IAAD,wBAAC;CAlBD,AAkBC,IAAA;AAlBY,8CAAiB","file":"cellPosition.js","sourcesContent":["import { Bean } from \"../context/context\";\nimport { Column } from \"./column\";\nimport { RowPosition } from \"./rowPosition\";\n\n// this is what gets pass into and out of the api, as JavaScript users\nexport interface CellPosition extends RowPosition {\n    column: Column;\n}\n\n@Bean('cellPositionUtils')\nexport class CellPositionUtils {\n\n    public createId(cellPosition: CellPosition): string {\n        const { rowIndex, rowPinned, column } = cellPosition;\n        return this.createIdFromValues(rowIndex, column, rowPinned);\n    }\n\n    public createIdFromValues(rowIndex: number, column: Column, rowPinned: string | undefined): string {\n        return `${rowIndex}.${rowPinned == null ? 'null' : rowPinned}.${column.getId()}`;\n    }\n\n    public equals(cellA: CellPosition, cellB: CellPosition): boolean {\n        const colsMatch = cellA.column === cellB.column;\n        const floatingMatch = cellA.rowPinned === cellB.rowPinned;\n        const indexMatch = cellA.rowIndex === cellB.rowIndex;\n        return colsMatch && floatingMatch && indexMatch;\n    }\n\n}\n"]}