{"version":3,"sources":["../../src/ts/entities/column.ts"],"names":[],"mappings":"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","file":"column.js","sourcesContent":["import {ColumnGroupChild} from \"./columnGroupChild\";\nimport {OriginalColumnGroupChild} from \"./originalColumnGroupChild\";\nimport {\n    AbstractColDef,\n    BaseColDefParams,\n    ColDef,\n    ColSpanParams,\n    IAggFunc,\n    IsColumnFunc,\n    IsColumnFuncParams,\n    RowSpanParams\n} from \"./colDef\";\nimport {EventService} from \"../eventService\";\nimport {_} from \"../utils\";\nimport {Autowired, Context, PostConstruct} from \"../context/context\";\nimport {GridOptionsWrapper} from \"../gridOptionsWrapper\";\nimport {ColumnUtils} from \"../columnController/columnUtils\";\nimport {RowNode} from \"./rowNode\";\nimport {IEventEmitter} from \"../interfaces/iEventEmitter\";\nimport {ColumnEvent, ColumnEventType} from \"../events\";\nimport {ColumnApi} from \"../columnController/columnApi\";\nimport {GridApi} from \"../gridApi\";\nimport {ColumnGroup} from \"./columnGroup\";\nimport {OriginalColumnGroup} from \"./originalColumnGroup\";\nimport {Constants} from \"../constants\";\nimport {ModuleNames} from \"../modules/moduleNames\";\nimport {ModuleRegistry} from \"../modules/moduleRegistry\";\n\n// Wrapper around a user provide column definition. The grid treats the column definition as ready only.\n// This class contains all the runtime information about a column, plus some logic (the definition has no logic).\n// This class implements both interfaces ColumnGroupChild and OriginalColumnGroupChild as the class can\n// appear as a child of either the original tree or the displayed tree. However the relevant group classes\n// for each type only implements one, as each group can only appear in it's associated tree (eg OriginalColumnGroup\n// can only appear in OriginalColumn tree).\nexport class Column implements ColumnGroupChild, OriginalColumnGroupChild, IEventEmitter {\n\n    // + renderedHeaderCell - for making header cell transparent when moving\n    public static EVENT_MOVING_CHANGED = 'movingChanged';\n    // + renderedCell - changing left position\n    public static EVENT_LEFT_CHANGED = 'leftChanged';\n    // + renderedCell - changing width\n    public static EVENT_WIDTH_CHANGED = 'widthChanged';\n    // + renderedCell - for changing pinned classes\n    public static EVENT_LAST_LEFT_PINNED_CHANGED = 'lastLeftPinnedChanged';\n    public static EVENT_FIRST_RIGHT_PINNED_CHANGED = 'firstRightPinnedChanged';\n    // + renderedColumn - for changing visibility icon\n    public static EVENT_VISIBLE_CHANGED = 'visibleChanged';\n    // + every time the filter changes, used in the floating filters\n    public static EVENT_FILTER_CHANGED = 'filterChanged';\n    // + renderedHeaderCell - marks the header with filter icon\n    public static EVENT_FILTER_ACTIVE_CHANGED = 'filterActiveChanged';\n    // + renderedHeaderCell - marks the header with sort icon\n    public static EVENT_SORT_CHANGED = 'sortChanged';\n\n    public static EVENT_MENU_VISIBLE_CHANGED = 'menuVisibleChanged';\n\n    // + toolpanel, for gui updates\n    public static EVENT_ROW_GROUP_CHANGED = 'columnRowGroupChanged';\n    // + toolpanel, for gui updates\n    public static EVENT_PIVOT_CHANGED = 'columnPivotChanged';\n    // + toolpanel, for gui updates\n    public static EVENT_VALUE_CHANGED = 'columnValueChanged';\n\n    @Autowired('gridOptionsWrapper') private gridOptionsWrapper: GridOptionsWrapper;\n    @Autowired('columnUtils') private columnUtils: ColumnUtils;\n    @Autowired('columnApi') private columnApi: ColumnApi;\n    @Autowired('gridApi') private gridApi: GridApi;\n    @Autowired('context') private context: Context;\n\n    private readonly colId: any;\n    private colDef: ColDef;\n\n    // We do NOT use this anywhere, we just keep a reference. this is to check object equivalence\n    // when the user provides an updated list of columns - so we can check if we have a column already\n    // existing for a col def. we cannot use the this.colDef as that is the result of a merge.\n    // This is used in ColumnFactory\n    private userProvidedColDef: ColDef;\n\n    private actualWidth: any;\n\n    private visible: any;\n    private pinned: string | null;\n    private left: number;\n    private oldLeft: number;\n    private aggFunc: string | IAggFunc | null;\n    private sort: string;\n    private sortedAt: number;\n    private moving = false;\n    private menuVisible = false;\n\n    private lastLeftPinned: boolean;\n    private firstRightPinned: boolean;\n\n    private minWidth: number;\n    private maxWidth: number;\n\n    private filterActive = false;\n\n    private eventService: EventService = new EventService();\n\n    private fieldContainsDots: boolean;\n    private tooltipFieldContainsDots: boolean;\n\n    private rowGroupActive = false;\n    private pivotActive = false;\n    private aggregationActive = false;\n    private flex: number;\n\n    private readonly primary: boolean;\n\n    private parent: ColumnGroup;\n    private originalParent: OriginalColumnGroup;\n\n    constructor(colDef: ColDef, userProvidedColDef: ColDef | null, colId: String, primary: boolean) {\n        this.colDef = colDef;\n        this.userProvidedColDef = userProvidedColDef;\n        this.visible = !colDef.hide;\n        this.sort = colDef.sort;\n        this.sortedAt = colDef.sortedAt;\n        this.colId = colId;\n        this.primary = primary;\n    }\n\n    // gets called when user provides an alternative colDef, eg\n    public setColDef(colDef: ColDef, userProvidedColDef: ColDef | null): void {\n        this.colDef = colDef;\n        this.userProvidedColDef = userProvidedColDef;\n    }\n\n    public getUserProvidedColDef(): ColDef {\n        return this.userProvidedColDef;\n    }\n\n    public setParent(parent: ColumnGroup): void {\n        this.parent = parent;\n    }\n\n    public getParent(): ColumnGroup {\n        return this.parent;\n    }\n\n    public setOriginalParent(originalParent: OriginalColumnGroup | null): void {\n        this.originalParent = originalParent;\n    }\n\n    public getOriginalParent(): OriginalColumnGroup | null {\n        return this.originalParent;\n    }\n\n    // this is done after constructor as it uses gridOptionsWrapper\n    @PostConstruct\n    public initialise(): void {\n        this.setPinned(this.colDef.pinned);\n\n        const minColWidth = this.gridOptionsWrapper.getMinColWidth();\n        const maxColWidth = this.gridOptionsWrapper.getMaxColWidth();\n\n        if (this.colDef.minWidth) {\n            this.minWidth = this.colDef.minWidth;\n        } else {\n            this.minWidth = minColWidth;\n        }\n\n        if (this.colDef.maxWidth) {\n            this.maxWidth = this.colDef.maxWidth;\n        } else {\n            this.maxWidth = maxColWidth;\n        }\n\n        if (this.colDef.flex) {\n            this.flex = this.colDef.flex;\n        }\n\n        this.actualWidth = this.columnUtils.calculateColInitialWidth(this.colDef);\n\n        const suppressDotNotation = this.gridOptionsWrapper.isSuppressFieldDotNotation();\n        this.fieldContainsDots = _.exists(this.colDef.field) && this.colDef.field.indexOf('.') >= 0 && !suppressDotNotation;\n        this.tooltipFieldContainsDots = _.exists(this.colDef.tooltipField) && this.colDef.tooltipField.indexOf('.') >= 0 && !suppressDotNotation;\n\n        this.validate();\n    }\n\n    public isEmptyGroup(): boolean {\n        return false;\n    }\n\n    public isRowGroupDisplayed(colId: string): boolean {\n        if (_.missing(this.colDef) || _.missing(this.colDef.showRowGroup)) {\n            return false;\n        }\n\n        const showingAllGroups = this.colDef.showRowGroup === true;\n        const showingThisGroup = this.colDef.showRowGroup === colId;\n\n        return showingAllGroups || showingThisGroup;\n    }\n\n    public getUniqueId(): string {\n        return this.getId();\n    }\n\n    public isPrimary(): boolean {\n        return this.primary;\n    }\n\n    public isFilterAllowed(): boolean {\n        // filter defined means it's a string, class or true.\n        // if its false, null or undefined then it's false.\n        const filterDefined = !!this.colDef.filter || !!this.colDef.filterFramework;\n        return this.primary && filterDefined;\n    }\n\n    public isFieldContainsDots(): boolean {\n        return this.fieldContainsDots;\n    }\n\n    public isTooltipFieldContainsDots(): boolean {\n        return this.tooltipFieldContainsDots;\n    }\n\n    private validate(): void {\n\n        const colDefAny = this.colDef as any;\n\n        function warnOnce(msg: string, key: string, obj?: any) {\n            _.doOnce( ()=> {\n                if (obj) {\n                console.warn(msg, obj)\n                } else {\n                    _.doOnce( ()=> console.warn(msg), key);\n                }\n            }, key);\n        }\n\n        if (!ModuleRegistry.isRegistered(ModuleNames.RowGroupingModule)) {\n            const rowGroupingItems =\n                ['enableRowGroup', 'rowGroup', 'rowGroupIndex', 'enablePivot', 'enableValue', 'pivot', 'pivotIndex', 'aggFunc'];\n            rowGroupingItems.forEach(item => {\n                if (_.exists(colDefAny[item])) {\n                    warnOnce(`ag-Grid: ${item} is only valid with module Row Grouping, your column definition `\n                        + `should not have ${item}`, 'ColumnRowGroupingMissing'+item);\n                }\n            });\n        }\n\n        if (!ModuleRegistry.isRegistered(ModuleNames.RichSelectModule)) {\n            if (this.colDef.cellEditor==='agRichSelect' || this.colDef.cellEditor==='agRichSelectCellEditor') {\n                warnOnce(`ag-Grid: ${this.colDef.cellEditor} can only be used with `\n                    + `module ${ModuleNames.RichSelectModule}`, 'ColumnRichSelectMissing');\n            }\n        }\n\n        if (this.gridOptionsWrapper.isTreeData()) {\n            const itemsNotAllowedWithTreeData =\n                ['rowGroup', 'rowGroupIndex', 'pivot', 'pivotIndex'];\n            itemsNotAllowedWithTreeData.forEach(item => {\n                if (_.exists(colDefAny[item])) {\n                    warnOnce(`ag-Grid: ${item} is not possible when doing tree data, your `\n                        + `column definition should not have ${item}`, 'TreeDataCannotRowGroup');\n                }\n            });\n        }\n\n        if (_.exists(this.colDef.width) && typeof this.colDef.width !== 'number') {\n            warnOnce('ag-Grid: colDef.width should be a number, not ' + typeof this.colDef.width, 'ColumnCheck_asdfawef');\n        }\n\n        if (_.get(this, 'colDef.cellRendererParams.restrictToOneGroup', null)) {\n            warnOnce('ag-Grid: Since ag-grid 11.0.0 cellRendererParams.restrictToOneGroup is deprecated. You should use showRowGroup', 'ColumnCheck_sksldjf');\n        }\n\n        if (_.get(this, 'colDef.cellRendererParams.keyMap', null)) {\n            warnOnce('ag-Grid: Since ag-grid 11.0.0 cellRendererParams.keyMap is deprecated. You should use colDef.keyCreator', 'ColumnCheck_ieiruhgdf');\n        }\n\n        if (_.get(this, 'colDef.cellRendererParams.keyMap', null)) {\n            warnOnce('ag-Grid: Since ag-grid 11.0.0 cellRendererParams.keyMap is deprecated. You should use colDef.keyCreator', 'ColumnCheck_uitolghj');\n        }\n\n        if (colDefAny.floatingCellRenderer) {\n            warnOnce('ag-Grid: since v11, floatingCellRenderer is now pinnedRowCellRenderer', 'ColumnCheck_soihwewe');\n            this.colDef.pinnedRowCellRenderer = colDefAny.floatingCellRenderer;\n        }\n        if (colDefAny.floatingRendererFramework) {\n            warnOnce('ag-Grid: since v11, floatingRendererFramework is now pinnedRowCellRendererFramework', 'ColumnCheck_zdkiouhwer');\n            this.colDef.pinnedRowCellRendererFramework = colDefAny.floatingRendererFramework;\n        }\n        if (colDefAny.floatingRendererParams) {\n            console.warn('ag-Grid: since v11, floatingRendererParams is now pinnedRowCellRendererParams', 'ColumnCheck_retiuhjs');\n            this.colDef.pinnedRowCellRendererParams = colDefAny.floatingRendererParams;\n        }\n        if (colDefAny.floatingValueFormatter) {\n            warnOnce('ag-Grid: since v11, floatingValueFormatter is now pinnedRowValueFormatter', 'ColumnCheck_qwroeihjdf');\n            this.colDef.pinnedRowValueFormatter = colDefAny.floatingValueFormatter;\n        }\n        if (colDefAny.cellFormatter) {\n            warnOnce('ag-Grid: since v12, cellFormatter is now valueFormatter', 'ColumnCheck_eoireknml');\n            if (_.missing(this.colDef.valueFormatter)) {\n                this.colDef.valueFormatter = colDefAny.cellFormatter;\n            }\n        }\n\n        if (colDefAny.headerCellTemplate) {\n            warnOnce('ag-Grid: since v15, headerCellTemplate is gone, use header component instead.', 'ColumnCheck_eroihxcm');\n        }\n        if (colDefAny.headerCellRenderer) {\n            warnOnce('ag-Grid: since v15, headerCellRenderer is gone, use header component instead.', 'ColumnCheck_terteuh');\n        }\n\n        if (colDefAny.volatile) {\n            warnOnce('ag-Grid: since v16, colDef.volatile is gone, please check refresh docs on how to refresh specific cells.', 'ColumnCheck_weoihjxcv');\n        }\n\n        if (colDefAny.suppressSorting) {\n            warnOnce(`ag-Grid: since v20, colDef.suppressSorting is gone, instead use colDef.sortable=false.`, 'ColumnCheck_43ljrer', this.colDef);\n            this.colDef.sortable = false;\n        }\n\n        if (colDefAny.suppressFilter) {\n            warnOnce(`ag-Grid: since v20, colDef.suppressFilter is gone, instead use colDef.filter=false.`, 'ColumnCheck_erlkhfdm', this.colDef);\n            this.colDef.filter = false;\n        }\n\n        if (colDefAny.suppressResize) {\n            warnOnce(`ag-Grid: since v20, colDef.suppressResize is gone, instead use colDef.resizable=false.`, 'ColumnCheck_weoihjxcv', this.colDef);\n            this.colDef.resizable = false;\n        }\n\n        if (colDefAny.tooltip) {\n            warnOnce(`ag-Grid: since v20.1, colDef.tooltip is gone, instead use colDef.tooltipValueGetter.`, 'ColumnCheck_adslknjwef', this.colDef);\n            this.colDef.tooltipValueGetter = colDefAny.tooltip;\n        }\n\n        if (colDefAny.suppressToolPanel) {\n            warnOnce(`ag-Grid: since v22, colDef.suppressToolPanel is gone, instead use suppressColumnsToolPanel / suppressFiltersToolPanel.`, 'ColumnCheck_weihjlsjkdf', this.colDef);\n            this.colDef.suppressColumnsToolPanel = true;\n        }\n    }\n\n    public addEventListener(eventType: string, listener: Function): void {\n        this.eventService.addEventListener(eventType, listener);\n    }\n\n    public removeEventListener(eventType: string, listener: Function): void {\n        this.eventService.removeEventListener(eventType, listener);\n    }\n\n    private createIsColumnFuncParams(rowNode: RowNode): IsColumnFuncParams {\n        return {\n            node: rowNode,\n            data: rowNode.data,\n            column: this,\n            colDef: this.colDef,\n            context: this.gridOptionsWrapper.getContext(),\n            api: this.gridOptionsWrapper.getApi(),\n            columnApi: this.gridOptionsWrapper.getColumnApi()\n        };\n    }\n\n    public isSuppressNavigable(rowNode: RowNode): boolean {\n        // if boolean set, then just use it\n        if (typeof this.colDef.suppressNavigable === 'boolean') {\n            return this.colDef.suppressNavigable as boolean;\n        }\n\n        // if function, then call the function to find out\n        if (typeof this.colDef.suppressNavigable === 'function') {\n            const params = this.createIsColumnFuncParams(rowNode);\n            const userFunc = this.colDef.suppressNavigable as IsColumnFunc;\n            return userFunc(params);\n        }\n\n        return false;\n    }\n\n    public isCellEditable(rowNode: RowNode): boolean {\n\n        // only allow editing of groups if the user has this option enabled\n        if (rowNode.group && !this.gridOptionsWrapper.isEnableGroupEdit()) {\n            return false;\n        }\n\n        return this.isColumnFunc(rowNode, this.colDef.editable);\n    }\n\n    public isRowDrag(rowNode: RowNode): boolean {\n        return this.isColumnFunc(rowNode, this.colDef.rowDrag);\n    }\n\n    public isDndSource(rowNode: RowNode): boolean {\n        return this.isColumnFunc(rowNode, this.colDef.dndSource);\n    }\n\n    public isCellCheckboxSelection(rowNode: RowNode): boolean {\n        return this.isColumnFunc(rowNode, this.colDef.checkboxSelection);\n    }\n\n    public isSuppressPaste(rowNode: RowNode): boolean {\n        return this.isColumnFunc(rowNode, this.colDef ? this.colDef.suppressPaste : null);\n    }\n\n    public isResizable(): boolean {\n        return this.colDef.resizable === true;\n    }\n\n    private isColumnFunc(rowNode: RowNode, value: boolean | IsColumnFunc): boolean {\n        // if boolean set, then just use it\n        if (typeof value === 'boolean') {\n            return value as boolean;\n        }\n\n        // if function, then call the function to find out\n        if (typeof value === 'function') {\n            const params = this.createIsColumnFuncParams(rowNode);\n            const editableFunc = value as IsColumnFunc;\n            return editableFunc(params);\n        }\n\n        return false;\n    }\n\n    public setMoving(moving: boolean, source: ColumnEventType = \"api\"): void {\n        this.moving = moving;\n        this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_MOVING_CHANGED, source));\n    }\n\n    private createColumnEvent(type: string, source: ColumnEventType): ColumnEvent {\n        return {\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            type: type,\n            column: this,\n            columns: [this],\n            source: source\n        };\n    }\n\n    public isMoving(): boolean {\n        return this.moving;\n    }\n\n    public getSort(): string {\n        return this.sort;\n    }\n\n    public setSort(sort: string | null | undefined, source: ColumnEventType = \"api\"): void {\n        if (this.sort !== sort) {\n            this.sort = sort;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_SORT_CHANGED, source));\n        }\n    }\n\n    public setMenuVisible(visible: boolean, source: ColumnEventType = \"api\"): void {\n        if (this.menuVisible !== visible) {\n            this.menuVisible = visible;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_MENU_VISIBLE_CHANGED, source));\n        }\n    }\n\n    public isMenuVisible(): boolean {\n        return this.menuVisible;\n    }\n\n    public isSortAscending(): boolean {\n        return this.sort === Constants.SORT_ASC;\n    }\n\n    public isSortDescending(): boolean {\n        return this.sort === Constants.SORT_DESC;\n    }\n\n    public isSortNone(): boolean {\n        return _.missing(this.sort);\n    }\n\n    public isSorting(): boolean {\n        return _.exists(this.sort);\n    }\n\n    public getSortedAt(): number {\n        return this.sortedAt;\n    }\n\n    public setSortedAt(sortedAt: number | null): void {\n        this.sortedAt = sortedAt;\n    }\n\n    public setAggFunc(aggFunc: string | IAggFunc | null | undefined): void {\n        this.aggFunc = aggFunc;\n    }\n\n    public getAggFunc(): string | IAggFunc {\n        return this.aggFunc;\n    }\n\n    public getLeft(): number {\n        return this.left;\n    }\n\n    public getOldLeft(): number {\n        return this.oldLeft;\n    }\n\n    public getRight(): number {\n        return this.left + this.actualWidth;\n    }\n\n    public setLeft(left: number | null, source: ColumnEventType = \"api\") {\n        this.oldLeft = this.left;\n        if (this.left !== left) {\n            this.left = left;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_LEFT_CHANGED, source));\n        }\n    }\n\n    public isFilterActive(): boolean {\n        return this.filterActive;\n    }\n\n    // additionalEventAttributes is used by provided simple floating filter, so it can add 'floatingFilter=true' to the event\n    public setFilterActive(active: boolean, source: ColumnEventType = \"api\", additionalEventAttributes?: any): void {\n        if (this.filterActive !== active) {\n            this.filterActive = active;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_FILTER_ACTIVE_CHANGED, source));\n        }\n        const filterChangedEvent = this.createColumnEvent(Column.EVENT_FILTER_CHANGED, source);\n        if (additionalEventAttributes) {\n            _.mergeDeep(filterChangedEvent, additionalEventAttributes);\n        }\n        this.eventService.dispatchEvent(filterChangedEvent);\n    }\n\n    public setPinned(pinned: string | boolean | null | undefined): void {\n        if (pinned === true || pinned === Constants.PINNED_LEFT) {\n            this.pinned = Constants.PINNED_LEFT;\n        } else if (pinned === Constants.PINNED_RIGHT) {\n            this.pinned = Constants.PINNED_RIGHT;\n        } else {\n            this.pinned = null;\n        }\n    }\n\n    public setFirstRightPinned(firstRightPinned: boolean, source: ColumnEventType = \"api\"): void {\n        if (this.firstRightPinned !== firstRightPinned) {\n            this.firstRightPinned = firstRightPinned;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_FIRST_RIGHT_PINNED_CHANGED, source));\n        }\n    }\n\n    public setLastLeftPinned(lastLeftPinned: boolean, source: ColumnEventType = \"api\"): void {\n        if (this.lastLeftPinned !== lastLeftPinned) {\n            this.lastLeftPinned = lastLeftPinned;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_LAST_LEFT_PINNED_CHANGED, source));\n        }\n    }\n\n    public isFirstRightPinned(): boolean {\n        return this.firstRightPinned;\n    }\n\n    public isLastLeftPinned(): boolean {\n        return this.lastLeftPinned;\n    }\n\n    public isPinned(): boolean {\n        return this.pinned === Constants.PINNED_LEFT || this.pinned === Constants.PINNED_RIGHT;\n    }\n\n    public isPinnedLeft(): boolean {\n        return this.pinned === Constants.PINNED_LEFT;\n    }\n\n    public isPinnedRight(): boolean {\n        return this.pinned === Constants.PINNED_RIGHT;\n    }\n\n    public getPinned(): string {\n        return this.pinned;\n    }\n\n    public setVisible(visible: boolean, source: ColumnEventType = \"api\"): void {\n        const newValue = visible === true;\n        if (this.visible !== newValue) {\n            this.visible = newValue;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_VISIBLE_CHANGED, source));\n        }\n    }\n\n    public isVisible(): boolean {\n        return this.visible;\n    }\n\n    public getColDef(): ColDef {\n        return this.colDef;\n    }\n\n    public getColumnGroupShow(): string | undefined {\n        return this.colDef.columnGroupShow;\n    }\n\n    public getColId(): string {\n        return this.colId;\n    }\n\n    public getId(): string {\n        return this.getColId();\n    }\n\n    public getDefinition(): AbstractColDef {\n        return this.colDef;\n    }\n\n    public getActualWidth(): number {\n        return this.actualWidth;\n    }\n\n    private createBaseColDefParams(rowNode: RowNode): BaseColDefParams {\n        const params: BaseColDefParams = {\n            node: rowNode,\n            data: rowNode.data,\n            colDef: this.colDef,\n            column: this,\n            api: this.gridOptionsWrapper.getApi(),\n            columnApi: this.gridOptionsWrapper.getColumnApi(),\n            context: this.gridOptionsWrapper.getContext()\n        };\n        return params;\n    }\n\n    public getColSpan(rowNode: RowNode): number {\n        if (_.missing(this.colDef.colSpan)) { return 1; }\n        const params: ColSpanParams = this.createBaseColDefParams(rowNode);\n        const colSpan = this.colDef.colSpan(params);\n        // colSpan must be number equal to or greater than 1\n\n        return Math.max(colSpan, 1);\n    }\n\n    public getRowSpan(rowNode: RowNode): number {\n        if (_.missing(this.colDef.rowSpan)) { return 1; }\n        const params: RowSpanParams = this.createBaseColDefParams(rowNode);\n        const rowSpan = this.colDef.rowSpan(params);\n        // rowSpan must be number equal to or greater than 1\n\n        return Math.max(rowSpan, 1);\n    }\n\n    public setActualWidth(actualWidth: number, source: ColumnEventType = \"api\"): void {\n        if (this.minWidth != null) {\n            actualWidth = Math.max(actualWidth, this.minWidth);\n        }\n        if (this.maxWidth != null) {\n            actualWidth = Math.min(actualWidth, this.maxWidth);\n        }\n        if (this.actualWidth !== actualWidth) {\n            // disable flex for this column if it was manually resized.\n            if (this.flex && source !== 'flex') { this.flex = 0; }\n            this.actualWidth = actualWidth;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_WIDTH_CHANGED, source));\n        }\n    }\n\n    public isGreaterThanMax(width: number): boolean {\n        if (this.maxWidth != null) {\n            return width > this.maxWidth;\n        }\n        return false;\n    }\n\n    public getMinWidth(): number {\n        return this.minWidth;\n    }\n\n    public getMaxWidth(): number {\n        return this.maxWidth;\n    }\n\n    public getFlex(): number {\n        return this.flex || 0;\n    }\n\n    public setMinimum(source: ColumnEventType = \"api\"): void {\n        this.setActualWidth(this.minWidth, source);\n    }\n\n    public setRowGroupActive(rowGroup: boolean, source: ColumnEventType = \"api\"): void {\n        if (this.rowGroupActive !== rowGroup) {\n            this.rowGroupActive = rowGroup;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_ROW_GROUP_CHANGED, source));\n        }\n    }\n\n    public isRowGroupActive(): boolean {\n        return this.rowGroupActive;\n    }\n\n    public setPivotActive(pivot: boolean, source: ColumnEventType = \"api\"): void {\n        if (this.pivotActive !== pivot) {\n            this.pivotActive = pivot;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_PIVOT_CHANGED, source));\n        }\n    }\n\n    public isPivotActive(): boolean {\n        return this.pivotActive;\n    }\n\n    public isAnyFunctionActive(): boolean {\n        return this.isPivotActive() || this.isRowGroupActive() || this.isValueActive();\n    }\n\n    public isAnyFunctionAllowed(): boolean {\n        return this.isAllowPivot() || this.isAllowRowGroup() || this.isAllowValue();\n    }\n\n    public setValueActive(value: boolean, source: ColumnEventType = \"api\"): void {\n        if (this.aggregationActive !== value) {\n            this.aggregationActive = value;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_VALUE_CHANGED, source));\n        }\n    }\n\n    public isValueActive(): boolean {\n        return this.aggregationActive;\n    }\n\n    public isAllowPivot(): boolean {\n        return this.colDef.enablePivot === true;\n    }\n\n    public isAllowValue(): boolean {\n        return this.colDef.enableValue === true;\n    }\n\n    public isAllowRowGroup(): boolean {\n        return this.colDef.enableRowGroup === true;\n    }\n\n    public getMenuTabs(defaultValues: string[]): string [] {\n        let menuTabs: string[] = this.getColDef().menuTabs;\n        if (menuTabs == null) {\n            menuTabs = defaultValues;\n        }\n        return menuTabs;\n    }\n\n    // this used to be needed, as previous version of ag-grid had lockPosition as column state,\n    // so couldn't depend on colDef version.\n    public isLockPosition(): boolean {\n        console.warn('ag-Grid: since v21, col.isLockPosition() should not be used, please use col.getColDef().lockPosition instead.');\n        return this.colDef ? !!this.colDef.lockPosition : false;\n    }\n\n    // this used to be needed, as previous version of ag-grid had lockVisible as column state,\n    // so couldn't depend on colDef version.\n    public isLockVisible(): boolean {\n        console.warn('ag-Grid: since v21, col.isLockVisible() should not be used, please use col.getColDef().lockVisible instead.');\n        return this.colDef ? !!this.colDef.lockVisible : false;\n    }\n\n    // this used to be needed, as previous version of ag-grid had lockPinned as column state,\n    // so couldn't depend on colDef version.\n    public isLockPinned(): boolean {\n        console.warn('ag-Grid: since v21, col.isLockPinned() should not be used, please use col.getColDef().lockPinned instead.');\n        return this.colDef ? !!this.colDef.lockPinned : false;\n    }\n\n}\n"]}