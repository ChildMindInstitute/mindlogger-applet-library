{"version":3,"sources":["../../src/ts/filter/floating/floatingFilter.ts"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA","file":"floatingFilter.js","sourcesContent":["import { IComponent } from \"../../interfaces/iComponent\";\nimport { Column } from \"../../entities/column\";\nimport { GridApi } from \"../../gridApi\";\nimport { ProvidedFilterModel, IFilterComp, IFilterParams } from \"../../interfaces/iFilter\";\nimport { FilterChangedEvent } from \"../../events\";\n\nexport interface IFloatingFilterParams {\n    column: Column;\n    filterParams: IFilterParams;\n    currentParentModel: () => any;\n    parentFilterInstance: (callback: (filterInstance: IFilterComp) => void) => void;\n    suppressFilterButton: boolean;\n    api: GridApi;\n\n    /** @deprecated in v21, use parentFilterInstance() callback instead and tell filter directly */\n    onFloatingFilterChanged: (change: any) => boolean;\n}\n\nexport interface IFloatingFilter {\n    onParentModelChanged(parentModel: any, filterChangedEvent?: FilterChangedEvent): void;\n}\n\nexport interface IFloatingFilterComp extends IFloatingFilter, IComponent<IFloatingFilterParams> {\n}\n\nexport interface BaseFloatingFilterChange {\n    model: ProvidedFilterModel;\n    apply: boolean;\n}\n"]}