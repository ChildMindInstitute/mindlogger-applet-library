{"version":3,"sources":["../../src/ts/filter/floating/floatingFilterWrapper.ts"],"names":[],"mappings":"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","file":"floatingFilterWrapper.js","sourcesContent":["import {Autowired, PostConstruct} from \"../../context/context\";\nimport {IMenuFactory} from \"../../interfaces/iMenuFactory\";\nimport {Column} from \"../../entities/column\";\nimport {SetLeftFeature} from \"../../rendering/features/setLeftFeature\";\nimport {IFloatingFilterComp, IFloatingFilterParams} from \"./../floating/floatingFilter\";\nimport {Component} from \"../../widgets/component\";\nimport {RefSelector} from \"../../widgets/componentAnnotations\";\nimport {GridOptionsWrapper} from \"../../gridOptionsWrapper\";\nimport {Beans} from \"../../rendering/beans\";\nimport {HoverFeature} from \"../../headerRendering/hoverFeature\";\nimport {Events, FilterChangedEvent} from \"../../events\";\nimport {EventService} from \"../../eventService\";\nimport {ColumnHoverService} from \"../../rendering/columnHoverService\";\nimport {_, Promise} from \"../../utils\";\nimport {ColDef} from \"../../entities/colDef\";\nimport {IFilterComp, IFilterParams} from \"../../interfaces/iFilter\";\nimport {UserComponentFactory} from \"../../components/framework/userComponentFactory\";\nimport {GridApi} from \"../../gridApi\";\nimport {ColumnApi} from \"../../columnController/columnApi\";\nimport {FilterManager} from \"./../filterManager\";\nimport {ReadOnlyFloatingFilter} from \"./provided/readOnlyFloatingFilter\";\nimport {ModuleNames} from \"../../modules/moduleNames\";\nimport {ModuleRegistry} from \"../../modules/moduleRegistry\";\n\nexport class FloatingFilterWrapper extends Component {\n\n    private static filterToFloatingFilterNames: {[p:string]:string} = {\n        set:'agSetColumnFloatingFilter',\n        agSetColumnFilter:'agSetColumnFloatingFilter',\n\n        number:'agNumberColumnFloatingFilter',\n        agNumberColumnFilter:'agNumberColumnFloatingFilter',\n\n        date:'agDateColumnFloatingFilter',\n        agDateColumnFilter:'agDateColumnFloatingFilter',\n\n        text:'agTextColumnFloatingFilter',\n        agTextColumnFilter:'agTextColumnFloatingFilter'\n    };\n\n    private static TEMPLATE =\n        `<div class=\"ag-header-cell\" role=\"presentation\">\n            <div ref=\"eFloatingFilterBody\" role=\"columnheader\"></div>\n            <div class=\"ag-floating-filter-button\" ref=\"eButtonWrapper\" role=\"presentation\">\n                <button type=\"button\" ref=\"eButtonShowMainFilter\"></button>\n            </div>\n        </div>`;\n\n    @Autowired('columnHoverService') private columnHoverService: ColumnHoverService;\n    @Autowired('eventService') private eventService: EventService;\n    @Autowired('beans') private beans: Beans;\n    @Autowired('gridOptionsWrapper') private gridOptionsWrapper: GridOptionsWrapper;\n    @Autowired(\"userComponentFactory\") private userComponentFactory: UserComponentFactory;\n    @Autowired(\"gridApi\") private gridApi: GridApi;\n    @Autowired(\"columnApi\") private columnApi: ColumnApi;\n    @Autowired(\"filterManager\") private filterManager: FilterManager;\n    @Autowired('menuFactory') private menuFactory: IMenuFactory;\n\n    @RefSelector('eFloatingFilterBody') private eFloatingFilterBody: HTMLElement;\n    @RefSelector('eButtonWrapper') private eButtonWrapper: HTMLElement;\n    @RefSelector('eButtonShowMainFilter') private eButtonShowMainFilter: HTMLElement;\n\n    private readonly column: Column;\n\n    private suppressFilterButton: boolean;\n\n    private floatingFilterCompPromise: Promise<IFloatingFilterComp>;\n\n    constructor(column: Column) {\n        super(FloatingFilterWrapper.TEMPLATE);\n        this.column = column;\n    }\n\n    @PostConstruct\n    private postConstruct(): void {\n\n        this.setupFloatingFilter();\n        this.setupWidth();\n        this.setupLeftPositioning();\n        this.setupColumnHover();\n        this.addFeature(new HoverFeature([this.column], this.getGui()));\n\n        this.addDestroyableEventListener(this.eButtonShowMainFilter, 'click', this.showParentFilter.bind(this));\n    }\n\n    private setupFloatingFilter(): void {\n        const colDef = this.column.getColDef();\n        if (colDef.filter) {\n            this.floatingFilterCompPromise = this.getFloatingFilterInstance();\n            if (this.floatingFilterCompPromise) {\n                this.floatingFilterCompPromise.then(compInstance => {\n                    if (compInstance) {\n                        this.setupWithFloatingFilter(compInstance);\n                        this.setupSyncWithFilter();\n                    } else {\n                        this.setupEmpty();\n                    }\n                });\n            } else {\n                this.setupEmpty();\n            }\n        } else {\n            this.setupEmpty();\n        }\n    }\n\n    private setupLeftPositioning(): void {\n        const setLeftFeature = new SetLeftFeature(this.column, this.getGui(), this.beans);\n        setLeftFeature.init();\n        this.addDestroyFunc(setLeftFeature.destroy.bind(setLeftFeature));\n    }\n\n    private setupSyncWithFilter(): void {\n        const syncWithFilter = (filterChangedEvent: FilterChangedEvent) => {\n            const filterComponentPromise: Promise<IFilterComp> = this.filterManager.getFilterComponent(this.column, 'NO_UI');\n            const parentModel = filterComponentPromise.resolveNow(null, filter => filter.getModel());\n            this.onParentModelChanged(parentModel, filterChangedEvent);\n        };\n\n        this.addDestroyableEventListener(this.column, Column.EVENT_FILTER_CHANGED, syncWithFilter);\n\n        if (this.filterManager.isFilterActive(this.column)) {\n            syncWithFilter(null);\n        }\n    }\n\n    // linked to event listener in template\n    private showParentFilter() {\n        this.menuFactory.showMenuAfterButtonClick(this.column, this.eButtonShowMainFilter, 'filterMenuTab', ['filterMenuTab']);\n    }\n\n    private setupColumnHover(): void {\n        this.addDestroyableEventListener(this.eventService, Events.EVENT_COLUMN_HOVER_CHANGED, this.onColumnHover.bind(this));\n        this.onColumnHover();\n    }\n\n    private onColumnHover(): void {\n        const isHovered = this.columnHoverService.isHovered(this.column);\n        _.addOrRemoveCssClass(this.getGui(), 'ag-column-hover', isHovered);\n    }\n\n    private setupWidth(): void {\n        this.addDestroyableEventListener(this.column, Column.EVENT_WIDTH_CHANGED, this.onColumnWidthChanged.bind(this));\n        this.onColumnWidthChanged();\n    }\n\n    private onColumnWidthChanged(): void {\n        this.getGui().style.width = this.column.getActualWidth() + 'px';\n    }\n\n    private setupWithFloatingFilter(floatingFilterComp: IFloatingFilterComp): void {\n\n        const disposeFunc = () => {\n            if (floatingFilterComp.destroy) {\n                floatingFilterComp.destroy();\n            }\n        };\n\n        if (!this.isAlive()) {\n            disposeFunc();\n            return;\n        }\n\n        this.addDestroyFunc(disposeFunc);\n\n        const floatingFilterCompUi = floatingFilterComp.getGui();\n\n        _.addOrRemoveCssClass(this.eFloatingFilterBody, 'ag-floating-filter-body', !this.suppressFilterButton);\n        _.addOrRemoveCssClass(this.eFloatingFilterBody, 'ag-floating-filter-full-body', this.suppressFilterButton);\n\n        _.setDisplayed(this.eButtonWrapper, !this.suppressFilterButton);\n\n        const eIcon = _.createIconNoSpan('filter', this.gridOptionsWrapper, this.column);\n        this.eButtonShowMainFilter.appendChild(eIcon);\n\n        this.eFloatingFilterBody.appendChild(floatingFilterCompUi);\n\n        if (floatingFilterComp.afterGuiAttached) {\n            floatingFilterComp.afterGuiAttached();\n        }\n    }\n\n    private parentFilterInstance(callback: (filterInstance: IFilterComp) => void): void {\n        const promise = this.filterManager.getFilterComponent(this.column, 'NO_UI');\n        promise.then(callback);\n    }\n\n    private getFloatingFilterInstance(): Promise<IFloatingFilterComp> {\n        const colDef = this.column.getColDef();\n        let defaultFloatingFilterType: string;\n\n        if (typeof colDef.filter === 'string') {\n            // will be undefined if not in the map\n            defaultFloatingFilterType = FloatingFilterWrapper.filterToFloatingFilterNames[colDef.filter];\n        } else if (colDef.filter === true) {\n            const setFilterModuleLoaded = ModuleRegistry.isRegistered(ModuleNames.SetFilterModule);\n            defaultFloatingFilterType = setFilterModuleLoaded ? 'agSetColumnFloatingFilter' : 'agTextColumnFloatingFilter';\n        }\n\n        const filterParams = this.filterManager.createFilterParams(this.column, this.column.getColDef());\n        const finalFilterParams: IFilterParams = this.userComponentFactory.createFinalParams(colDef, 'filter', filterParams);\n\n        const params: IFloatingFilterParams = {\n            api: this.gridApi,\n            column: this.column,\n            filterParams: finalFilterParams,\n            currentParentModel: this.currentParentModel.bind(this),\n            parentFilterInstance: this.parentFilterInstance.bind(this),\n            onFloatingFilterChanged: this.onFloatingFilterChanged.bind(this),\n            suppressFilterButton: false // This one might be overridden from the colDef\n        };\n\n        // this is unusual - we need a params value OUTSIDE the component the params are for.\n        // the params are for the floating filter component, but this property is actually for the wrapper.\n        this.suppressFilterButton = colDef.floatingFilterComponentParams ? !!colDef.floatingFilterComponentParams.suppressFilterButton : false;\n\n        let promise: Promise<IFloatingFilterComp> = this.userComponentFactory.newFloatingFilterComponent(\n            colDef, params, defaultFloatingFilterType);\n\n        if (!promise) {\n            const filterComponent = this.getFilterComponentPrototype(colDef);\n            const getModelAsStringExists = filterComponent && filterComponent.prototype && filterComponent.prototype.getModelAsString;\n\n            if (getModelAsStringExists) {\n                const compInstance = this.userComponentFactory.createUserComponentFromConcreteClass<any, IFloatingFilterComp>(\n                    ReadOnlyFloatingFilter,\n                    params\n                );\n                promise = Promise.resolve(compInstance);\n            }\n        }\n\n        return promise;\n    }\n\n    private createDynamicParams(): any {\n        return {\n            column: this.column,\n            colDef: this.column.getColDef(),\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n    }\n\n    private getFilterComponentPrototype(colDef: ColDef): {new(): any} {\n        const resolvedComponent = this.userComponentFactory.lookupComponentClassDef(colDef, \"filter\", this.createDynamicParams());\n        return resolvedComponent ? resolvedComponent.component : null;\n    }\n\n    private setupEmpty(): void {\n        _.setDisplayed(this.eButtonWrapper, false);\n    }\n\n    private currentParentModel(): any {\n        const filterPromise = this.filterManager.getFilterComponent(this.column, 'NO_UI');\n        return filterPromise.resolveNow(null, filter => filter.getModel());\n    }\n\n    private onParentModelChanged(model: any, filterChangedEvent: FilterChangedEvent): void {\n        if (!this.floatingFilterCompPromise) { return; }\n\n        this.floatingFilterCompPromise.then(floatingFilterComp => {\n            floatingFilterComp.onParentModelChanged(model, filterChangedEvent);\n        });\n    }\n\n    private onFloatingFilterChanged(): void {\n        console.warn('ag-Grid: since version 21.x, how floating filters are implemented has changed. ' +\n            'Instead of calling params.onFloatingFilterChanged(), get a reference to the main filter via ' +\n            'params.parentFilterInstance() and then set a value on the parent filter directly.');\n    }\n}"]}