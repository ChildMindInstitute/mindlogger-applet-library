{"version":3,"sources":["../../src/ts/filter/provided/number/numberFilter.ts"],"names":[],"mappings":"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","file":"numberFilter.js","sourcesContent":["import { RefSelector } from \"../../../widgets/componentAnnotations\";\nimport { _ } from \"../../../utils\";\n\nimport {\n    SimpleFilter,\n    ConditionPosition,\n    ISimpleFilterModel\n} from \"../simpleFilter\";\nimport { ScalerFilter, Comparator, IScalarFilterParams } from \"../scalerFilter\";\n\nexport interface NumberFilterModel extends ISimpleFilterModel {\n    filter?: number;\n    filterTo?: number;\n}\n\nexport interface INumberFilterParams extends IScalarFilterParams {\n}\n\nexport class NumberFilter extends ScalerFilter<NumberFilterModel, number> {\n\n    private static readonly FILTER_TYPE = 'number';\n\n    public static DEFAULT_FILTER_OPTIONS = [ScalerFilter.EQUALS, ScalerFilter.NOT_EQUAL,\n        ScalerFilter.LESS_THAN, ScalerFilter.LESS_THAN_OR_EQUAL,\n        ScalerFilter.GREATER_THAN, ScalerFilter.GREATER_THAN_OR_EQUAL,\n        ScalerFilter.IN_RANGE];\n\n    @RefSelector('eValueFrom1')\n    private eValueFrom1: HTMLInputElement;\n    @RefSelector('eValueFrom2')\n    private eValueFrom2: HTMLInputElement;\n\n    @RefSelector('eValueTo1')\n    private eValueTo1: HTMLInputElement;\n    @RefSelector('eValueTo2')\n    private eValueTo2: HTMLInputElement;\n\n    protected mapRangeFromModel(filterModel: NumberFilterModel): {from: number, to: number} {\n        return {\n            from: filterModel.filter,\n            to: filterModel.filterTo\n        };\n    }\n\n    protected getDefaultDebounceMs(): number {\n        return 500;\n    }\n\n    protected resetUiToDefaults(): void {\n        super.resetUiToDefaults();\n\n        this.eValueFrom1.value = null;\n        this.eValueFrom2.value = null;\n        this.eValueTo1.value = null;\n        this.eValueTo2.value = null;\n    }\n\n    protected setConditionIntoUi(model: NumberFilterModel, position: ConditionPosition): void {\n        const positionOne = position === ConditionPosition.One;\n\n        const eValueFrom = positionOne ? this.eValueFrom1 : this.eValueFrom2;\n        const eValueTo = positionOne ? this.eValueTo1 : this.eValueTo2;\n\n        eValueFrom.value = model ? ('' + model.filter) : null;\n        eValueTo.value = model ? ('' + model.filterTo) : null;\n    }\n\n    protected setValueFromFloatingFilter(value: string): void {\n        this.eValueFrom1.value = value;\n        this.eValueFrom2.value = null;\n        this.eValueTo1.value = null;\n        this.eValueTo2.value = null;\n    }\n\n    protected comparator(): Comparator<number> {\n        return (left: number, right: number): number => {\n            if (left === right) { return 0; }\n            if (left < right) { return 1; }\n            if (left > right) { return -1; }\n        };\n    }\n\n    protected setParams(params: INumberFilterParams): void {\n        super.setParams(params);\n\n        this.addValueChangedListeners();\n    }\n\n    private addValueChangedListeners(): void {\n        const listener = () => this.onUiChanged();\n        this.addDestroyableEventListener(this.eValueFrom1, 'input', listener);\n        this.addDestroyableEventListener(this.eValueFrom2, 'input', listener);\n        this.addDestroyableEventListener(this.eValueTo1, 'input', listener);\n        this.addDestroyableEventListener(this.eValueTo2, 'input', listener);\n    }\n\n    public afterGuiAttached() {\n        this.eValueFrom1.focus();\n    }\n\n    protected getDefaultFilterOptions(): string[] {\n        return NumberFilter.DEFAULT_FILTER_OPTIONS;\n    }\n\n    protected createValueTemplate(position: ConditionPosition): string {\n\n        const positionOne = position === ConditionPosition.One;\n\n        const pos = positionOne ? '1' : '2';\n\n        const translate = this.translate.bind(this);\n\n        return `<div class=\"ag-filter-body\" ref=\"eCondition${pos}Body\" role=\"presentation\">\n            <div class=\"ag-input-wrapper\" role=\"presentation\">\n                <input class=\"ag-filter-filter\" ref=\"eValueFrom${pos}\" type=\"text\" placeholder=\"${translate('filterOoo')}\"/>\n            </div>\n             <div class=\"ag-input-wrapper ag-filter-number-to\" ref=\"ePanel${pos}\" role=\"presentation\">\n                <input class=\"ag-filter-filter\" ref=\"eValueTo${pos}\" type=\"text\" placeholder=\"${translate('filterOoo')}\"/>\n            </div>\n        </div>`;\n    }\n\n    protected isConditionUiComplete(position: ConditionPosition): boolean {\n        const positionOne = position === ConditionPosition.One;\n\n        const option = positionOne ? this.getCondition1Type() : this.getCondition2Type();\n        const eValue = positionOne ? this.eValueFrom1 : this.eValueFrom2;\n        const eValueTo = positionOne ? this.eValueTo1 : this.eValueTo2;\n\n        const value = this.stringToFloat(eValue.value);\n        const valueTo = this.stringToFloat(eValueTo.value);\n\n        if (option === SimpleFilter.EMPTY) { return false; }\n\n        if (this.doesFilterHaveHiddenInput(option)) {\n            return true;\n        }\n\n        if (option === SimpleFilter.IN_RANGE) {\n            return value != null && valueTo != null;\n        } else {\n            return value != null;\n        }\n    }\n\n    protected areSimpleModelsEqual(aSimple: NumberFilterModel, bSimple: NumberFilterModel): boolean {\n        return aSimple.filter === bSimple.filter\n            && aSimple.filterTo === bSimple.filterTo\n            && aSimple.type === bSimple.type;\n    }\n\n    // needed for creating filter model\n    protected getFilterType(): string {\n        return NumberFilter.FILTER_TYPE;\n    }\n\n    private stringToFloat(value: string): number {\n        let filterText = _.makeNull(value);\n        if (filterText && filterText.trim() === '') {\n            filterText = null;\n        }\n        let newFilter: number;\n        if (filterText !== null && filterText !== undefined) {\n            newFilter = parseFloat(filterText);\n        } else {\n            newFilter = null;\n        }\n        return newFilter;\n    }\n\n    protected createCondition(position: ConditionPosition): NumberFilterModel {\n        const positionOne = position === ConditionPosition.One;\n\n        const type = positionOne ? this.getCondition1Type() : this.getCondition2Type();\n\n        const eValue = positionOne ? this.eValueFrom1 : this.eValueFrom2;\n        const value = this.stringToFloat(eValue.value);\n\n        const eValueTo = positionOne ? this.eValueTo1 : this.eValueTo2;\n        const valueTo = this.stringToFloat(eValueTo.value);\n\n        const model: NumberFilterModel =  {\n            filterType: NumberFilter.FILTER_TYPE,\n            type: type\n        };\n        if (!this.doesFilterHaveHiddenInput(type)) {\n            model.filter = value;\n            model.filterTo = valueTo; // FIX - should only populate this when filter choice has 'to' option\n        }\n        return model;\n\n    }\n\n    protected updateUiVisibility(): void {\n        super.updateUiVisibility();\n\n        const showFrom1 = this.showValueFrom(this.getCondition1Type());\n        _.setDisplayed(this.eValueFrom1, showFrom1);\n\n        const showTo1 = this.showValueTo(this.getCondition1Type());\n        _.setDisplayed(this.eValueTo1, showTo1);\n\n        const showFrom2 = this.showValueFrom(this.getCondition2Type());\n        _.setDisplayed(this.eValueFrom2, showFrom2);\n\n        const showTo2 = this.showValueTo(this.getCondition2Type());\n        _.setDisplayed(this.eValueTo2, showTo2);\n    }\n\n}"]}