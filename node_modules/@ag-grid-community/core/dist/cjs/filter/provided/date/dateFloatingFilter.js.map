{"version":3,"sources":["../../src/ts/filter/provided/date/dateFloatingFilter.ts"],"names":[],"mappings":"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","file":"dateFloatingFilter.js","sourcesContent":["import { DateFilter, DateFilterModel } from \"./dateFilter\";\nimport { Autowired } from \"../../../context/context\";\nimport { UserComponentFactory } from \"../../../components/framework/userComponentFactory\";\nimport { _ } from \"../../../utils\";\nimport { IDateParams } from \"../../../rendering/dateComponent\";\nimport { IFloatingFilterParams } from \"../../floating/floatingFilter\";\nimport { DateCompWrapper } from \"./dateCompWrapper\";\nimport { RefSelector } from \"../../../widgets/componentAnnotations\";\nimport { SimpleFilter, ISimpleFilterModel } from \"../simpleFilter\";\nimport { SimpleFloatingFilter } from \"../../floating/provided/simpleFloatingFilter\";\nimport { FilterChangedEvent } from \"../../../events\";\nimport { ProvidedFilter } from \"../providedFilter\";\n\nexport class DateFloatingFilter extends SimpleFloatingFilter {\n\n    @Autowired('userComponentFactory') private userComponentFactory: UserComponentFactory;\n\n    @RefSelector('eReadOnlyText') private eReadOnlyText: HTMLInputElement;\n    @RefSelector('eDateWrapper') private eDateWrapper: HTMLInputElement;\n\n    private dateComp: DateCompWrapper;\n\n    private params: IFloatingFilterParams;\n\n    constructor() {\n        super(\n            `<div class=\"ag-input-wrapper\" role=\"presentation\">\n                <input ref=\"eReadOnlyText\" disabled=\"true\" class=\"ag-floating-filter-input\">\n                <div ref=\"eDateWrapper\" style=\"display: flex; flex: 1 1 auto; overflow: hidden;\"></div>\n            </div>`);\n    }\n\n    protected getDefaultFilterOptions(): string[] {\n        return DateFilter.DEFAULT_FILTER_OPTIONS;\n    }\n\n    protected conditionToString(condition: DateFilterModel): string {\n\n        const isRange = condition.type == SimpleFilter.IN_RANGE;\n\n        if (isRange) {\n            return `${condition.dateFrom}-${condition.dateTo}`;\n        } else {\n            // cater for when the type doesn't need a value\n            if (condition.dateFrom != null) {\n                return `${condition.dateFrom}`;\n            } else {\n                return `${condition.type}`;\n            }\n        }\n    }\n\n    public init(params: IFloatingFilterParams) {\n        super.init(params);\n        this.params = params;\n        this.createDateComponent();\n    }\n\n    protected setEditable(editable: boolean): void {\n        _.setDisplayed(this.eDateWrapper, editable);\n        _.setDisplayed(this.eReadOnlyText, !editable);\n    }\n\n    public onParentModelChanged(model: ISimpleFilterModel, event: FilterChangedEvent): void {\n        // we don't want to update the floating filter if the floating filter caused the change.\n        // as if it caused the change, the ui is already in sycn. if we didn't do this, the UI\n        // would behave strange as it would be updating as the user is typing\n        if (this.isEventFromFloatingFilter(event)) { return; }\n\n        super.setLastTypeFromModel(model);\n\n        const allowEditing = this.canWeEditAfterModelFromParentFilter(model);\n\n        this.setEditable(allowEditing);\n\n        if (allowEditing) {\n            if (model) {\n                const dateModel = model as DateFilterModel;\n                this.dateComp.setDate(_.parseYyyyMmDdToDate(dateModel.dateFrom, '-'));\n            } else {\n                this.dateComp.setDate(null);\n            }\n            this.eReadOnlyText.value = '';\n        } else {\n            this.eReadOnlyText.value = this.getTextFromModel(model);\n            this.dateComp.setDate(null);\n        }\n    }\n\n    private onDateChanged(): void {\n\n        const filterValueDate: Date = this.dateComp.getDate();\n        const filterValueText: string = _.serializeDateToYyyyMmDd(filterValueDate, \"-\");\n\n        this.params.parentFilterInstance(filterInstance => {\n            if (filterInstance) {\n                const simpleFilter = filterInstance as SimpleFilter<ISimpleFilterModel>;\n                simpleFilter.onFloatingFilterChanged(this.getLastType(), filterValueText);\n            }\n        });\n    }\n\n    private createDateComponent(): void {\n\n        const debounceMs: number = ProvidedFilter.getDebounceMs(this.params.filterParams, this.getDefaultDebounceMs());\n        const toDebounce: () => void = _.debounce(this.onDateChanged.bind(this), debounceMs);\n        const dateComponentParams: IDateParams = {\n            onDateChanged: toDebounce,\n            filterParams: this.params.column.getColDef().filterParams\n        };\n\n        this.dateComp = new DateCompWrapper(this.userComponentFactory, dateComponentParams, this.eDateWrapper);\n\n        this.addDestroyFunc(() => {\n            this.dateComp.destroy();\n        });\n    }\n}\n"]}