{"version":3,"sources":["../../src/ts/headerRendering/headerRootComp.ts"],"names":[],"mappings":"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","file":"headerRootComp.js","sourcesContent":["import { GridOptionsWrapper } from \"../gridOptionsWrapper\";\nimport { ColumnController } from \"../columnController/columnController\";\nimport { GridPanel } from \"../gridPanel/gridPanel\";\nimport { Column } from \"../entities/column\";\nimport { Autowired, Context, PostConstruct, PreDestroy } from \"../context/context\";\nimport { HeaderContainer } from \"./headerContainer\";\nimport { EventService } from \"../eventService\";\nimport { Events } from \"../events\";\nimport { Component } from \"../widgets/component\";\nimport { RefSelector } from \"../widgets/componentAnnotations\";\nimport { GridApi } from \"../gridApi\";\nimport { AutoWidthCalculator } from \"../rendering/autoWidthCalculator\";\nimport { Constants } from \"../constants\";\nimport { _ } from \"../utils\";\n\nexport class HeaderRootComp extends Component {\n\n    private static TEMPLATE =\n        `<div class=\"ag-header\" role=\"presentation\">\n            <div class=\"ag-pinned-left-header\" ref=\"ePinnedLeftHeader\" role=\"presentation\"></div>\n            <div class=\"ag-header-viewport\" ref=\"eHeaderViewport\" role=\"presentation\">\n                <div class=\"ag-header-container\" ref=\"eHeaderContainer\" role=\"rowgroup\"></div>\n            </div>\n            <div class=\"ag-pinned-right-header\" ref=\"ePinnedRightHeader\" role=\"presentation\"></div>\n        </div>`;\n\n    @RefSelector('ePinnedLeftHeader') private ePinnedLeftHeader: HTMLElement;\n    @RefSelector('ePinnedRightHeader') private ePinnedRightHeader: HTMLElement;\n    @RefSelector('eHeaderContainer') private eHeaderContainer: HTMLElement;\n    @RefSelector('eHeaderViewport') private eHeaderViewport: HTMLElement;\n\n    @Autowired('gridOptionsWrapper') private gridOptionsWrapper: GridOptionsWrapper;\n    @Autowired('columnController') private columnController: ColumnController;\n    @Autowired('eventService') private eventService: EventService;\n    @Autowired('gridApi') private gridApi: GridApi;\n    @Autowired('autoWidthCalculator') private autoWidthCalculator: AutoWidthCalculator;\n\n    // private pinnedLeftContainer: HeaderContainer;\n    // private pinnedRightContainer: HeaderContainer;\n    // private centerContainer: HeaderContainer;\n\n    private childContainers: HeaderContainer[];\n\n    private gridPanel: GridPanel;\n\n    private printLayout: boolean;\n\n    constructor() {\n        super(HeaderRootComp.TEMPLATE);\n    }\n\n    public registerGridComp(gridPanel: GridPanel): void {\n        this.gridPanel = gridPanel;\n        this.childContainers.forEach(c => c.registerGridComp(gridPanel));\n    }\n\n    @PostConstruct\n    private postConstruct(): void {\n\n        this.printLayout = this.gridOptionsWrapper.getDomLayout() === Constants.DOM_LAYOUT_PRINT;\n\n        this.gridApi.registerHeaderRootComp(this);\n        this.autoWidthCalculator.registerHeaderRootComp(this);\n\n        const centerContainer = new HeaderContainer(this.eHeaderContainer, this.eHeaderViewport, null);\n        const pinnedLeftContainer = new HeaderContainer(this.ePinnedLeftHeader, null, Constants.PINNED_LEFT);\n        const pinnedRightContainer = new HeaderContainer(this.ePinnedRightHeader, null, Constants.PINNED_RIGHT);\n\n        this.childContainers = [centerContainer, pinnedLeftContainer, pinnedRightContainer];\n\n        this.childContainers.forEach(container => this.getContext().wireBean(container));\n\n        // shotgun way to get labels to change, eg from sum(amount) to avg(amount)\n        this.addDestroyableEventListener(this.eventService, Events.EVENT_COLUMN_VALUE_CHANGED, this.refreshHeader.bind(this));\n\n        this.addDestroyableEventListener(this.gridOptionsWrapper, GridOptionsWrapper.PROP_DOM_LAYOUT, this.onDomLayoutChanged.bind(this));\n\n        // for setting ag-pivot-on / ag-pivot-off CSS classes\n        this.addDestroyableEventListener(this.eventService, Events.EVENT_COLUMN_PIVOT_MODE_CHANGED, this.onPivotModeChanged.bind(this));\n\n        this.onPivotModeChanged();\n        this.addPreventHeaderScroll();\n\n        if (this.columnController.isReady()) {\n            this.refreshHeader();\n        }\n    }\n\n    private onDomLayoutChanged(): void {\n        const newValue = this.gridOptionsWrapper.getDomLayout() === Constants.DOM_LAYOUT_PRINT;\n        if (this.printLayout !== newValue) {\n            this.printLayout = newValue;\n            this.refreshHeader();\n        }\n    }\n\n    public setHorizontalScroll(offset: number): void {\n        this.eHeaderContainer.style.transform = `translateX(${offset}px)`;\n    }\n\n    public forEachHeaderElement(callback: (renderedHeaderElement: Component) => void): void {\n        this.childContainers.forEach(childContainer => childContainer.forEachHeaderElement(callback));\n    }\n\n    public destroy(): void {\n        super.destroy();\n        this.childContainers.forEach(container => container.destroy());\n    }\n\n    public refreshHeader() {\n        this.childContainers.forEach(container => container.refresh());\n    }\n\n    private onPivotModeChanged(): void {\n        const pivotMode = this.columnController.isPivotMode();\n        _.addOrRemoveCssClass(this.getGui(), 'ag-pivot-on', pivotMode);\n        _.addOrRemoveCssClass(this.getGui(), 'ag-pivot-off', !pivotMode);\n    }\n\n    public setHeight(height: number): void {\n        // one extra pixel is needed here to account for the\n        // height of the border\n        const px = `${height + 1}px`;\n        this.getGui().style.height = px;\n        this.getGui().style.minHeight = px;\n    }\n\n    // if the user is in floating filter and hits tab a few times, the header can\n    // end up scrolling to show items off the screen, leaving the grid and header\n    // and the grid columns no longer in sync.\n    private addPreventHeaderScroll() {\n        this.addDestroyableEventListener(this.eHeaderViewport, 'scroll', () => {\n            // if the header scrolls, the header will be out of sync. so we reset the\n            // header scroll, and then scroll the body, which will in turn set the offset\n            // on the header, giving the impression that the header scrolled as expected.\n            const scrollLeft = this.eHeaderViewport.scrollLeft;\n            if (scrollLeft !== 0) {\n                this.gridPanel.scrollHorizontally(scrollLeft);\n                this.eHeaderViewport.scrollLeft = 0;\n            }\n        });\n    }\n\n    public setHeaderContainerWidth(width: number) {\n        this.eHeaderContainer.style.width = `${width}px`;\n    }\n\n    public setLeftVisible(visible: boolean): void {\n        _.setDisplayed(this.ePinnedLeftHeader, visible);\n    }\n\n    public setRightVisible(visible: boolean): void {\n        _.setDisplayed(this.ePinnedRightHeader, visible);\n    }\n\n    public getHeaderRowCount(): number {\n        if (this.childContainers.length === 0) {\n            return 0;\n        }\n\n        return this.childContainers[0].getRowComps().length;\n    }\n}\n"]}