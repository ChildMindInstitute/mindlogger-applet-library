{"version":3,"sources":["../../src/ts/headerRendering/horizontalResizeService.ts"],"names":[],"mappings":"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","file":"horizontalResizeService.js","sourcesContent":["import { GridOptionsWrapper } from \"../gridOptionsWrapper\";\nimport { Autowired, Bean } from \"../context/context\";\nimport { DragListenerParams, DragService } from \"../dragAndDrop/dragService\";\n\nexport interface HorizontalResizeParams {\n    eResizeBar: HTMLElement;\n    dragStartPixels?: number;\n    onResizeStart: (shiftKey: boolean) => void;\n    onResizing: (delta: number) => void;\n    onResizeEnd: (delta: number) => void;\n}\n\n@Bean('horizontalResizeService')\nexport class HorizontalResizeService {\n\n    @Autowired('gridOptionsWrapper') private gridOptionsWrapper: GridOptionsWrapper;\n    @Autowired('dragService') private dragService: DragService;\n    @Autowired('eGridDiv') private eGridDiv: HTMLElement;\n\n    private draggingStarted: boolean;\n    private dragStartX: number;\n    private resizeAmount: number;\n\n    private oldBodyCursor: string;\n    private oldMsUserSelect: string;\n    private oldWebkitUserSelect: string;\n\n    public addResizeBar(params: HorizontalResizeParams): () => void {\n        const dragSource: DragListenerParams = {\n            dragStartPixels: params.dragStartPixels || 0,\n            eElement: params.eResizeBar,\n            onDragStart: this.onDragStart.bind(this, params),\n            onDragStop: this.onDragStop.bind(this, params),\n            onDragging: this.onDragging.bind(this, params)\n        };\n\n        this.dragService.addDragSource(dragSource, true);\n\n        // we pass remove func back to the caller, so call can tell us when they\n        // are finished, and then we remove the listener from the drag source\n        const finishedWithResizeFunc = () => this.dragService.removeDragSource(dragSource);\n\n        return finishedWithResizeFunc;\n    }\n\n    private onDragStart(params: HorizontalResizeParams, mouseEvent: MouseEvent | Touch): void {\n        this.draggingStarted = true;\n        this.dragStartX = mouseEvent.clientX;\n\n        this.setResizeIcons();\n\n        const shiftKey = mouseEvent instanceof MouseEvent ? (mouseEvent as MouseEvent).shiftKey === true : false;\n        params.onResizeStart(shiftKey);\n    }\n\n    private setResizeIcons(): void {\n        this.oldBodyCursor = this.eGridDiv.style.cursor;\n        this.oldMsUserSelect = this.eGridDiv.style.msUserSelect;\n        this.oldWebkitUserSelect = this.eGridDiv.style.webkitUserSelect;\n\n        // change the body cursor, so when drag moves out of the drag bar, the cursor is still 'resize' (or 'move'\n        this.eGridDiv.style.cursor = 'col-resize';\n        // we don't want text selection outside the grid (otherwise it looks weird as text highlights when we move)\n        this.eGridDiv.style.msUserSelect = 'none';\n        this.eGridDiv.style.webkitUserSelect = 'none';\n    }\n\n    private onDragStop(params: HorizontalResizeParams, mouseEvent: MouseEvent | Touch): void {\n        params.onResizeEnd(this.resizeAmount);\n        this.resetIcons();\n    }\n\n    private resetIcons(): void {\n        // we don't want text selection outside the grid (otherwise it looks weird as text highlights when we move)\n        this.eGridDiv.style.cursor = this.oldBodyCursor;\n        this.eGridDiv.style.msUserSelect = this.oldMsUserSelect;\n        this.eGridDiv.style.webkitUserSelect = this.oldWebkitUserSelect;\n    }\n\n    private onDragging(params: HorizontalResizeParams, mouseEvent: MouseEvent | Touch): void {\n        this.resizeAmount = mouseEvent.clientX - this.dragStartX;\n        params.onResizing(this.resizeAmount);\n    }\n\n}\n"]}