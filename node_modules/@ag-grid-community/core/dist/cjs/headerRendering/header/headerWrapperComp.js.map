{"version":3,"sources":["../../src/ts/headerRendering/header/headerWrapperComp.ts"],"names":[],"mappings":"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","file":"headerWrapperComp.js","sourcesContent":["import { Component } from \"../../widgets/component\";\nimport { Autowired, PostConstruct } from \"../../context/context\";\nimport { Column } from \"../../entities/column\";\nimport {\n    DragAndDropService, DragItem, DragSource, DragSourceType,\n    DropTarget\n} from \"../../dragAndDrop/dragAndDropService\";\nimport { ColDef } from \"../../entities/colDef\";\nimport { IHeaderComp, IHeaderParams } from \"./headerComp\";\nimport { ColumnApi } from \"../../columnController/columnApi\";\nimport { ColumnController } from \"../../columnController/columnController\";\nimport { HorizontalResizeService } from \"../horizontalResizeService\";\nimport { GridOptionsWrapper } from \"../../gridOptionsWrapper\";\nimport { CssClassApplier } from \"../cssClassApplier\";\nimport { SetLeftFeature } from \"../../rendering/features/setLeftFeature\";\nimport { IMenuFactory } from \"../../interfaces/iMenuFactory\";\nimport { GridApi } from \"../../gridApi\";\nimport { SortController } from \"../../sortController\";\nimport { EventService } from \"../../eventService\";\nimport { UserComponentFactory } from \"../../components/framework/userComponentFactory\";\nimport { AgCheckbox } from \"../../widgets/agCheckbox\";\nimport { RefSelector } from \"../../widgets/componentAnnotations\";\nimport { SelectAllFeature } from \"./selectAllFeature\";\nimport { Events } from \"../../events\";\nimport { ColumnHoverService } from \"../../rendering/columnHoverService\";\nimport { Beans } from \"../../rendering/beans\";\nimport { HoverFeature } from \"../hoverFeature\";\nimport { TouchListener } from \"../../widgets/touchListener\";\nimport { _ } from \"../../utils\";\nimport { Constants } from \"../../constants\";\n\nexport class HeaderWrapperComp extends Component {\n\n    private static TEMPLATE =\n        '<div class=\"ag-header-cell\" role=\"presentation\" unselectable=\"on\">' +\n        '  <div ref=\"eResize\" class=\"ag-header-cell-resize\" role=\"presentation\"></div>' +\n        '  <ag-checkbox ref=\"cbSelectAll\" class=\"ag-header-select-all\" role=\"presentation\"></ag-checkbox>' +\n        // <inner component goes here>\n        '</div>';\n\n    @Autowired('gridOptionsWrapper') private gridOptionsWrapper: GridOptionsWrapper;\n    @Autowired('dragAndDropService') private dragAndDropService: DragAndDropService;\n    @Autowired('columnController') private columnController: ColumnController;\n    @Autowired('horizontalResizeService') private horizontalResizeService: HorizontalResizeService;\n    @Autowired('menuFactory') private menuFactory: IMenuFactory;\n    @Autowired('gridApi') private gridApi: GridApi;\n    @Autowired('columnApi') private columnApi: ColumnApi;\n    @Autowired('sortController') private sortController: SortController;\n    @Autowired('eventService') private eventService: EventService;\n    @Autowired('userComponentFactory') private userComponentFactory: UserComponentFactory;\n    @Autowired('columnHoverService') private columnHoverService: ColumnHoverService;\n    @Autowired('beans') private beans: Beans;\n\n    @RefSelector('eResize') private eResize: HTMLElement;\n    @RefSelector('cbSelectAll') private cbSelectAll: AgCheckbox;\n\n    private readonly column: Column;\n    private readonly dragSourceDropTarget: DropTarget;\n    private readonly pinned: string;\n\n    private resizeStartWidth: number;\n    private resizeWithShiftKey: boolean;\n\n    constructor(column: Column, dragSourceDropTarget: DropTarget, pinned: string) {\n        super(HeaderWrapperComp.TEMPLATE);\n        this.column = column;\n        this.dragSourceDropTarget = dragSourceDropTarget;\n        this.pinned = pinned;\n    }\n\n    public getColumn(): Column {\n        return this.column;\n    }\n\n    public getComponentHolder(): ColDef {\n        return this.column.getColDef();\n    }\n\n    @PostConstruct\n    public init(): void {\n\n        const colDef = this.getComponentHolder();\n        const displayName = this.columnController.getDisplayNameForColumn(this.column, 'header', true);\n        const enableSorting = colDef.sortable;\n        const enableMenu = this.menuFactory.isMenuEnabled(this.column) && !colDef.suppressMenu;\n\n        this.appendHeaderComp(displayName, enableSorting, enableMenu);\n\n        this.setupWidth();\n        this.setupMovingCss();\n        this.setupTooltip();\n        this.setupResize();\n        this.setupMenuClass();\n        this.setupSortableClass(enableSorting);\n        this.addColumnHoverListener();\n\n        this.addFeature(new HoverFeature([this.column], this.getGui()));\n\n        this.addDestroyableEventListener(this.column, Column.EVENT_FILTER_ACTIVE_CHANGED, this.onFilterChanged.bind(this));\n        this.onFilterChanged();\n\n        this.addFeature(new SelectAllFeature(this.cbSelectAll, this.column));\n\n        const setLeftFeature = new SetLeftFeature(this.column, this.getGui(), this.beans);\n        setLeftFeature.init();\n        this.addDestroyFunc(setLeftFeature.destroy.bind(setLeftFeature));\n\n        this.addAttributes();\n        CssClassApplier.addHeaderClassesFromColDef(colDef, this.getGui(), this.gridOptionsWrapper, this.column, null);\n    }\n\n    private addColumnHoverListener(): void {\n        this.addDestroyableEventListener(this.eventService, Events.EVENT_COLUMN_HOVER_CHANGED, this.onColumnHover.bind(this));\n        this.onColumnHover();\n    }\n\n    private onColumnHover(): void {\n        const isHovered = this.columnHoverService.isHovered(this.column);\n        _.addOrRemoveCssClass(this.getGui(), 'ag-column-hover', isHovered);\n    }\n\n    private setupSortableClass(enableSorting: boolean): void {\n        if (enableSorting) {\n            const element = this.getGui();\n            _.addCssClass(element, 'ag-header-cell-sortable');\n        }\n    }\n\n    private onFilterChanged(): void {\n        const filterPresent = this.column.isFilterActive();\n        _.addOrRemoveCssClass(this.getGui(), 'ag-header-cell-filtered', filterPresent);\n    }\n\n    private appendHeaderComp(displayName: string, enableSorting: boolean, enableMenu: boolean): void {\n        const params = {\n            column: this.column,\n            displayName: displayName,\n            enableSorting: enableSorting,\n            enableMenu: enableMenu,\n            showColumnMenu: (source: HTMLElement) => {\n                this.gridApi.showColumnMenuAfterButtonClick(this.column, source);\n            },\n            progressSort: (multiSort?: boolean) => {\n                this.sortController.progressSort(this.column, !!multiSort, \"uiColumnSorted\");\n            },\n            setSort: (sort: string, multiSort?: boolean) => {\n                this.sortController.setSortForColumn(this.column, sort, !!multiSort, \"uiColumnSorted\");\n            },\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            context: this.gridOptionsWrapper.getContext()\n        } as IHeaderParams;\n\n        const callback = this.afterHeaderCompCreated.bind(this, displayName);\n\n        this.userComponentFactory.newHeaderComponent(params).then(callback);\n    }\n\n    private afterHeaderCompCreated(displayName: string, headerComp: IHeaderComp): void {\n        this.appendChild(headerComp);\n        this.setupMove(headerComp.getGui(), displayName);\n    }\n\n    private onColumnMovingChanged(): void {\n        // this function adds or removes the moving css, based on if the col is moving.\n        // this is what makes the header go dark when it is been moved (gives impression to\n        // user that the column was picked up).\n        if (this.column.isMoving()) {\n            _.addCssClass(this.getGui(), 'ag-header-cell-moving');\n        } else {\n            _.removeCssClass(this.getGui(), 'ag-header-cell-moving');\n        }\n    }\n\n    private setupMove(eHeaderCellLabel: HTMLElement, displayName: string): void {\n        const suppressMove = this.gridOptionsWrapper.isSuppressMovableColumns()\n            || this.getComponentHolder().suppressMovable\n            || this.column.getColDef().lockPosition;\n\n        if (suppressMove) { return; }\n\n        if (eHeaderCellLabel) {\n            const dragSource: DragSource = {\n                type: DragSourceType.HeaderCell,\n                eElement: eHeaderCellLabel,\n                getDragItem: () => this.createDragItem(),\n                dragItemName: displayName,\n                dragSourceDropTarget: this.dragSourceDropTarget,\n                onDragStarted: () => this.column.setMoving(true, \"uiColumnMoved\"),\n                onDragStopped: () => this.column.setMoving(false, \"uiColumnMoved\")\n            };\n\n            this.dragAndDropService.addDragSource(dragSource, true);\n            this.addDestroyFunc(() => this.dragAndDropService.removeDragSource(dragSource));\n        }\n    }\n\n    private createDragItem(): DragItem {\n        const visibleState: { [key: string]: boolean } = {};\n        visibleState[this.column.getId()] = this.column.isVisible();\n\n        return {\n            columns: [this.column],\n            visibleState: visibleState\n        };\n    }\n\n    private setupResize(): void {\n        const colDef = this.getComponentHolder();\n\n        // if no eResize in template, do nothing\n        if (!this.eResize) { return; }\n\n        if (!this.column.isResizable()) {\n            _.removeFromParent(this.eResize);\n            return;\n        }\n\n        const finishedWithResizeFunc = this.horizontalResizeService.addResizeBar({\n            eResizeBar: this.eResize,\n            onResizeStart: this.onResizeStart.bind(this),\n            onResizing: this.onResizing.bind(this, false),\n            onResizeEnd: this.onResizing.bind(this, true)\n        });\n\n        this.addDestroyFunc(finishedWithResizeFunc);\n\n        const weWantAutoSize = !this.gridOptionsWrapper.isSuppressAutoSize() && !colDef.suppressAutoSize;\n        const skipHeaderOnAutoSize = this.gridOptionsWrapper.isSkipHeaderOnAutoSize();\n\n        if (weWantAutoSize) {\n            this.addDestroyableEventListener(this.eResize, 'dblclick', () => {\n                this.columnController.autoSizeColumn(this.column, skipHeaderOnAutoSize, \"uiColumnResized\");\n            });\n\n            const touchListener: TouchListener = new TouchListener(this.eResize);\n\n            this.addDestroyableEventListener(touchListener, TouchListener.EVENT_DOUBLE_TAP, () => {\n                this.columnController.autoSizeColumn(this.column, skipHeaderOnAutoSize, \"uiColumnResized\");\n            });\n\n            this.addDestroyFunc(touchListener.destroy.bind(touchListener));\n        }\n    }\n\n    public onResizing(finished: boolean, resizeAmount: number): void {\n        const resizeAmountNormalised = this.normaliseResizeAmount(resizeAmount);\n        const newWidth = this.resizeStartWidth + resizeAmountNormalised;\n        this.columnController.setColumnWidth(this.column, newWidth, this.resizeWithShiftKey, finished, \"uiColumnDragged\");\n\n        if (finished) {\n            _.removeCssClass(this.getGui(), 'ag-column-resizing');\n        }\n    }\n\n    public onResizeStart(shiftKey: boolean): void {\n        this.resizeStartWidth = this.column.getActualWidth();\n        this.resizeWithShiftKey = shiftKey;\n\n        _.addCssClass(this.getGui(), 'ag-column-resizing');\n    }\n\n    public getTooltipText(): string | undefined {\n        const colDef = this.getComponentHolder();\n\n        return colDef.headerTooltip;\n    }\n\n    private setupTooltip(): void {\n        const tooltipText = this.getTooltipText();\n\n        // add tooltip if exists\n        if (tooltipText == null) { return; }\n\n        if (this.gridOptionsWrapper.isEnableBrowserTooltips()) {\n            this.getGui().setAttribute('title', tooltipText);\n        } else {\n            this.beans.tooltipManager.registerTooltip(this);\n        }\n    }\n\n    private setupMovingCss(): void {\n        this.addDestroyableEventListener(this.column, Column.EVENT_MOVING_CHANGED, this.onColumnMovingChanged.bind(this));\n        this.onColumnMovingChanged();\n    }\n\n    private addAttributes(): void {\n        this.getGui().setAttribute(\"col-id\", this.column.getColId());\n    }\n\n    private setupWidth(): void {\n        this.addDestroyableEventListener(this.column, Column.EVENT_WIDTH_CHANGED, this.onColumnWidthChanged.bind(this));\n        this.onColumnWidthChanged();\n    }\n\n    private setupMenuClass(): void {\n        this.addDestroyableEventListener(this.column, Column.EVENT_MENU_VISIBLE_CHANGED, this.onMenuVisible.bind(this));\n        this.onColumnWidthChanged();\n    }\n\n    private onMenuVisible(): void {\n        this.addOrRemoveCssClass('ag-column-menu-visible', this.column.isMenuVisible());\n    }\n\n    private onColumnWidthChanged(): void {\n        this.getGui().style.width = this.column.getActualWidth() + 'px';\n    }\n\n    // optionally inverts the drag, depending on pinned and RTL\n    // note - this method is duplicated in RenderedHeaderGroupCell - should refactor out?\n    private normaliseResizeAmount(dragChange: number): number {\n        let result = dragChange;\n\n        if (this.gridOptionsWrapper.isEnableRtl()) {\n            // for RTL, dragging left makes the col bigger, except when pinning left\n            if (this.pinned !== Constants.PINNED_LEFT) {\n                result *= -1;\n            }\n        } else {\n            // for LTR (ie normal), dragging left makes the col smaller, except when pinning right\n            if (this.pinned === Constants.PINNED_RIGHT) {\n                result *= -1;\n            }\n        }\n\n        return result;\n    }\n}\n"]}