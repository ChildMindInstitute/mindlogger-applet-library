{"version":3,"sources":["../../src/ts/headerRendering/header/headerComp.ts"],"names":[],"mappings":"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","file":"headerComp.js","sourcesContent":["import { Component } from \"../../widgets/component\";\nimport { Column } from \"../../entities/column\";\nimport { Autowired } from \"../../context/context\";\nimport { IMenuFactory } from \"../../interfaces/iMenuFactory\";\nimport { GridOptionsWrapper } from \"../../gridOptionsWrapper\";\nimport { SortController } from \"../../sortController\";\nimport { TapEvent, LongTapEvent, TouchListener } from \"../../widgets/touchListener\";\nimport { IComponent } from \"../../interfaces/iComponent\";\nimport { EventService } from \"../../eventService\";\nimport { RefSelector } from \"../../widgets/componentAnnotations\";\nimport { Events } from \"../../events\";\nimport { ColumnApi } from \"../../columnController/columnApi\";\nimport { GridApi } from \"../../gridApi\";\nimport { _ } from \"../../utils\";\n\nexport interface IHeaderParams {\n    column: Column;\n    displayName: string;\n    enableSorting: boolean;\n    enableMenu: boolean;\n    showColumnMenu: (source:HTMLElement) => void;\n    progressSort: (multiSort?: boolean) => void;\n    setSort: (sort: string, multiSort?: boolean) => void;\n    columnApi: ColumnApi;\n    api: GridApi;\n    context: any;\n    template: string;\n}\n\nexport interface IHeader {\n\n}\n\nexport interface IHeaderComp extends IHeader, IComponent<IHeaderParams> {\n\n}\n\nexport class HeaderComp extends Component implements IHeaderComp {\n\n    private static TEMPLATE =\n        '<div class=\"ag-cell-label-container\" role=\"presentation\">' +\n        '  <span ref=\"eMenu\" class=\"ag-header-icon ag-header-cell-menu-button\" aria-hidden=\"true\"></span>' +\n        '  <div ref=\"eLabel\" class=\"ag-header-cell-label\" role=\"presentation\" unselectable=\"on\">' +\n        '    <span ref=\"eText\" class=\"ag-header-cell-text\" role=\"columnheader\" unselectable=\"on\"></span>' +\n        '    <span ref=\"eFilter\" class=\"ag-header-icon ag-filter-icon\" aria-hidden=\"true\"></span>' +\n        '    <span ref=\"eSortOrder\" class=\"ag-header-icon ag-sort-order\" aria-hidden=\"true\"></span>' +\n        '    <span ref=\"eSortAsc\" class=\"ag-header-icon ag-sort-ascending-icon\" aria-hidden=\"true\"></span>' +\n        '    <span ref=\"eSortDesc\" class=\"ag-header-icon ag-sort-descending-icon\" aria-hidden=\"true\"></span>' +\n        '    <span ref=\"eSortNone\" class=\"ag-header-icon ag-sort-none-icon\" aria-hidden=\"true\"></span>' +\n        '  </div>' +\n        '</div>';\n\n    @Autowired('gridOptionsWrapper') private gridOptionsWrapper: GridOptionsWrapper;\n    @Autowired('sortController') private sortController: SortController;\n    @Autowired('menuFactory') private menuFactory: IMenuFactory;\n    @Autowired('eventService') private eventService: EventService;\n\n    @RefSelector('eFilter') private eFilter: HTMLElement;\n    @RefSelector('eSortAsc') private eSortAsc: HTMLElement;\n\n    @RefSelector('eSortDesc') private eSortDesc: HTMLElement;\n    @RefSelector('eSortNone') private eSortNone: HTMLElement;\n    @RefSelector('eSortOrder') private eSortOrder: HTMLElement;\n    @RefSelector('eMenu') private eMenu: HTMLElement;\n    @RefSelector('eLabel') private eLabel: HTMLElement;\n    @RefSelector('eText') private eText: HTMLElement;\n\n    private params:IHeaderParams;\n\n    private lastMovingChanged = 0;\n\n    public init(params: IHeaderParams): void {\n        let template:string = _.firstExistingValue(\n            params.template,\n            HeaderComp.TEMPLATE\n        );\n\n        // take account of any newlines & whitespace before/after the actual template\n        template = template && template.trim ? template.trim() : template;\n\n        this.setTemplate(template);\n        this.params = params;\n\n        this.setupTap();\n        this.setupIcons(params.column);\n        this.setupMenu();\n        this.setupSort();\n        this.setupFilterIcon();\n        this.setupText(params.displayName);\n    }\n\n    private setupText(displayName: string): void {\n        const displayNameSanitised = _.escape(displayName);\n        if (this.eText) {\n            this.eText.innerHTML = displayNameSanitised;\n        }\n    }\n\n    private setupIcons(column:Column): void {\n        this.addInIcon('sortAscending', this.eSortAsc, column);\n        this.addInIcon('sortDescending', this.eSortDesc, column);\n        this.addInIcon('sortUnSort', this.eSortNone, column);\n        this.addInIcon('menu', this.eMenu, column);\n        this.addInIcon('filter', this.eFilter, column);\n    }\n\n    private addInIcon(iconName: string, eParent: HTMLElement, column: Column): void {\n        if (eParent == null) { return; }\n\n        const eIcon = _.createIconNoSpan(iconName, this.gridOptionsWrapper, column);\n        eParent.appendChild(eIcon);\n    }\n\n    private setupTap(): void {\n        const { gridOptionsWrapper: options } = this;\n\n        if (options.isSuppressTouch()) { return; }\n\n        const touchListener = new TouchListener(this.getGui(), true);\n        const suppressMenuHide = options.isSuppressMenuHide();\n        const tapMenuButton = suppressMenuHide && _.exists(this.eMenu);\n        const menuTouchListener = tapMenuButton ? new TouchListener(this.eMenu, true) : touchListener;\n\n        if (this.params.enableMenu) {\n            const eventType = tapMenuButton ? 'EVENT_TAP' : 'EVENT_LONG_TAP';\n            const showMenuFn = (event: TapEvent | LongTapEvent) => {\n                options.getApi().showColumnMenuAfterMouseClick(this.params.column, event.touchStart);\n            };\n            this.addDestroyableEventListener(menuTouchListener, TouchListener[eventType], showMenuFn);\n        }\n\n        if (this.params.enableSorting) {\n            const tapListener = (event: TapEvent) => {\n                const target = event.touchStart.target as HTMLElement;\n                // When suppressMenuHide is true, a tap on the menu icon will bubble up\n                // to the header container, in that case we should not sort\n                if (suppressMenuHide && this.eMenu.contains(target)) { return; }\n\n                this.sortController.progressSort(this.params.column, false, \"uiColumnSorted\");\n            };\n\n            this.addDestroyableEventListener(touchListener, TouchListener.EVENT_TAP, tapListener);\n        }\n\n        // if tapMenuButton is true `touchListener` and `menuTouchListener` are different\n        // so we need to make sure to destroy both listeners here\n        this.addDestroyFunc(() => touchListener.destroy());\n        if (tapMenuButton) {\n            this.addDestroyFunc(() => menuTouchListener.destroy());\n        }\n    }\n\n    private setupMenu(): void {\n        // if no menu provided in template, do nothing\n        if (!this.eMenu) { return; }\n\n        // we don't show the menu if on an iPad/iPhone, as the user cannot have a pointer device\n        // Note: If suppressMenuHide is set to true the menu will be displayed, and if suppressMenuHide\n        // is false (default) user will need to use longpress to display the menu.\n        const suppressMenuHide = this.gridOptionsWrapper.isSuppressMenuHide();\n        const hideShowMenu = !this.params.enableMenu || (_.isIOSUserAgent() && !suppressMenuHide);\n\n        if (hideShowMenu) {\n            _.removeFromParent(this.eMenu);\n            return;\n        }\n\n        this.addDestroyableEventListener(this.eMenu, 'click', () => this.showMenu(this.eMenu));\n\n        if (!suppressMenuHide) {\n            this.eMenu.style.opacity = '0';\n            this.addGuiEventListener('mouseover', () => {\n                this.eMenu.style.opacity = '1';\n            });\n            this.addGuiEventListener('mouseout', () => {\n                this.eMenu.style.opacity = '0';\n            });\n        }\n        const style = this.eMenu.style as any;\n        style.transition = 'opacity 0.2s, border 0.2s';\n        style['-webkit-transition'] = 'opacity 0.2s, border 0.2s';\n    }\n\n    public showMenu(eventSource: HTMLElement) {\n        this.menuFactory.showMenuAfterButtonClick(this.params.column, eventSource);\n    }\n\n    private removeSortIcons(): void {\n        _.removeFromParent(this.eSortAsc);\n        _.removeFromParent(this.eSortDesc);\n        _.removeFromParent(this.eSortNone);\n        _.removeFromParent(this.eSortOrder);\n    }\n\n    public setupSort(): void {\n        const enableSorting = this.params.enableSorting;\n\n        if (!enableSorting) {\n            this.removeSortIcons();\n            return;\n        }\n\n        const sortUsingCtrl = this.gridOptionsWrapper.isMultiSortKeyCtrl();\n\n        // keep track of last time the moving changed flag was set\n        this.addDestroyableEventListener(this.params.column, Column.EVENT_MOVING_CHANGED, () => {\n            this.lastMovingChanged = new Date().getTime();\n        });\n\n        // add the event on the header, so when clicked, we do sorting\n        if (this.eLabel) {\n            this.addDestroyableEventListener(this.eLabel, 'click', (event:MouseEvent) => {\n\n                // sometimes when moving a column via dragging, this was also firing a clicked event.\n                // here is issue raised by user: https://ag-grid.zendesk.com/agent/tickets/1076\n                // this check stops sort if a) column is moving or b) column moved less than 200ms ago (so caters for race condition)\n                const moving = this.params.column.isMoving();\n                const nowTime = new Date().getTime();\n                // typically there is <2ms if moving flag was set recently, as it would be done in same VM turn\n                const movedRecently = (nowTime - this.lastMovingChanged) < 50;\n                const columnMoving = moving || movedRecently;\n\n                if (!columnMoving) {\n                    const multiSort = sortUsingCtrl ? (event.ctrlKey || event.metaKey) : event.shiftKey;\n                    this.params.progressSort(multiSort);\n                }\n            });\n        }\n\n        this.addDestroyableEventListener(this.params.column, Column.EVENT_SORT_CHANGED, this.onSortChanged.bind(this));\n        this.onSortChanged();\n\n        this.addDestroyableEventListener(this.eventService, Events.EVENT_SORT_CHANGED, this.setMultiSortOrder.bind(this));\n        this.setMultiSortOrder();\n    }\n\n    private onSortChanged(): void {\n\n        _.addOrRemoveCssClass(this.getGui(), 'ag-header-cell-sorted-asc', this.params.column.isSortAscending());\n        _.addOrRemoveCssClass(this.getGui(), 'ag-header-cell-sorted-desc', this.params.column.isSortDescending());\n        _.addOrRemoveCssClass(this.getGui(), 'ag-header-cell-sorted-none', this.params.column.isSortNone());\n\n        if (this.eSortAsc) {\n            _.addOrRemoveCssClass(this.eSortAsc, 'ag-hidden', !this.params.column.isSortAscending());\n        }\n\n        if (this.eSortDesc) {\n            _.addOrRemoveCssClass(this.eSortDesc, 'ag-hidden', !this.params.column.isSortDescending());\n        }\n\n        if (this.eSortNone) {\n            const alwaysHideNoSort = !this.params.column.getColDef().unSortIcon && !this.gridOptionsWrapper.isUnSortIcon();\n            _.addOrRemoveCssClass(this.eSortNone, 'ag-hidden', alwaysHideNoSort || !this.params.column.isSortNone());\n        }\n    }\n\n    // we listen here for global sort events, NOT column sort events, as we want to do this\n    // when sorting has been set on all column (if we listened just for our col (where we\n    // set the asc / desc icons) then it's possible other cols are yet to get their sorting state.\n    private setMultiSortOrder(): void {\n\n        if (!this.eSortOrder) { return; }\n\n        const col = this.params.column;\n        const allColumnsWithSorting = this.sortController.getColumnsWithSortingOrdered();\n        const indexThisCol = allColumnsWithSorting.indexOf(col);\n        const moreThanOneColSorting = allColumnsWithSorting.length > 1;\n        const showIndex = col.isSorting() && moreThanOneColSorting;\n\n        _.setDisplayed(this.eSortOrder, showIndex);\n\n        if (indexThisCol >= 0) {\n            this.eSortOrder.innerHTML = (indexThisCol + 1).toString();\n        } else {\n            _.clearElement(this.eSortOrder);\n        }\n    }\n\n    private setupFilterIcon(): void {\n\n        if (!this.eFilter) { return; }\n\n        this.addDestroyableEventListener(this.params.column, Column.EVENT_FILTER_CHANGED, this.onFilterChanged.bind(this));\n        this.onFilterChanged();\n    }\n\n    private onFilterChanged(): void {\n        const filterPresent = this.params.column.isFilterActive();\n        _.addOrRemoveCssClass(this.eFilter, 'ag-hidden', !filterPresent);\n    }\n}\n"]}