{"version":3,"sources":["../../src/ts/interfaces/refreshModelParams.ts"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA","file":"refreshModelParams.js","sourcesContent":["import {RowNodeTransaction} from \"./rowNodeTransaction\";\n\nexport interface RefreshModelParams {\n    // how much of the pipeline to execute\n    step: number;\n    // what state to reset the groups back to after the refresh\n    groupState?: any;\n    // if NOT new data, then this flag tells grid to check if rows already\n    // exist for the nodes (matching by node id) and reuses the row if it does.\n    keepRenderedRows?: boolean;\n    // if true, rows that are kept are animated to the new position\n    animate?: boolean;\n    // if true, then rows we are editing will be kept\n    keepEditingRows?: boolean;\n    // if doing delta updates, this has the changes that were done\n    rowNodeTransactions?: (RowNodeTransaction | null)[];\n    // if doing delta updates, this has the order of the nodes\n    rowNodeOrder?: { [id: string]: number };\n    // true user called setRowData() (or a new page in pagination). the grid scrolls\n    // back to the top when this is true.\n    newData?: boolean;\n    // true if this update is due to columns changing, ie no rows were changed\n    afterColumnsChanged?: boolean;\n}\n"]}