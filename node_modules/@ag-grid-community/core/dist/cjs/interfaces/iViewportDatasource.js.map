{"version":3,"sources":["../../src/ts/interfaces/iViewportDatasource.ts"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA","file":"iViewportDatasource.js","sourcesContent":["import { RowNode } from \"../entities/rowNode\";\nexport interface IViewportDatasource {\n\n    /** Gets called exactly once before viewPort is used. Passes methods to be used to tell viewPort of data loads / changes. */\n    init(params: IViewportDatasourceParams): void;\n\n    /** Tell the viewport what the scroll position of the grid is, so it knows what rows it has to get */\n    setViewportRange(firstRow: number, lastRow: number): void;\n\n    /** Gets called once when viewPort is no longer used. If you need to do any cleanup, do it here. */\n    destroy?(): void;\n}\n\nexport interface IViewportDatasourceParams {\n    /** datasource calls this method when the total row count changes. This in turn sets the height of the grids vertical scroll. */\n    setRowCount: (count: number) => void;\n    /** datasource calls this when new data arrives. The grid then updates the provided rows. The rows are mapped [rowIndex]=>rowData].*/\n    setRowData: (rowData: {[key: number]: any}) => void;\n    /** datasource calls this when it wants a row node - typically used when it wants to update the row node */\n    getRow: (rowIndex: number) => RowNode;\n}\n"]}