{"version":3,"sources":["../../src/ts/interfaces/iFrameworkOverrides.ts"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA","file":"iFrameworkOverrides.js","sourcesContent":["export interface IFrameworkOverrides {\n\n    /** Because Angular 2+ uses Zones, you should not use setTimeout(). So to get around this, we allow the framework\n     * to specify how to execute setTimeout. The default is to just call the browser setTimeout(). */\n    setTimeout(action: any, timeout?: any): void;\n\n    /** Again because Angular uses Zones, we allow adding some events outside of Zone JS so that we do not kick off\n     * the Angular change detection. We do this for some events ONLY, and not all events, just events that get fired\n     * a lot (eg mouse move), but we need to make sure in ag-Grid that we do NOT call any grid callbacks while processing\n     * these events, as we will be outside of ZoneJS and hence Angular2 Change Detection won't work. However it's fine\n     * for our code to result in ag-Grid events (and Angular application action on these) as these go through\n     * Event Emitter's.\n     *\n     * This was done by Niall and Sean. The problematic events are mouseover, mouseout, mouseenter and mouseleave.\n     */\n    addEventListenerOutsideAngular(element: HTMLElement, type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n\n}"]}