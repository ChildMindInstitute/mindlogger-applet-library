{"version":3,"sources":["../../src/ts/interfaces/iClientSideRowModel.ts"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA","file":"iClientSideRowModel.js","sourcesContent":["import {IRowModel} from \"./iRowModel\";\nimport {RowNodeTransaction} from \"./rowNodeTransaction\";\nimport {RowDataTransaction} from \"./rowDataTransaction\";\nimport {RefreshModelParams} from \"./refreshModelParams\";\nimport {RowNode} from \"../entities/rowNode\";\nimport {ChangedPath} from \"../utils/changedPath\";\n\nexport interface IClientSideRowModel extends IRowModel {\n    updateRowData(rowDataTran: RowDataTransaction, rowNodeOrder?: { [id: string]: number }): RowNodeTransaction | null;\n    setRowData(rowData: any[]): void;\n    refreshModel(params: RefreshModelParams): void;\n    expandOrCollapseAll(expand: boolean): void;\n    forEachLeafNode(callback: Function): void;\n    forEachNode(callback: Function): void;\n    forEachNodeAfterFilter(callback: Function): void;\n    forEachNodeAfterFilterAndSort(callback: Function): void;\n    resetRowHeights(): void;\n    onRowHeightChanged(): void;\n    batchUpdateRowData(rowDataTransaction: RowDataTransaction, callback?: (res: RowNodeTransaction) => void): void;\n    getRootNode(): RowNode;\n    doAggregate(changedPath?: ChangedPath): void;\n    getTopLevelNodes(): RowNode[] | null;\n    forEachPivotNode(callback: Function): void;\n    ensureRowAtPixel(rowNode: RowNode, pixel: number): boolean;\n}\n"]}