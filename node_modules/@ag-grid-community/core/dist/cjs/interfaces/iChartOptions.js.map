{"version":3,"sources":["../../src/ts/interfaces/iChartOptions.ts"],"names":[],"mappings":";;;;;;;;AAAA,IAAY,SAeX;AAfD,WAAY,SAAS;IACjB,4CAA+B,CAAA;IAC/B,4CAA+B,CAAA;IAC/B,kDAAqC,CAAA;IACrC,sCAAyB,CAAA;IACzB,sCAAyB,CAAA;IACzB,4CAA+B,CAAA;IAC/B,0BAAa,CAAA;IACb,gCAAmB,CAAA;IACnB,8BAAiB,CAAA;IACjB,wBAAW,CAAA;IACX,kCAAqB,CAAA;IACrB,0BAAa,CAAA;IACb,wCAA2B,CAAA;IAC3B,8CAAiC,CAAA;AACrC,CAAC,EAfW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAepB","file":"iChartOptions.js","sourcesContent":["export enum ChartType {\n    GroupedColumn = 'groupedColumn',\n    StackedColumn = 'stackedColumn',\n    NormalizedColumn = 'normalizedColumn',\n    GroupedBar = 'groupedBar',\n    StackedBar = 'stackedBar',\n    NormalizedBar = 'normalizedBar',\n    Line = 'line',\n    Scatter = 'scatter',\n    Bubble = 'bubble',\n    Pie = 'pie',\n    Doughnut = 'doughnut',\n    Area = 'area',\n    StackedArea = 'stackedArea',\n    NormalizedArea = 'normalizedArea'\n}\n\nexport type ChartMenuOptions = 'chartSettings' | 'chartData' | 'chartFormat' | 'chartUnlink' | 'chartDownload';\n\nexport interface SeriesOptions {\n    fill: FillOptions;\n    stroke: StrokeOptions;\n    highlightStyle: HighlightOptions;\n}\n\nexport interface ChartOptions<T extends SeriesOptions> {\n    document?: Document;\n    seriesDefaults: T;\n    width: number;\n    height: number;\n    padding: PaddingOptions;\n    background: BackgroundOptions;\n    title: CaptionOptions;\n    subtitle: CaptionOptions;\n    legend: LegendOptions;\n    tooltipClass?: string;\n}\n\nexport interface PaddingOptions {\n    top: number;\n    right: number;\n    bottom: number;\n    left: number;\n}\n\nexport interface BackgroundOptions {\n    fill: string;\n    visible: boolean;\n}\n\nexport interface FontOptions {\n    fontStyle: FontStyle;\n    fontWeight: FontWeight;\n    fontSize: number;\n    fontFamily: string;\n    color: string;\n}\n\nexport declare type FontStyle = 'normal' | 'italic' | 'oblique';\nexport declare type FontWeight = 'normal' | 'bold' | 'bolder' | 'lighter' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900';\n\nexport interface CaptionOptions extends FontOptions {\n    enabled: boolean;\n    text?: string;\n}\n\nexport interface LegendOptions {\n    enabled: boolean;\n    position: LegendPosition;\n    padding: number;\n    item: LegendItemOptions;\n}\n\nexport declare type LegendPosition = 'top' | 'right' | 'bottom' | 'left';\n\nexport interface LegendItemOptions {\n    label: LegendLabelOptions;\n    marker: LegendMarkerOptions;\n    paddingX: number;\n    paddingY: number;\n}\n\nexport interface LegendLabelOptions extends FontOptions {\n}\n\nexport type MarkerType = 'circle' | 'cross' | 'diamond' | 'plus' | 'square' | 'triangle';\n\nexport interface LegendMarkerOptions {\n    type: MarkerType;\n    size: number;\n    padding: number;\n    strokeWidth: number;\n}\n\nexport interface CartesianChartOptions<T extends SeriesOptions> extends ChartOptions<T> {\n    xAxis: AxisOptions;\n    yAxis: AxisOptions;\n}\n\nexport interface PolarChartOptions<T extends SeriesOptions> extends ChartOptions<T> {\n}\n\nexport interface AxisOptions {\n    type?: AxisType;\n    title: CaptionOptions;\n    line: AxisLineOptions;\n    tick: AxisTickOptions;\n    label: AxisLabelOptions;\n    gridStyle: GridStyle[];\n}\n\nexport type AxisType = 'category' | 'number' | 'time';\n\nexport interface AxisLineOptions {\n    width: number;\n    color: string;\n}\n\nexport interface AxisTickOptions {\n    width: number;\n    size: number;\n    color: string;\n}\n\nexport interface AxisLabelOptions extends FontOptions {\n    padding: number;\n    rotation: number;\n    format?: string;\n    formatter?: (value: any, fractionDigits?: number) => string;\n}\n\nexport interface GridStyle {\n    stroke: string;\n    lineDash?: number[];\n}\n\nexport interface HighlightOptions {\n    fill: string;\n    stroke?: string;\n}\n\nexport interface FillOptions {\n    colors: string[];\n    opacity: number;\n}\n\nexport interface StrokeOptions {\n    colors: string[];\n    opacity: number;\n    width: number;\n}\n\nexport interface DropShadowOptions {\n    enabled: boolean;\n    color: string;\n    xOffset: number;\n    yOffset: number;\n    blur: number;\n}\n\nexport interface SeriesLabelOptions extends FontOptions {\n    enabled: boolean;\n}\n\nexport interface TooltipOptions<TParams> {\n    enabled: boolean;\n    renderer?: (params: TParams) => string;\n}\n\nexport interface TooltipRendererParams {\n    datum: any;\n    title?: string;\n    color: string;\n}\n\nexport interface CartesianTooltipRendererParams extends TooltipRendererParams {\n    xKey: string;\n    xName: string;\n\n    yKey: string;\n    yName: string;\n}\n\nexport interface BarSeriesOptions extends SeriesOptions {\n    shadow: DropShadowOptions;\n    label: BarSeriesLabelOptions;\n    tooltip: TooltipOptions<BarTooltipRendererParams>;\n}\n\nexport interface BarSeriesLabelOptions extends SeriesLabelOptions {\n    formatter?: (params: { value: number }) => string;\n}\n\nexport interface BarTooltipRendererParams extends CartesianTooltipRendererParams {\n}\n\nexport interface LineSeriesOptions extends SeriesOptions {\n    marker: MarkerOptions;\n    tooltip: TooltipOptions<LineTooltipRendererParams>;\n}\n\nexport interface MarkerOptions {\n    enabled: boolean;\n    type: MarkerType;\n    size: number;\n    strokeWidth: number;\n}\n\nexport interface LineTooltipRendererParams extends CartesianTooltipRendererParams {\n}\n\nexport interface ScatterSeriesOptions extends SeriesOptions {\n    marker: ScatterMarkerOptions;\n    tooltip: TooltipOptions<ScatterTooltipRendererParams>;\n    paired: boolean;\n}\n\nexport interface ScatterMarkerOptions extends MarkerOptions {\n    minSize?: number;\n}\n\nexport interface ScatterTooltipRendererParams extends CartesianTooltipRendererParams {\n    sizeKey?: string;\n    sizeName?: string;\n\n    labelKey?: string;\n    labelName?: string;\n}\n\nexport interface AreaSeriesOptions extends SeriesOptions {\n    marker: MarkerOptions;\n    shadow: DropShadowOptions;\n    tooltip: TooltipOptions<AreaTooltipRendererParams>;\n}\n\nexport interface AreaTooltipRendererParams extends CartesianTooltipRendererParams {\n}\n\nexport interface PieSeriesOptions extends SeriesOptions {\n    title: CaptionOptions;\n    label: PieSeriesLabelOptions;\n    callout: PieSeriesCalloutOptions;\n    shadow: DropShadowOptions;\n    tooltip: TooltipOptions<PieTooltipRendererParams>;\n}\n\nexport interface PieSeriesLabelOptions extends SeriesLabelOptions {\n    minRequiredAngle: number;\n    offset: number;\n}\n\nexport interface PieSeriesCalloutOptions {\n    length: number;\n    strokeWidth: number;\n    colors: string[];\n}\n\nexport interface PieTooltipRendererParams extends TooltipRendererParams {\n    angleKey: string;\n    angleName?: string;\n\n    labelKey?: string;\n    labelName?: string;\n}\n"]}