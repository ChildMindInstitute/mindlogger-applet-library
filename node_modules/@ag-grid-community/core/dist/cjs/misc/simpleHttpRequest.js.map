{"version":3,"sources":["../../src/ts/misc/simpleHttpRequest.ts"],"names":[],"mappings":";;;;;;;;AAAA,kCAAmC;AAMnC,SAAgB,iBAAiB,CAAC,MAA+B;IAC7D,OAAO,IAAI,eAAO,CAAM,UAAA,OAAO;QAC3B,IAAM,WAAW,GAAG,IAAI,cAAc,EAAE,CAAC;QACzC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;QACpC,WAAW,CAAC,IAAI,EAAE,CAAC;QACnB,WAAW,CAAC,kBAAkB,GAAG;YAC7B,IAAI,WAAW,CAAC,UAAU,IAAI,CAAC,IAAI,WAAW,CAAC,MAAM,IAAI,GAAG,EAAE;gBAC1D,IAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;gBAC1D,OAAO,CAAC,YAAY,CAAC,CAAC;aACzB;QACL,CAAC,CAAC;IAEN,CAAC,CAAC,CAAC;AAEP,CAAC;AAdD,8CAcC","file":"simpleHttpRequest.js","sourcesContent":["import { Promise } from \"../utils\";\n\nexport interface SimpleHttpRequestParams {\n    url: string;\n}\n\nexport function simpleHttpRequest(params: SimpleHttpRequestParams): Promise<any> {\n    return new Promise<any>(resolve => {\n        const httpRequest = new XMLHttpRequest();\n        httpRequest.open('GET', params.url);\n        httpRequest.send();\n        httpRequest.onreadystatechange = function() {\n            if (httpRequest.readyState == 4 && httpRequest.status == 200) {\n                const httpResponse = JSON.parse(httpRequest.responseText);\n                resolve(httpResponse);\n            }\n        };\n\n    });\n\n}\n"]}